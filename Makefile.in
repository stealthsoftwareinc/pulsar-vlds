# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Copyright (C) 2018-2023 Stealth Software Technologies, Inc.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice (including
# the next paragraph) shall be included in all copies or
# substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT
#







VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS =
XFAIL_TESTS =
bin_PROGRAMS =
check_PROGRAMS =
libexec_PROGRAMS =
noinst_PROGRAMS =
pkglibexec_PROGRAMS =
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/DEFINE_ALL.m4 \
	$(top_srcdir)/m4/DEFINE_AR.m4 $(top_srcdir)/m4/DEFINE_AT.m4 \
	$(top_srcdir)/m4/DEFINE_CC.m4 \
	$(top_srcdir)/m4/DEFINE_CLASSPATH.m4 \
	$(top_srcdir)/m4/DEFINE_CLASSPATH_SEPARATOR.m4 \
	$(top_srcdir)/m4/DEFINE_CXX.m4 \
	$(top_srcdir)/m4/DEFINE_EXEEXT.m4 \
	$(top_srcdir)/m4/DEFINE_GZIP.m4 $(top_srcdir)/m4/DEFINE_JAR.m4 \
	$(top_srcdir)/m4/DEFINE_JAVA.m4 \
	$(top_srcdir)/m4/DEFINE_JAVAC.m4 \
	$(top_srcdir)/m4/DEFINE_JAVACFLAGS.m4 \
	$(top_srcdir)/m4/DEFINE_JAVADOC.m4 \
	$(top_srcdir)/m4/DEFINE_JDEPS.m4 \
	$(top_srcdir)/m4/DEFINE_MAKEINFO.m4 \
	$(top_srcdir)/m4/DEFINE_PULSAR_VLDS_ENABLE_INTERNAL_ERROR_CHECKS.m4 \
	$(top_srcdir)/m4/DEFINE_PULSAR_VLDS_ENABLE_INVALID_ARGUMENT_CHECKS.m4 \
	$(top_srcdir)/m4/DEFINE_PULSAR_VLDS_ENABLE_UNDEFINED_BEHAVIOR_CHECKS.m4 \
	$(top_srcdir)/m4/DEFINE_RANLIB.m4 \
	$(top_srcdir)/m4/DEFINE_TAR.m4 $(top_srcdir)/m4/DEFINE_XZ.m4 \
	$(top_srcdir)/m4/DEFINE_javadir.m4 \
	$(top_srcdir)/m4/DEFINE_javadocdir.m4 \
	$(top_srcdir)/m4/GATBPS_ARG_ENABLE.m4 \
	$(top_srcdir)/m4/GATBPS_ARG_ENABLE_BOOL.m4 \
	$(top_srcdir)/m4/GATBPS_CACHE_CHECK.m4 \
	$(top_srcdir)/m4/GATBPS_CHECK_CLASSPATH_SEPARATOR.m4 \
	$(top_srcdir)/m4/GATBPS_CHECK_EXEEXT.m4 \
	$(top_srcdir)/m4/GATBPS_CONFIG_FILE.m4 \
	$(top_srcdir)/m4/GATBPS_CONFIG_FILE_SUBST.m4 \
	$(top_srcdir)/m4/GATBPS_CONFIG_LATER.m4 \
	$(top_srcdir)/m4/GATBPS_CONFIG_LATER_SUBST.m4 \
	$(top_srcdir)/m4/GATBPS_CONFIG_LATER_VAR.m4 \
	$(top_srcdir)/m4/GATBPS_CP.m4 \
	$(top_srcdir)/m4/GATBPS_CP_SUBST.m4 \
	$(top_srcdir)/m4/GATBPS_DEFINE_AT.m4 \
	$(top_srcdir)/m4/GATBPS_DEFINE_CLASSPATH.m4 \
	$(top_srcdir)/m4/GATBPS_DEFINE_DATE.m4 \
	$(top_srcdir)/m4/GATBPS_DEFINE_JAVACFLAGS.m4 \
	$(top_srcdir)/m4/GATBPS_DEFINE_VERSION.m4 \
	$(top_srcdir)/m4/GATBPS_DEFINE_javadir.m4 \
	$(top_srcdir)/m4/GATBPS_DEFINE_javadocdir.m4 \
	$(top_srcdir)/m4/GATBPS_GIT_ARCHIVE_SUBST.m4 \
	$(top_srcdir)/m4/GATBPS_GIT_BUNDLE.m4 \
	$(top_srcdir)/m4/GATBPS_GIT_BUNDLE_SUBST.m4 \
	$(top_srcdir)/m4/GATBPS_GIT_CLONE.m4 \
	$(top_srcdir)/m4/GATBPS_GIT_CLONE_SUBST.m4 \
	$(top_srcdir)/m4/GATBPS_PROG_AR.m4 \
	$(top_srcdir)/m4/GATBPS_PROG_CC.m4 \
	$(top_srcdir)/m4/GATBPS_PROG_CXX.m4 \
	$(top_srcdir)/m4/GATBPS_PROG_MAKEINFO.m4 \
	$(top_srcdir)/m4/GATBPS_PROG_RANLIB.m4 \
	$(top_srcdir)/m4/GATBPS_WGET.m4 \
	$(top_srcdir)/m4/GATBPS_WGET_SUBST.m4 \
	$(top_srcdir)/m4/gatbps_fatal.m4 \
	$(top_srcdir)/m4/gatbps_notice.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/gatbps.ac \
	$(top_srcdir)/build-aux/autogen.ac \
	$(top_srcdir)/src/docker/pulsar-vlds/ac \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(dist_java_DATA) $(dist_pkgdata_DATA) \
	$(dist_pkgdata_cmd_include_DATA) $(dist_pkgdatadir_html_DATA) \
	$(dist_pkgdatadir_html_css_DATA) \
	$(dist_pkgdatadir_html_fonts_DATA) \
	$(dist_pkgdatadir_html_js_DATA) $(dist_pkgsharedstate_DATA) \
	$(include_HEADERS) $(noinst_HEADERS) $(pkginclude_HEADERS) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = doc/manual/config.adoc.im.out \
	doc/pages/_includes/config.liquid.out \
	doc/readme/config.adoc.out \
	lib/pulsar-vlds.jar.classpath.im.out \
	lib/pulsar-vlds.jar.build_tree_classpath.im.out \
	src/com/stealthsoftwareinc/pulsarvlds/ConfigH.java.im.out \
	bin/pulsar-vlds-server.wrappee/pulsar-vlds-server.im.out
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" \
	"$(DESTDIR)$(pkglibexecdir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" \
	"$(DESTDIR)$(pkglibexecdir)" "$(DESTDIR)$(javadir)" \
	"$(DESTDIR)$(pkgdatadir)" \
	"$(DESTDIR)$(pkgdata_cmd_includedir)" \
	"$(DESTDIR)$(pkgdatadir_htmldir)" \
	"$(DESTDIR)$(pkgdatadir_html_cssdir)" \
	"$(DESTDIR)$(pkgdatadir_html_fontsdir)" \
	"$(DESTDIR)$(pkgdatadir_html_jsdir)" \
	"$(DESTDIR)$(pkgsharedstatedir)" "$(DESTDIR)$(pkgdatadir)" \
	"$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludedir)"
PROGRAMS = $(bin_PROGRAMS) $(libexec_PROGRAMS) $(noinst_PROGRAMS) \
	$(pkglibexec_PROGRAMS)
LIBRARIES = $(noinst_LIBRARIES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
SCRIPTS = $(bin_SCRIPTS) $(libexec_SCRIPTS) $(noinst_SCRIPTS) \
	$(pkglibexec_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_java_DATA) $(dist_pkgdata_DATA) \
	$(dist_pkgdata_cmd_include_DATA) $(dist_pkgdatadir_html_DATA) \
	$(dist_pkgdatadir_html_css_DATA) \
	$(dist_pkgdatadir_html_fonts_DATA) \
	$(dist_pkgdatadir_html_js_DATA) $(dist_pkgsharedstate_DATA) \
	$(pkgdata_DATA)
HEADERS = $(include_HEADERS) $(nodist_include_HEADERS) \
	$(nodist_noinst_HEADERS) $(nodist_pkginclude_HEADERS) \
	$(noinst_HEADERS) $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope check recheck distdir distdir-am dist dist-all \
	distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP) \
	config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(srcdir)/build-aux/GATBPS_CONFIG_FILE_RULES.am \
	$(srcdir)/build-aux/GATBPS_CONFIG_LATER_RULES.am \
	$(srcdir)/build-aux/GATBPS_CP_RULES.am \
	$(srcdir)/build-aux/GATBPS_GIT_ARCHIVE_RULES.am \
	$(srcdir)/build-aux/GATBPS_GIT_BUNDLE_RULES.am \
	$(srcdir)/build-aux/GATBPS_GIT_CLONE_RULES.am \
	$(srcdir)/build-aux/GATBPS_VPATH_SEARCH.am \
	$(srcdir)/build-aux/GATBPS_V_PAD.am \
	$(srcdir)/build-aux/GATBPS_WGET_RULES.am \
	$(srcdir)/build-aux/autogen.am $(srcdir)/build-aux/cp.am \
	$(srcdir)/build-aux/docker.am $(srcdir)/build-aux/dvi-dist.am \
	$(srcdir)/build-aux/gatbps.am $(srcdir)/build-aux/git.am \
	$(srcdir)/build-aux/html-dist.am \
	$(srcdir)/build-aux/java-dist.am \
	$(srcdir)/build-aux/javadoc-dist.am \
	$(srcdir)/build-aux/javadoc.am $(srcdir)/build-aux/ps-dist.am \
	$(srcdir)/build-aux/sst.am $(srcdir)/build-aux/wget.am \
	$(srcdir)/config.h.in $(srcdir)/doc/pages/manual.am \
	$(srcdir)/doc/pulsar-vlds.am \
	$(srcdir)/src/docker/pulsar-vlds/am \
	$(top_srcdir)/bin/pulsar-vlds-server.wrappee/pulsar-vlds-server.im.in \
	$(top_srcdir)/build-aux/ar-lib $(top_srcdir)/build-aux/compile \
	$(top_srcdir)/build-aux/config.guess \
	$(top_srcdir)/build-aux/config.sub \
	$(top_srcdir)/build-aux/install-sh \
	$(top_srcdir)/build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/missing \
	$(top_srcdir)/build-aux/test-driver \
	$(top_srcdir)/doc/manual/config.adoc.im.in \
	$(top_srcdir)/doc/pages/_includes/config.liquid.in \
	$(top_srcdir)/doc/readme/config.adoc.in \
	$(top_srcdir)/lib/pulsar-vlds.jar.build_tree_classpath.im.in \
	$(top_srcdir)/lib/pulsar-vlds.jar.classpath.im.in \
	$(top_srcdir)/src/com/stealthsoftwareinc/pulsarvlds/ConfigH.java.im.in \
	build-aux/ar-lib build-aux/compile build-aux/config.guess \
	build-aux/config.sub build-aux/install-sh build-aux/ltmain.sh \
	build-aux/missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
# Exists only to be overridden by the user if desired.
AM_DISTCHECK_DVI_TARGET = dvi
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
ASCIIDOCTOR = @ASCIIDOCTOR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLASSPATH = @CLASSPATH@
CLASSPATH_SEPARATOR = @CLASSPATH_SEPARATOR@
CLASSPATH_SEPARATOR_LATER = @CLASSPATH_SEPARATOR_LATER@
CLASSPATH_SEPARATOR_RAW = @CLASSPATH_SEPARATOR_RAW@
CLASSPATH_SEPARATOR_RAW_LATER = @CLASSPATH_SEPARATOR_RAW_LATER@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOCKER = @DOCKER@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GATBPS_CONFIG_LATER_SCRIPT_MID = @GATBPS_CONFIG_LATER_SCRIPT_MID@
GATBPS_DOCKER_BUILD_FLAGS = @GATBPS_DOCKER_BUILD_FLAGS@
GIT = @GIT@
GREP = @GREP@
GZIP = @GZIP@
HAVE_ASCIIDOCTOR = @HAVE_ASCIIDOCTOR@
HAVE_AWK = @HAVE_AWK@
HAVE_DOCKER = @HAVE_DOCKER@
HAVE_GIT = @HAVE_GIT@
HAVE_GREP = @HAVE_GREP@
HAVE_GZIP = @HAVE_GZIP@
HAVE_JAR = @HAVE_JAR@
HAVE_JAVA = @HAVE_JAVA@
HAVE_JAVAC = @HAVE_JAVAC@
HAVE_JAVADOC = @HAVE_JAVADOC@
HAVE_JDEPS = @HAVE_JDEPS@
HAVE_LN_S = @HAVE_LN_S@
HAVE_MKDIR_P = @HAVE_MKDIR_P@
HAVE_OPENSSL = @HAVE_OPENSSL@
HAVE_SED = @HAVE_SED@
HAVE_SOFT_INCLUDE = @HAVE_SOFT_INCLUDE@
HAVE_TAR = @HAVE_TAR@
HAVE_UNZIP = @HAVE_UNZIP@
HAVE_WGET = @HAVE_WGET@
HAVE_XZ = @HAVE_XZ@
HAVE_ZIP = @HAVE_ZIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVACFLAGS = @JAVACFLAGS@
JAVADOC = @JAVADOC@
JDEPS = @JDEPS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MIT_txt_urls = @MIT_txt_urls@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENSSL = @OPENSSL@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_DATE = @PACKAGE_DATE@
PACKAGE_DATE_DAY = @PACKAGE_DATE_DAY@
PACKAGE_DATE_DAY_ZPAD = @PACKAGE_DATE_DAY_ZPAD@
PACKAGE_DATE_IS_LEAP_YEAR = @PACKAGE_DATE_IS_LEAP_YEAR@
PACKAGE_DATE_MONTH = @PACKAGE_DATE_MONTH@
PACKAGE_DATE_MONTH_ABBR = @PACKAGE_DATE_MONTH_ABBR@
PACKAGE_DATE_MONTH_NAME = @PACKAGE_DATE_MONTH_NAME@
PACKAGE_DATE_MONTH_ZPAD = @PACKAGE_DATE_MONTH_ZPAD@
PACKAGE_DATE_TROFF = @PACKAGE_DATE_TROFF@
PACKAGE_DATE_YEAR = @PACKAGE_DATE_YEAR@
PACKAGE_DATE_YEAR_ZPAD = @PACKAGE_DATE_YEAR_ZPAD@
PACKAGE_LOWER_C_PREFIX = @PACKAGE_LOWER_C_PREFIX@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_NAME_LOWER_UNDERSCORE_SLUG = @PACKAGE_NAME_LOWER_UNDERSCORE_SLUG@
PACKAGE_NAME_UNDERSCORE_SLUG = @PACKAGE_NAME_UNDERSCORE_SLUG@
PACKAGE_NAME_UPPER_UNDERSCORE_SLUG = @PACKAGE_NAME_UPPER_UNDERSCORE_SLUG@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_UPPER_C_PREFIX = @PACKAGE_UPPER_C_PREFIX@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_VERSION_DEB = @PACKAGE_VERSION_DEB@
PACKAGE_VERSION_DEB_TEXI = @PACKAGE_VERSION_DEB_TEXI@
PACKAGE_VERSION_DOCKER = @PACKAGE_VERSION_DOCKER@
PACKAGE_VERSION_DOCKER_TEXI = @PACKAGE_VERSION_DOCKER_TEXI@
PACKAGE_VERSION_GIT = @PACKAGE_VERSION_GIT@
PACKAGE_VERSION_GIT_TEXI = @PACKAGE_VERSION_GIT_TEXI@
PACKAGE_VERSION_LIBTOOL_A = @PACKAGE_VERSION_LIBTOOL_A@
PACKAGE_VERSION_LIBTOOL_C = @PACKAGE_VERSION_LIBTOOL_C@
PACKAGE_VERSION_LIBTOOL_R = @PACKAGE_VERSION_LIBTOOL_R@
PACKAGE_VERSION_MAJOR = @PACKAGE_VERSION_MAJOR@
PACKAGE_VERSION_MINOR = @PACKAGE_VERSION_MINOR@
PACKAGE_VERSION_PATCH = @PACKAGE_VERSION_PATCH@
PACKAGE_VERSION_RPM_R = @PACKAGE_VERSION_RPM_R@
PACKAGE_VERSION_RPM_R_TEXI = @PACKAGE_VERSION_RPM_R_TEXI@
PACKAGE_VERSION_RPM_V = @PACKAGE_VERSION_RPM_V@
PACKAGE_VERSION_RPM_VR = @PACKAGE_VERSION_RPM_VR@
PACKAGE_VERSION_RPM_VR_TEXI = @PACKAGE_VERSION_RPM_VR_TEXI@
PACKAGE_VERSION_RPM_V_TEXI = @PACKAGE_VERSION_RPM_V_TEXI@
PACKAGE_VERSION_TEXI = @PACKAGE_VERSION_TEXI@
PATH_SEPARATOR = @PATH_SEPARATOR@
PULSAR_VLDS_ENABLE_INTERNAL_ERROR_CHECKS = @PULSAR_VLDS_ENABLE_INTERNAL_ERROR_CHECKS@
PULSAR_VLDS_ENABLE_INVALID_ARGUMENT_CHECKS = @PULSAR_VLDS_ENABLE_INVALID_ARGUMENT_CHECKS@
PULSAR_VLDS_ENABLE_UNDEFINED_BEHAVIOR_CHECKS = @PULSAR_VLDS_ENABLE_UNDEFINED_BEHAVIOR_CHECKS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TAR = @TAR@
UNZIP = @UNZIP@
VERSION = @VERSION@
WGET = @WGET@
XZ = @XZ@
ZIP = @ZIP@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bcpkix_jdk15on_1_69_jar_urls = @bcpkix_jdk15on_1_69_jar_urls@
bcprov_jdk15on_1_69_jar_urls = @bcprov_jdk15on_1_69_jar_urls@
bcutil_jdk15on_1_69_jar_urls = @bcutil_jdk15on_1_69_jar_urls@
bindir = @bindir@
bootstrap_3_4_1_glyphicons_halflings_regular_woff2_urls = @bootstrap_3_4_1_glyphicons_halflings_regular_woff2_urls@
bootstrap_3_4_1_glyphicons_halflings_regular_woff_urls = @bootstrap_3_4_1_glyphicons_halflings_regular_woff_urls@
bootstrap_3_4_1_min_css_urls = @bootstrap_3_4_1_min_css_urls@
bootstrap_3_4_1_min_js_urls = @bootstrap_3_4_1_min_js_urls@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
doT_1_1_3_min_js_urls = @doT_1_1_3_min_js_urls@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
javadir = @javadir@
javadocdir = @javadocdir@
jquery_3_6_0_min_js_urls = @jquery_3_6_0_min_js_urls@
jquery_extendext_1_0_0_js_urls = @jquery_extendext_1_0_0_js_urls@
json_20210307_jar_urls = @json_20210307_jar_urls@
junit_jupiter_api_5_5_1_jar_urls = @junit_jupiter_api_5_5_1_jar_urls@
junit_jupiter_params_5_5_1_jar_urls = @junit_jupiter_params_5_5_1_jar_urls@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
mssql_jdbc_9_4_0_jre8_jar_urls = @mssql_jdbc_9_4_0_jre8_jar_urls@
mssql_jdbc_auth_9_4_0_zip_urls = @mssql_jdbc_auth_9_4_0_zip_urls@
mysql_connector_java_5_1_44_tar_gz_urls = @mysql_connector_java_5_1_44_tar_gz_urls@
mysql_connector_java_8_0_17_jar_urls = @mysql_connector_java_8_0_17_jar_urls@
mysql_connector_java_8_0_17_tar_gz_urls = @mysql_connector_java_8_0_17_tar_gz_urls@
netty_all_4_1_65_Final_jar_urls = @netty_all_4_1_65_Final_jar_urls@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
postgresql_42_2_6_jar_urls = @postgresql_42_2_6_jar_urls@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pulsar_vlds_commit = @pulsar_vlds_commit@
pulsar_vlds_urls = @pulsar_vlds_urls@
query_builder_2_6_0_default_min_css_urls = @query_builder_2_6_0_default_min_css_urls@
query_builder_2_6_0_min_js_urls = @query_builder_2_6_0_min_js_urls@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sqlite_jdbc_3_36_0_1_jar_urls = @sqlite_jdbc_3_36_0_1_jar_urls@
srcdir = @srcdir@
sst_tar_gz_urls = @sst_tar_gz_urls@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = src/docker/pulsar-vlds/Dockerfile autogen \
	$(manual_dst).tar.xz doc/$(PACKAGE_TARNAME)-manual.tar.xz \
	$(pages_src) docs doc/readme/diagrams doc/windows/README.txt \
	src/cmd/include src/cmd/include/sst_find_java.cmd \
	src/cmd/include/sst_find_java_home.cmd src/sh/fragments \
	src/sh/fragments/with_build_groups.sh
SUFFIXES = .1 .2 .3 .4 .5 .6 .7 .8 .9 .adoc .class .java .m4 .m4out
include_HEADERS = 
nodist_include_HEADERS = 
SUBDIRS = 
TSUF = $(TMPEXT).tmp
DOCKERFILE_THREADS = 1
GATBPS_EXPORT = case $$x in '' | *[!0-9A-Z_a-z]* | [0-9]*) printf '%s\n' ` `"GATBPS_EXPORT: x must be set to the name of the shell "` `"variable to export."` ` >&2; exit 1; esac; shift || exit $$?; GATBPS_EXPORT_VALUE=` sh - $(srcdir)/build-aux/gatbps-echo.sh -qq -- "$$@" ` || exit $$?; eval $$x=\$$GATBPS_EXPORT_VALUE; export $$x; :
GATBPS_MOSTLYCLEANFILES = $(manual_dst)/clean doc/pages/manual/clean \
	$(pages_dst)/clean \
	src/windows_portable_java/sample/db1.sqlite3/clean \
	src/windows_portable_java/sample/db2.sqlite3/clean \
	src/windows_portable_java/mssql-jdbc_auth-9.4.0.x64.dll/clean \
	pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java/clean \
	pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip/clean \
	pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-native/clean \
	pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-native.zip/clean
GATBPS_CLEANFILES = 
GATBPS_DISTCLEANFILES = 
GATBPS_MAINTAINERCLEANFILES =  \
	build-aux/gatbps-gen-date.sh.cache/clean \
	build-aux/gatbps-gen-libtool-c.sh.cache/clean \
	build-aux/gatbps-gen-version.sh.cache/clean docs/clean
GATBPS_UNINSTALL_MKDIRS = \
  $(bindir)/mkdir00 \
  $(datadir)/$(PACKAGE_TARNAME)/mkdir01 \
  $(datarootdir)/$(PACKAGE_TARNAME)/mkdir02 \
  $(includedir)/$(PACKAGE_TARNAME)/mkdir03 \
  $(libdir)/mkdir04 \
  $(libexecdir)/$(PACKAGE_TARNAME)/mkdir05 \
$(empty)

GATBPS_UNINSTALL_RMFRS = \
  $(datadir)/$(PACKAGE_TARNAME)/rmfr00 \
  $(datarootdir)/$(PACKAGE_TARNAME)/rmfr01 \
  $(includedir)/$(PACKAGE_TARNAME)/rmfr02 \
  $(libdir)/lib$(PACKAGE_TARNAME).a/rmfr03 \
  $(libdir)/lib$(PACKAGE_TARNAME).la/rmfr04 \
  $(libdir)/lib$(PACKAGE_TARNAME).so/rmfr05 \
  $(libexecdir)/$(PACKAGE_TARNAME)/rmfr06 \
$(empty)

GATBPS_RECIPE_MARKER_TOP = : Recipe starting: $@
GATBPS_RECIPE_MARKER_BOT = : Recipe finished: $@
GATBPS_at = @
GATBPS_V_NOP = $(GATBPS_V_NOP_@AM_V@)
GATBPS_V_NOP_ = $(GATBPS_V_NOP_@AM_DEFAULT_V@)
GATBPS_V_NOP_0 = 
GATBPS_V_NOP_1 = $(GATBPS_at)-:
GATBPS_V_ASCIIDOCTOR = $(GATBPS_V_ASCIIDOCTOR_@AM_V@)
GATBPS_V_ASCIIDOCTOR_ = $(GATBPS_V_ASCIIDOCTOR_@AM_DEFAULT_V@)
GATBPS_V_ASCIIDOCTOR_0 = @printf '  %s      %s\n' ASCIIDOCTOR $@ || :;
GATBPS_V_ASCIIDOCTOR_1 = 
GATBPS_V_ASCIIDOCTOR_PDF = $(GATBPS_V_ASCIIDOCTOR_PDF_@AM_V@)
GATBPS_V_ASCIIDOCTOR_PDF_ = $(GATBPS_V_ASCIIDOCTOR_PDF_@AM_DEFAULT_V@)
GATBPS_V_ASCIIDOCTOR_PDF_0 = @printf '  %s  %s\n' ASCIIDOCTOR-PDF $@ || :;
GATBPS_V_ASCIIDOCTOR_PDF_1 = 
GATBPS_V_AWK = $(GATBPS_V_AWK_@AM_V@)
GATBPS_V_AWK_ = $(GATBPS_V_AWK_@AM_DEFAULT_V@)
GATBPS_V_AWK_0 = @printf '  %s      %s\n' AWK $@ || :;
GATBPS_V_AWK_1 = 
GATBPS_V_FORCE = $(GATBPS_V_FORCE_@AM_V@)
GATBPS_V_FORCE_ = $(GATBPS_V_FORCE_@AM_DEFAULT_V@)
GATBPS_V_FORCE_0 = @printf '  %s    %s\n' FORCE $@ || :;
GATBPS_V_FORCE_1 = 
GATBPS_V_GATBPS = $(GATBPS_V_GATBPS_@AM_V@)
GATBPS_V_GATBPS_ = $(GATBPS_V_GATBPS_@AM_DEFAULT_V@)
GATBPS_V_GATBPS_0 = @printf '  %s   %s\n' GATBPS $@ || :;
GATBPS_V_GATBPS_1 = 
GATBPS_V_GUNZIP = $(GATBPS_V_GUNZIP_@AM_V@)
GATBPS_V_GUNZIP_ = $(GATBPS_V_GUNZIP_@AM_DEFAULT_V@)
GATBPS_V_GUNZIP_0 = @printf '  %s   %s\n' GUNZIP $@ || :;
GATBPS_V_GUNZIP_1 = 
GATBPS_V_GZIP = $(GATBPS_V_GZIP_@AM_V@)
GATBPS_V_GZIP_ = $(GATBPS_V_GZIP_@AM_DEFAULT_V@)
GATBPS_V_GZIP_0 = @printf '  %s     %s\n' GZIP $@ || :;
GATBPS_V_GZIP_1 = 
GATBPS_V_JAR = $(GATBPS_V_JAR_@AM_V@)
GATBPS_V_JAR_ = $(GATBPS_V_JAR_@AM_DEFAULT_V@)
GATBPS_V_JAR_0 = @printf '  %s      %s\n' JAR $@ || :;
GATBPS_V_JAR_1 = 
GATBPS_V_JAVAC = $(GATBPS_V_JAVAC_@AM_V@)
GATBPS_V_JAVAC_ = $(GATBPS_V_JAVAC_@AM_DEFAULT_V@)
GATBPS_V_JAVAC_0 = @printf '  %s    %s\n' JAVAC $@ || :;
GATBPS_V_JAVAC_1 = 
GATBPS_V_JAVADOC = $(GATBPS_V_JAVADOC_@AM_V@)
GATBPS_V_JAVADOC_ = $(GATBPS_V_JAVADOC_@AM_DEFAULT_V@)
GATBPS_V_JAVADOC_0 = @printf '  %s  %s\n' JAVADOC $@ || :;
GATBPS_V_JAVADOC_1 = 
GATBPS_V_JAVA_ = $(GATBPS_V_JAVA__@AM_V@)
GATBPS_V_JAVA__ = $(GATBPS_V_JAVA__@AM_DEFAULT_V@)
GATBPS_V_JAVA__0 = @printf '  %s     %s\n' JAVA $@ || :;
GATBPS_V_JAVA__1 = 
GATBPS_V_JDEPS = $(GATBPS_V_JDEPS_@AM_V@)
GATBPS_V_JDEPS_ = $(GATBPS_V_JDEPS_@AM_DEFAULT_V@)
GATBPS_V_JDEPS_0 = @printf '  %s    %s\n' JDEPS $@ || :;
GATBPS_V_JDEPS_1 = 
GATBPS_V_M4 = $(GATBPS_V_M4_@AM_V@)
GATBPS_V_M4_ = $(GATBPS_V_M4_@AM_DEFAULT_V@)
GATBPS_V_M4_0 = @printf '  %s       %s\n' M4 $@ || :;
GATBPS_V_M4_1 = 
GATBPS_V_MAKE = $(GATBPS_V_MAKE_@AM_V@)
GATBPS_V_MAKE_ = $(GATBPS_V_MAKE_@AM_DEFAULT_V@)
GATBPS_V_MAKE_0 = @printf '  %s     %s\n' MAKE $@ || :;
GATBPS_V_MAKE_1 = 
GATBPS_V_SQLITE3 = $(GATBPS_V_SQLITE3_@AM_V@)
GATBPS_V_SQLITE3_ = $(GATBPS_V_SQLITE3_@AM_DEFAULT_V@)
GATBPS_V_SQLITE3_0 = @printf '  %s  %s\n' SQLITE3 $@ || :;
GATBPS_V_SQLITE3_1 = 
GATBPS_V_TAR = $(GATBPS_V_TAR_@AM_V@)
GATBPS_V_TAR_ = $(GATBPS_V_TAR_@AM_DEFAULT_V@)
GATBPS_V_TAR_0 = @printf '  %s      %s\n' TAR $@ || :;
GATBPS_V_TAR_1 = 
GATBPS_V_UNTAR = $(GATBPS_V_UNTAR_@AM_V@)
GATBPS_V_UNTAR_ = $(GATBPS_V_UNTAR_@AM_DEFAULT_V@)
GATBPS_V_UNTAR_0 = @printf '  %s    %s\n' UNTAR $@ || :;
GATBPS_V_UNTAR_1 = 
GATBPS_V_UNXZ = $(GATBPS_V_UNXZ_@AM_V@)
GATBPS_V_UNXZ_ = $(GATBPS_V_UNXZ_@AM_DEFAULT_V@)
GATBPS_V_UNXZ_0 = @printf '  %s     %s\n' UNXZ $@ || :;
GATBPS_V_UNXZ_1 = 
GATBPS_V_UNZIP = $(GATBPS_V_UNZIP_@AM_V@)
GATBPS_V_UNZIP_ = $(GATBPS_V_UNZIP_@AM_DEFAULT_V@)
GATBPS_V_UNZIP_0 = @printf '  %s    %s\n' UNZIP $@ || :;
GATBPS_V_UNZIP_1 = 
GATBPS_V_XZ = $(GATBPS_V_XZ_@AM_V@)
GATBPS_V_XZ_ = $(GATBPS_V_XZ_@AM_DEFAULT_V@)
GATBPS_V_XZ_0 = @printf '  %s       %s\n' XZ $@ || :;
GATBPS_V_XZ_1 = 
GATBPS_V_ZIP = $(GATBPS_V_ZIP_@AM_V@)
GATBPS_V_ZIP_ = $(GATBPS_V_ZIP_@AM_DEFAULT_V@)
GATBPS_V_ZIP_0 = @printf '  %s      %s\n' ZIP $@ || :;
GATBPS_V_ZIP_1 = 
GATBPS_DISTFILES_N = 100
GATBPS_DISTFILES_0 = doc/manual/build.phony.ag \
	src/bash/include/jq/jq_expect_strings_or_null.bash \
	src/bash/include/sst_include.bash unittest/test12/DB2.cfg \
	unittest/test7/q7-4.ans
GATBPS_DISTFILES_1 =  \
	build-aux/sst_ajh_asciidoctor_document_html_recipe.sh \
	src/bash/include/jq/jq_expect_type.bash \
	src/bash/include/sst_info.bash unittest/test12/Front.cfg \
	unittest/test7/q7-4.rest
GATBPS_DISTFILES_2 = doc/manual/index.html.ag.json \
	src/bash/include/jq/jq_expect_type_or_null.bash \
	src/bash/include/sst_install_utility.bash \
	unittest/test12/PH.cfg unittest/testA/DB1.cfg
GATBPS_DISTFILES_3 = doc/manual/acknowledgments.adoc \
	src/bash/include/jq/jq_expect_types.bash \
	src/bash/include/sst_install_utility_from_map.bash \
	unittest/test12/Test12DB1.sql unittest/testA/DB2.cfg
GATBPS_DISTFILES_4 = doc/manual/attributes.adoc \
	src/bash/include/jq/jq_expect_types_or_null.bash \
	src/bash/include/sst_is_errexit_suspended.bash \
	unittest/test12/Test12DB2.sql unittest/testA/Front.cfg
GATBPS_DISTFILES_5 =  \
	doc/manual/configuring_the_database_connections.adoc \
	src/bash/include/jq/jq_inline.bash \
	src/bash/include/sst_join.bash unittest/test12/Test12Lex.json \
	unittest/testA/PH.cfg
GATBPS_DISTFILES_6 =  \
	doc/manual/configuring_the_interserver_connections.adoc \
	src/bash/include/sst_abs_dir.bash \
	src/bash/include/sst_jq_expect.bash unittest/test12/q1-1.ans \
	unittest/testA/TestADB1.sql
GATBPS_DISTFILES_7 = doc/manual/configuring_the_lexicon.adoc \
	src/bash/include/sst_abs_file.bash \
	src/bash/include/sst_jq_get_boolean_or_null.bash \
	unittest/test12/q1-1.rest unittest/testA/TestADB2.sql
GATBPS_DISTFILES_8 = doc/manual/configuring_the_servers.adoc \
	src/bash/include/sst_abs_prefix.bash \
	src/bash/include/sst_jq_get_string.bash \
	unittest/test12/q1-2.ans unittest/testA/TestALex.json
GATBPS_DISTFILES_9 = doc/manual/index.adoc \
	src/bash/include/sst_ac_append.bash \
	src/bash/include/sst_jq_get_string_or_null.bash \
	unittest/test12/q1-2.rest unittest/testA/qA-1.ans
GATBPS_DISTFILES_10 = doc/manual/installing_pulsar_vlds.adoc \
	src/bash/include/sst_ac_config_file.bash \
	src/bash/include/sst_jq_get_strings.bash \
	unittest/test12/q1-3.ans unittest/testA/qA-1.rest
GATBPS_DISTFILES_11 =  \
	doc/manual/installing_the_portable_windows_edition.adoc \
	src/bash/include/sst_ac_finish.bash \
	src/bash/include/sst_json_escape.bash \
	unittest/test12/q1-3.rest unittest/testA/qA-2.ans
GATBPS_DISTFILES_12 = doc/manual/installing_the_prerequisites.adoc \
	src/bash/include/sst_ac_include.bash \
	src/bash/include/sst_json_quote.bash unittest/test2/DB1.cfg \
	unittest/testA/qA-2.rest
GATBPS_DISTFILES_13 = doc/manual/introduction.adoc \
	src/bash/include/sst_ac_start.bash \
	src/bash/include/sst_kill_all_jobs.bash unittest/test2/DB2.cfg \
	unittest/testA/qA-3.ans
GATBPS_DISTFILES_14 = doc/manual/java_library.adoc \
	src/bash/include/sst_add_slash.bash \
	src/bash/include/sst_make.bash unittest/test2/Front.cfg \
	unittest/testA/qA-3.rest
GATBPS_DISTFILES_15 = doc/manual/jl_aggregate.adoc \
	src/bash/include/sst_add_slash_abs_prefix.bash \
	src/bash/include/sst_make_j.bash unittest/test2/PH.cfg \
	unittest/testA/qA-4.ans
GATBPS_DISTFILES_16 = doc/manual/jl_aggregate_function.adoc \
	src/bash/include/sst_add_slash_dot_slash.bash \
	src/bash/include/sst_mkdir_p_new.bash \
	unittest/test2/Test2DB1.sql unittest/testA/qA-4.rest
GATBPS_DISTFILES_17 = doc/manual/jl_channel_output_buffer_limit.adoc \
	src/bash/include/sst_ag_call_defun_once_macros.bash \
	src/bash/include/sst_mkdir_p_only.bash \
	unittest/test2/Test2DB2.sql unittest/unittest.bash
GATBPS_DISTFILES_18 = doc/manual/jl_column.adoc \
	src/bash/include/sst_ag_define_ordering_macros.bash \
	src/bash/include/sst_nl.bash unittest/test2/Test2Lex.json \
	build-aux/downloads/MIT.txt.ag.json
GATBPS_DISTFILES_19 = doc/manual/jl_column_type.adoc \
	src/bash/include/sst_ag_finish.bash \
	src/bash/include/sst_parse_opt.bash unittest/test2/q2-1.ans \
	build-aux/downloads/bcpkix-jdk15on-1.69.jar.ag.json
GATBPS_DISTFILES_20 = doc/manual/jl_condition.adoc \
	src/bash/include/sst_ag_include.bash \
	src/bash/include/sst_pop_var.bash unittest/test2/q2-1.rest \
	build-aux/downloads/bcprov-jdk15on-1.69.jar.ag.json
GATBPS_DISTFILES_21 = doc/manual/jl_condition_operator.adoc \
	src/bash/include/sst_ag_install_bash_library.bash \
	src/bash/include/sst_popd.bash unittest/test2/q2-2.ans \
	build-aux/downloads/bcutil-jdk15on-1.69.jar.ag.json
GATBPS_DISTFILES_22 = doc/manual/jl_condition_token.adoc \
	src/bash/include/sst_ag_process_leaf.bash \
	src/bash/include/sst_push_postmortem_job_container.bash \
	unittest/test2/q2-2.rest \
	build-aux/downloads/bootstrap-3.4.1-glyphicons-halflings-regular.woff.ag.json
GATBPS_DISTFILES_23 = doc/manual/jl_config.adoc \
	src/bash/include/sst_ag_start.bash \
	src/bash/include/sst_push_var.bash unittest/test2/q2-3.ans \
	build-aux/downloads/bootstrap-3.4.1-glyphicons-halflings-regular.woff2.ag.json
GATBPS_DISTFILES_24 = doc/manual/jl_dbinfo.adoc \
	src/bash/include/sst_ajh_asciidoctor_document.bash \
	src/bash/include/sst_pushd.bash unittest/test2/q2-3.rest \
	build-aux/downloads/bootstrap-3.4.1.min.css.ag.json
GATBPS_DISTFILES_25 = doc/manual/jl_lexicon.adoc \
	src/bash/include/sst_ajh_build_tree_program_wrapper.bash \
	src/bash/include/sst_quote.bash unittest/test2/q2-4.ans \
	build-aux/downloads/bootstrap-3.4.1.min.js.ag.json
GATBPS_DISTFILES_26 = doc/manual/jl_lexicon_common.adoc \
	src/bash/include/sst_ajh_c_cpp_test.bash \
	src/bash/include/sst_quote_list.bash unittest/test2/q2-4.rest \
	build-aux/downloads/doT-1.1.3.min.js.ag.json
GATBPS_DISTFILES_27 = doc/manual/jl_party.adoc \
	src/bash/include/sst_ajh_download.bash \
	src/bash/include/sst_regex_escape.bash unittest/test3/DB1.cfg \
	build-aux/downloads/jquery-3.6.0.min.js.ag.json
GATBPS_DISTFILES_28 = doc/manual/jl_query.adoc \
	src/bash/include/sst_ajh_gitbundle.bash \
	src/bash/include/sst_regex_escape_list.bash \
	unittest/test3/DB2.cfg \
	build-aux/downloads/jquery-extendext-1.0.0.js.ag.json
GATBPS_DISTFILES_29 = doc/manual/jl_table.adoc \
	src/bash/include/sst_ajh_java_library.bash \
	src/bash/include/sst_safe_dir.bash unittest/test3/Front.cfg \
	build-aux/downloads/json-20210307.jar.ag.json
GATBPS_DISTFILES_30 = doc/manual/partials/acknowledgments.adoc \
	src/bash/include/sst_ajh_java_program_wrapper.bash \
	src/bash/include/sst_safe_file.bash unittest/test3/PH.cfg \
	build-aux/downloads/junit-jupiter-api-5.5.1.jar.ag.json
GATBPS_DISTFILES_31 = doc/manual/partials/introduction.adoc \
	src/bash/include/sst_ajh_java_test_suite.bash \
	src/bash/include/sst_set_exit.bash unittest/test3/Test3DB1.sql \
	build-aux/downloads/junit-jupiter-params-5.5.1.jar.ag.json
GATBPS_DISTFILES_32 = doc/manual/underlying_name_fragment.adoc \
	src/bash/include/sst_am_append.bash \
	src/bash/include/sst_smart_quote.bash \
	unittest/test3/Test3DB2.sql \
	build-aux/downloads/mssql-jdbc-9.4.0.jre8.jar.ag.json
GATBPS_DISTFILES_33 = doc/manual/index.html.children \
	src/bash/include/sst_am_distribute.bash \
	src/bash/include/sst_squish_slashes.bash \
	unittest/test3/Test3Lex.json \
	build-aux/downloads/mssql-jdbc_auth-9.4.0.zip.ag.json
GATBPS_DISTFILES_34 = doc/manual/index.html.children_nodist \
	src/bash/include/sst_am_distribute_if_not_dir.bash \
	src/bash/include/sst_test.bash unittest/test3/q3-1.ans \
	build-aux/downloads/mysql-connector-java-5.1.44.tar.gz.ag.json
GATBPS_DISTFILES_35 = doc/pages/build.phony.ag \
	src/bash/include/sst_am_elif.bash \
	src/bash/include/sst_test_fail.bash unittest/test3/q3-1.rest \
	build-aux/downloads/mysql-connector-java-8.0.17.jar.ag.json
GATBPS_DISTFILES_36 = doc/readme/build.phony.ag \
	src/bash/include/sst_am_else.bash \
	src/bash/include/sst_trap_append.bash unittest/test3/q3-2.ans \
	build-aux/downloads/mysql-connector-java-8.0.17.tar.gz.ag.json
GATBPS_DISTFILES_37 = doc/readme/common.adoc \
	src/bash/include/sst_am_endif.bash \
	src/bash/include/sst_trim_slashes.bash \
	unittest/test3/q3-2.rest \
	build-aux/downloads/mysql-connector-java.tar.any.ag.json
GATBPS_DISTFILES_38 = doc/readme/flatten.gawk \
	src/bash/include/sst_am_finish.bash \
	src/bash/include/sst_type.bash unittest/test3/q3-3.ans \
	build-aux/downloads/netty-all-4.1.65.Final.jar.ag.json
GATBPS_DISTFILES_39 = doc/readme/readme.adoc \
	src/bash/include/sst_am_if.bash \
	src/bash/include/sst_ubuntu_get_distro_version.bash \
	unittest/test3/q3-3.rest \
	build-aux/downloads/postgresql-42.2.6.jar.ag.json
GATBPS_DISTFILES_40 = doc/readme/config.adoc \
	src/bash/include/sst_am_include.bash \
	src/bash/include/sst_ubuntu_install_raw.bash \
	unittest/test3/q3-4.ans \
	build-aux/downloads/query-builder-2.6.0.default.min.css.ag.json
GATBPS_DISTFILES_41 = src/html/build.phony.ag \
	src/bash/include/sst_am_install.bash \
	src/bash/include/sst_ubuntu_install_utility.bash \
	unittest/test3/q3-4.rest \
	build-aux/downloads/query-builder-2.6.0.min.js.ag.json
GATBPS_DISTFILES_42 = src/windows_portable_java/build.phony.ag \
	src/bash/include/sst_am_restore_if.bash \
	src/bash/include/sst_underscore_slug.bash \
	unittest/test4/DB1.cfg \
	build-aux/downloads/sqlite-jdbc-3.36.0.1.jar.ag.json
GATBPS_DISTFILES_43 = src/windows_portable_java/Dockerfile \
	src/bash/include/sst_am_start.bash \
	src/bash/include/sst_unimplemented.bash unittest/test4/DB2.cfg \
	build-aux/downloads/sst.tar.gz.ag.json
GATBPS_DISTFILES_44 = src/windows_portable_java/db1.cfg \
	src/bash/include/sst_am_suspend_if.bash \
	src/bash/include/sst_unix_like_install_docker_compose.bash \
	unittest/test4/Front.cfg \
	build-aux/gitbundles/pulsar-vlds.ag.json
GATBPS_DISTFILES_45 = src/windows_portable_java/db2.cfg \
	src/bash/include/sst_am_var_add.bash \
	src/bash/include/sst_unknown_get_distro_version.bash \
	unittest/test4/PH.cfg lib/pulsar-vlds.jar.ag.json
GATBPS_DISTFILES_46 = src/windows_portable_java/manual.html \
	src/bash/include/sst_am_var_add_unique_file.bash \
	src/bash/include/sst_unknown_opt.bash \
	unittest/test4/Test4DB1.sql \
	src/com/stealthsoftwareinc/pulsarvlds/ActiveQuery.java
GATBPS_DISTFILES_47 = src/windows_portable_java/ph.cfg \
	src/bash/include/sst_am_var_add_unique_word.bash \
	src/bash/include/sst_warn.bash unittest/test4/Test4DB2.sql \
	src/com/stealthsoftwareinc/pulsarvlds/Aggregate.java
GATBPS_DISTFILES_48 = src/windows_portable_java/server.cmd \
	src/bash/include/sst_am_var_set.bash src/bash/sst.bash \
	unittest/test4/Test4Lex.json \
	src/com/stealthsoftwareinc/pulsarvlds/AggregateFunction.java
GATBPS_DISTFILES_49 = src/windows_portable_native/build.phony.ag \
	src/bash/include/sst_am_var_set_const.bash \
	src/install/from-dist/on-ubuntu unittest/test4/q4-1.ans \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousColumnException.java
GATBPS_DISTFILES_50 = src/windows_portable_native/jni-config.json \
	src/bash/include/sst_array_cmp.bash \
	src/install/from-dist/on-ubuntu-18.04 unittest/test4/q4-1.rest \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousTableException.java
GATBPS_DISTFILES_51 =  \
	src/windows_portable_native/predefined-classes-config.json \
	src/bash/include/sst_array_contains.bash \
	src/install/from-dist/on-ubuntu-20.04 unittest/test4/q4-2.ans \
	src/com/stealthsoftwareinc/pulsarvlds/ChannelOutputBufferLimit.java
GATBPS_DISTFILES_52 = src/windows_portable_native/proxy-config.json \
	src/bash/include/sst_array_from_zterm.bash \
	src/install/from-dist/on-ubuntu-22.04 unittest/test4/q4-2.rest \
	src/com/stealthsoftwareinc/pulsarvlds/Column.java
GATBPS_DISTFILES_53 = src/windows_portable_native/recipe.sh \
	src/bash/include/sst_array_to_string.bash \
	src/install/from-repo/on-ubuntu unittest/test4/q4-3.ans \
	src/com/stealthsoftwareinc/pulsarvlds/ColumnType.java
GATBPS_DISTFILES_54 = src/windows_portable_native/reflect-config.json \
	src/bash/include/sst_barf.bash \
	src/install/from-repo/on-ubuntu-18.04 unittest/test4/q4-3.rest \
	src/com/stealthsoftwareinc/pulsarvlds/Comparison.java
GATBPS_DISTFILES_55 =  \
	src/windows_portable_native/resource-config.json \
	src/bash/include/sst_centos_get_distro_version.bash \
	src/install/from-repo/on-ubuntu-20.04 unittest/test4/q4-4.ans \
	src/com/stealthsoftwareinc/pulsarvlds/ComparisonOperator.java
GATBPS_DISTFILES_56 =  \
	src/windows_portable_native/serialization-config.json \
	src/bash/include/sst_centos_install_raw.bash \
	src/install/from-repo/on-ubuntu-22.04 unittest/test4/q4-4.rest \
	src/com/stealthsoftwareinc/pulsarvlds/Condition.java
GATBPS_DISTFILES_57 = src/windows_portable_native/server.cmd \
	src/bash/include/sst_centos_install_utility.bash \
	src/install/on-x unittest/test5/DB1.cfg \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionOperator.java
GATBPS_DISTFILES_58 = LICENSE \
	src/bash/include/sst_copyright_notice.bash \
	src/install/on-x-symbolic-link-test unittest/test5/DB2.cfg \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionToken.java
GATBPS_DISTFILES_59 = README.adoc src/bash/include/sst_csf.bash \
	sst.bash unittest/test5/Front.cfg \
	src/com/stealthsoftwareinc/pulsarvlds/Config.java
GATBPS_DISTFILES_60 = build-aux/adock \
	src/bash/include/sst_curl_slurp.bash \
	unittest/test1/Test1DB1.sql.00.mysql unittest/test5/PH.cfg \
	src/com/stealthsoftwareinc/pulsarvlds/DbInfo.java
GATBPS_DISTFILES_61 = build-aux/gatbps-echo.sh \
	src/bash/include/sst_cygwin_get_distro_version.bash \
	unittest/test1/Test1DB1.sql.00.sqlserver \
	unittest/test5/Test5DB1.sql \
	src/com/stealthsoftwareinc/pulsarvlds/DbStartQueryEvent.java
GATBPS_DISTFILES_62 = build-aux/gatbps-gen-date.sh \
	src/bash/include/sst_cygwin_install_raw.bash \
	unittest/test1/Test1DB1.sql.10 unittest/test5/Test5DB2.sql \
	src/com/stealthsoftwareinc/pulsarvlds/DomainIterator.java
GATBPS_DISTFILES_63 = build-aux/gatbps-gen-date.sh.cache \
	src/bash/include/sst_cygwin_install_utility.bash \
	unittest/test1/Test1DB2.sql.00.mysql \
	unittest/test5/Test5Lex.json \
	src/com/stealthsoftwareinc/pulsarvlds/FrontServerHttpResponse.java
GATBPS_DISTFILES_64 = build-aux/gatbps-gen-version.sh \
	src/bash/include/sst_dot_slash.bash \
	unittest/test1/Test1DB2.sql.00.sqlserver \
	unittest/test5/q5-1.ans \
	src/com/stealthsoftwareinc/pulsarvlds/Globals.java
GATBPS_DISTFILES_65 = build-aux/gatbps-gen-version.sh.cache \
	src/bash/include/sst_dpkg_loop.bash \
	unittest/test1/Test1DB2.sql.10 unittest/test5/q5-1.rest \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelHandler.java
GATBPS_DISTFILES_66 = build-aux/pulsar-vlds.srcdir \
	src/bash/include/sst_echo_eval.bash unittest/test1/common.cfg \
	unittest/test5/q5-2.ans \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelInitializer.java
GATBPS_DISTFILES_67 = install/on-ubuntu \
	src/bash/include/sst_ensure_modern_environment.bash \
	unittest/test1/db1.cfg unittest/test5/q5-2.rest \
	src/com/stealthsoftwareinc/pulsarvlds/Lexicon.java
GATBPS_DISTFILES_68 = src/bash/include/array/array_contains.bash \
	src/bash/include/sst_environment_slug.bash \
	unittest/test1/db1.cfg.mysql unittest/test5/q5-3.ans \
	src/com/stealthsoftwareinc/pulsarvlds/LexiconCommon.java
GATBPS_DISTFILES_69 = src/bash/include/autogen/autogen_ac_append.bash \
	src/bash/include/sst_exec.bash unittest/test1/db1.cfg.sqlite \
	unittest/test5/q5-3.rest \
	src/com/stealthsoftwareinc/pulsarvlds/Party.java
GATBPS_DISTFILES_70 =  \
	src/bash/include/autogen/autogen_am_var_append.bash \
	src/bash/include/sst_expect_ag_json.bash \
	unittest/test1/db1.cfg.sqlserver unittest/test5/q5-4.ans \
	src/com/stealthsoftwareinc/pulsarvlds/PhStartQueryEvent.java
GATBPS_DISTFILES_71 =  \
	src/bash/include/autogen/autogen_print_ac_header.bash \
	src/bash/include/sst_expect_any_file.bash \
	unittest/test1/db2.cfg unittest/test5/q5-4.rest \
	src/com/stealthsoftwareinc/pulsarvlds/Query.java
GATBPS_DISTFILES_72 =  \
	src/bash/include/autogen/autogen_print_am_header.bash \
	src/bash/include/sst_expect_argument_count.bash \
	unittest/test1/db2.cfg.mysql unittest/test6/DB1.cfg \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelFactory.java
GATBPS_DISTFILES_73 = src/bash/include/autogen/autogen_texinfo.bash \
	src/bash/include/sst_expect_at_most_one_call.bash \
	unittest/test1/db2.cfg.sqlite unittest/test6/DB2.cfg \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelHandler.java
GATBPS_DISTFILES_74 = src/bash/include/config_h_get_string.bash \
	src/bash/include/sst_expect_basic_identifier.bash \
	unittest/test1/db2.cfg.sqlserver unittest/test6/Front.cfg \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelInitializer.java
GATBPS_DISTFILES_75 = src/bash/include/expect_safe_path.bash \
	src/bash/include/sst_expect_errexit.bash \
	unittest/test1/gen1.py unittest/test6/PH.cfg \
	src/com/stealthsoftwareinc/pulsarvlds/Server.java
GATBPS_DISTFILES_76 =  \
	src/bash/include/gitlab_ci_docker_push_here.bash \
	src/bash/include/sst_expect_exit_status.bash \
	unittest/test1/gen2.py unittest/test6/Test6DB1.sql \
	src/com/stealthsoftwareinc/pulsarvlds/SharedWebSocketData.java
GATBPS_DISTFILES_77 = src/bash/include/install_local_git.bash \
	src/bash/include/sst_expect_extension.bash \
	unittest/test1/ph.cfg unittest/test6/Test6DB2.sql \
	src/com/stealthsoftwareinc/pulsarvlds/StateStream.java
GATBPS_DISTFILES_78 = src/bash/include/jq/jq_expect_array.bash \
	src/bash/include/sst_expect_file.bash unittest/test1/q1-1.ans \
	unittest/test6/Test6Lex.json \
	src/com/stealthsoftwareinc/pulsarvlds/Table.java
GATBPS_DISTFILES_79 =  \
	src/bash/include/jq/jq_expect_array_or_null.bash \
	src/bash/include/sst_expect_maybe_file.bash \
	unittest/test1/q1-1.rest unittest/test6/q6-1.ans \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownColumnException.java
GATBPS_DISTFILES_80 = src/bash/include/jq/jq_expect_arrays.bash \
	src/bash/include/sst_expect_not_exist.bash \
	unittest/test1/q1-2.ans unittest/test6/q6-1.rest \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownTableException.java
GATBPS_DISTFILES_81 =  \
	src/bash/include/jq/jq_expect_arrays_or_null.bash \
	src/bash/include/sst_expect_not_subshell.bash \
	unittest/test1/q1-2.rest unittest/test6/q6-2.ans \
	src/com/stealthsoftwareinc/pulsarvlds/WebSocketHandler.java
GATBPS_DISTFILES_82 = src/bash/include/jq/jq_expect_boolean.bash \
	src/bash/include/sst_expect_prefix.bash \
	unittest/test1/q1-3.ans unittest/test6/q6-2.rest \
	bin/pulsar-vlds-server.wrappee/pulsar-vlds-server.ag.json
GATBPS_DISTFILES_83 =  \
	src/bash/include/jq/jq_expect_boolean_or_null.bash \
	src/bash/include/sst_expect_source_path.bash \
	unittest/test1/q1-3.rest unittest/test6/q6-3.ans \
	bin/pulsar-vlds-server.ag.json
GATBPS_DISTFILES_84 = src/bash/include/jq/jq_expect_booleans.bash \
	src/bash/include/sst_expect_utf8.bash unittest/test1/q1-4.ans \
	unittest/test6/q6-3.rest bin/pulsar-vlds-server.im
GATBPS_DISTFILES_85 =  \
	src/bash/include/jq/jq_expect_booleans_or_null.bash \
	src/bash/include/sst_extract_archive.bash \
	unittest/test1/q1-4.rest unittest/test6/q6-4.ans
GATBPS_DISTFILES_86 = src/bash/include/jq/jq_expect_null.bash \
	src/bash/include/sst_find_dist_archive.bash \
	unittest/test11/DB1.cfg unittest/test6/q6-4.rest
GATBPS_DISTFILES_87 = src/bash/include/jq/jq_expect_nulls.bash \
	src/bash/include/sst_find_dist_date.bash \
	unittest/test11/DB2.cfg unittest/test7/DB1.cfg
GATBPS_DISTFILES_88 =  \
	src/bash/include/jq/jq_expect_nulls_or_null.bash \
	src/bash/include/sst_find_dist_version.bash \
	unittest/test11/Front.cfg unittest/test7/DB2.cfg
GATBPS_DISTFILES_89 = src/bash/include/jq/jq_expect_number.bash \
	src/bash/include/sst_get_distro.bash unittest/test11/PH.cfg \
	unittest/test7/Front.cfg
GATBPS_DISTFILES_90 =  \
	src/bash/include/jq/jq_expect_number_or_null.bash \
	src/bash/include/sst_get_distro_version.bash \
	unittest/test11/Test1DB1.sql unittest/test7/PH.cfg
GATBPS_DISTFILES_91 = src/bash/include/jq/jq_expect_numbers.bash \
	src/bash/include/sst_get_environment_variables.bash \
	unittest/test11/Test1DB2.sql unittest/test7/Test7DB1.sql
GATBPS_DISTFILES_92 =  \
	src/bash/include/jq/jq_expect_numbers_or_null.bash \
	src/bash/include/sst_get_have_make_j.bash \
	unittest/test11/Test1Lex.json unittest/test7/Test7DB2.sql
GATBPS_DISTFILES_93 = src/bash/include/jq/jq_expect_object.bash \
	src/bash/include/sst_get_max_procs.bash \
	unittest/test11/q1-1.ans unittest/test7/Test7Lex.json
GATBPS_DISTFILES_94 =  \
	src/bash/include/jq/jq_expect_object_or_null.bash \
	src/bash/include/sst_get_prefix.bash unittest/test11/q1-1.rest \
	unittest/test7/q7-1.ans
GATBPS_DISTFILES_95 = src/bash/include/jq/jq_expect_objects.bash \
	src/bash/include/sst_get_variables.bash \
	unittest/test11/q1-2.ans unittest/test7/q7-1.rest
GATBPS_DISTFILES_96 =  \
	src/bash/include/jq/jq_expect_objects_or_null.bash \
	src/bash/include/sst_grep.bash unittest/test11/q1-2.rest \
	unittest/test7/q7-2.ans
GATBPS_DISTFILES_97 = src/bash/include/jq/jq_expect_string.bash \
	src/bash/include/sst_human_list.bash unittest/test11/q1-3.ans \
	unittest/test7/q7-2.rest
GATBPS_DISTFILES_98 =  \
	src/bash/include/jq/jq_expect_string_or_null.bash \
	src/bash/include/sst_ihd.bash unittest/test11/q1-3.rest \
	unittest/test7/q7-3.ans
GATBPS_DISTFILES_99 = src/bash/include/jq/jq_expect_strings.bash \
	src/bash/include/sst_ihs.bash unittest/test12/DB1.cfg \
	unittest/test7/q7-3.rest
GATBPS_DISTFILES = $(DISTFILES) $(GATBPS_DISTFILES_0) \
	$(GATBPS_DISTFILES_1) $(GATBPS_DISTFILES_2) \
	$(GATBPS_DISTFILES_3) $(GATBPS_DISTFILES_4) \
	$(GATBPS_DISTFILES_5) $(GATBPS_DISTFILES_6) \
	$(GATBPS_DISTFILES_7) $(GATBPS_DISTFILES_8) \
	$(GATBPS_DISTFILES_9) $(GATBPS_DISTFILES_10) \
	$(GATBPS_DISTFILES_11) $(GATBPS_DISTFILES_12) \
	$(GATBPS_DISTFILES_13) $(GATBPS_DISTFILES_14) \
	$(GATBPS_DISTFILES_15) $(GATBPS_DISTFILES_16) \
	$(GATBPS_DISTFILES_17) $(GATBPS_DISTFILES_18) \
	$(GATBPS_DISTFILES_19) $(GATBPS_DISTFILES_20) \
	$(GATBPS_DISTFILES_21) $(GATBPS_DISTFILES_22) \
	$(GATBPS_DISTFILES_23) $(GATBPS_DISTFILES_24) \
	$(GATBPS_DISTFILES_25) $(GATBPS_DISTFILES_26) \
	$(GATBPS_DISTFILES_27) $(GATBPS_DISTFILES_28) \
	$(GATBPS_DISTFILES_29) $(GATBPS_DISTFILES_30) \
	$(GATBPS_DISTFILES_31) $(GATBPS_DISTFILES_32) \
	$(GATBPS_DISTFILES_33) $(GATBPS_DISTFILES_34) \
	$(GATBPS_DISTFILES_35) $(GATBPS_DISTFILES_36) \
	$(GATBPS_DISTFILES_37) $(GATBPS_DISTFILES_38) \
	$(GATBPS_DISTFILES_39) $(GATBPS_DISTFILES_40) \
	$(GATBPS_DISTFILES_41) $(GATBPS_DISTFILES_42) \
	$(GATBPS_DISTFILES_43) $(GATBPS_DISTFILES_44) \
	$(GATBPS_DISTFILES_45) $(GATBPS_DISTFILES_46) \
	$(GATBPS_DISTFILES_47) $(GATBPS_DISTFILES_48) \
	$(GATBPS_DISTFILES_49) $(GATBPS_DISTFILES_50) \
	$(GATBPS_DISTFILES_51) $(GATBPS_DISTFILES_52) \
	$(GATBPS_DISTFILES_53) $(GATBPS_DISTFILES_54) \
	$(GATBPS_DISTFILES_55) $(GATBPS_DISTFILES_56) \
	$(GATBPS_DISTFILES_57) $(GATBPS_DISTFILES_58) \
	$(GATBPS_DISTFILES_59) $(GATBPS_DISTFILES_60) \
	$(GATBPS_DISTFILES_61) $(GATBPS_DISTFILES_62) \
	$(GATBPS_DISTFILES_63) $(GATBPS_DISTFILES_64) \
	$(GATBPS_DISTFILES_65) $(GATBPS_DISTFILES_66) \
	$(GATBPS_DISTFILES_67) $(GATBPS_DISTFILES_68) \
	$(GATBPS_DISTFILES_69) $(GATBPS_DISTFILES_70) \
	$(GATBPS_DISTFILES_71) $(GATBPS_DISTFILES_72) \
	$(GATBPS_DISTFILES_73) $(GATBPS_DISTFILES_74) \
	$(GATBPS_DISTFILES_75) $(GATBPS_DISTFILES_76) \
	$(GATBPS_DISTFILES_77) $(GATBPS_DISTFILES_78) \
	$(GATBPS_DISTFILES_79) $(GATBPS_DISTFILES_80) \
	$(GATBPS_DISTFILES_81) $(GATBPS_DISTFILES_82) \
	$(GATBPS_DISTFILES_83) $(GATBPS_DISTFILES_84) \
	$(GATBPS_DISTFILES_85) $(GATBPS_DISTFILES_86) \
	$(GATBPS_DISTFILES_87) $(GATBPS_DISTFILES_88) \
	$(GATBPS_DISTFILES_89) $(GATBPS_DISTFILES_90) \
	$(GATBPS_DISTFILES_91) $(GATBPS_DISTFILES_92) \
	$(GATBPS_DISTFILES_93) $(GATBPS_DISTFILES_94) \
	$(GATBPS_DISTFILES_95) $(GATBPS_DISTFILES_96) \
	$(GATBPS_DISTFILES_97) $(GATBPS_DISTFILES_98) \
	$(GATBPS_DISTFILES_99)

#-----------------------------------------------------------------------
# The list-distfiles target
#-----------------------------------------------------------------------
#
# The list-distfiles target outputs the list of distributed files and
# directories, one per line.
#
# Each entry is listed as if it exists in the build directory, even if
# it only exists in the source directory during a VPATH build. The entry
# will always begin with "./". Additional "." and ".." components may be
# present. Each ".." component will not raise the intermediate directory
# above the root directory of the project.
#
# The order of the entries is unspecified, and entries may be repeated.
# Textually different entries that refer to the same file or directory
# will become identical after removing all "." components, normalizing
# all ".." components, and replacing each sequence of two or more "/"
# characters with a single "/" character.
#
LIST_DISTFILES_PREFIX = ./
GATBPS_COMMON_ASCIIDOCTOR_FLAGS = \
  --failure-level=WARN \
  -a attribute-missing=warn \
$(prevent_an_empty_line)

GATBPS_GEN_VERSION_CACHE_FILES = build-aux/gatbps-gen-date.sh.cache \
	build-aux/gatbps-gen-libtool-c.sh.cache \
	build-aux/gatbps-gen-version.sh.cache
GATBPS_INNER_JAR_SUFFIX = /GATBPS_INNER_JAR_SUFFIX
GATBPS_OUTER_JAR_SUFFIX = 
ACLOCAL_AMFLAGS = -I m4
AM_CPPFLAGS = \
  -I include \
  -I $(srcdir)/include \
$(prevent_a_blank_line)

BUILT_SOURCES = 
DISTCLEANFILES = 
GATBPS_JAVADOCFLAGS = '-tag' 'param' '-tag' 'return' '-tag' 'throws' \
	'-tag' 'accesses:a:Accesses:' '-tag' 'modifies:a:Modifies:' \
	'-tag' 'wellbehaved:a:Well-Behaved:' '-tag' \
	'available:a:Available:' '-tag' 'see' '-tag' 'since' '-tag' \
	'inheritancenotes:a:Inheritance Notes:' '-tag' \
	'examples:a:Examples:' '-tag' 'notablechanges:a:Notable \
	Changes:' $(prevent_a_blank_line)
MAINTAINERCLEANFILES = 
MOSTLYCLEANFILES = $(java_src)
TEXI2DVI = \
  'texi2dvi' \
  $(AM_TEXI2DVIFLAGS) \
  $(TEXI2DVIFLAGS) \
$(prevent_a_blank_line)

TMPEXT = .tmp
bin_SCRIPTS = bin/pulsar-vlds-server.wrappee/pulsar-vlds-server
dist_java_DATA = $(jar_classpath_files)
dist_pkgdata_DATA = 
pkgdata_cmd_includedir = $(pkgdatadir)/cmd/include
dist_pkgdata_cmd_include_DATA = src/cmd/include/sst_find_java.cmd \
	src/cmd/include/sst_find_java_home.cmd
dist_pkgsharedstate_DATA = 
jar_classpath_files = lib/pulsar-vlds.jar.classpath
java_dist_dst = lib/pulsar-vlds-$(PACKAGE_VERSION).jar
javadoc_JAVADOCFLAGS = $(GATBPS_JAVADOCFLAGS) '-windowtitle' \
	'$(PACKAGE_STRING) Javadoc Reference'
javadoc_dist_dep = $(javadoc_src)
javadoc_dist_dst = doc/pulsar-vlds-$(PACKAGE_VERSION)-javadoc
javadoc_dist_src = $(javadoc_dst)
javadoc_dst = doc/pulsar-vlds-javadoc
lib_LTLIBRARIES = 
libexec_SCRIPTS = 
nodist_noinst_HEADERS = 
nodist_pkginclude_HEADERS = 
noinst_HEADERS = 
noinst_LIBRARIES = 
noinst_LTLIBRARIES = 
pkgdata_DATA = 
pkginclude_HEADERS = 
pkglibexec_SCRIPTS = 
pkgsharedstatedir = $(sharedstatedir)/$(PACKAGE_TARNAME)
pkgsysconfdir = $(sysconfdir)/$(PACKAGE_TARNAME)
artifacts_dist_archive_src = $(distdir).tar.gz
GATBPS_V_CONFIG_FILE = $(GATBPS_V_CONFIG_FILE_@AM_V@)
GATBPS_V_CONFIG_FILE_ = $(GATBPS_V_CONFIG_FILE_@AM_DEFAULT_V@)
GATBPS_V_CONFIG_FILE_0 = @$(SHELL) \
  '-' \
  $(srcdir)'/build-aux/gatbps-echo.sh' \
  '--' \
  $(GATBPS_V_PAD_LEFT)'SUBST_IN'$(GATBPS_V_PAD_RIGHT_8) \
  $@ \
  0</dev/null \
|| 'exit' "$${?}";

GATBPS_V_CONFIG_FILE_1 = 
GATBPS_CONFIG_LATER_SCRIPT_BOT = ' \
      } else { \
        line = line "{@}" line_parts[i + 1]; \
        replaced_previous_line_part = 0; \
      } \
    } \
    print line; \
  } \
'

GATBPS_CONFIG_LATER_SCRIPT_TOP = ' \
  { \
    line = $$0; \
    line_parts_count = split(line, line_parts, /\{@\}/); \
    for (i = 0; i != line_parts_count; ++i) { \
      if (i == 0) { \
        line = line_parts[i + 1]; \
        replaced_previous_line_part = 0; \
      } else if (replaced_previous_line_part) { \
        line = line line_parts[i + 1]; \
        replaced_previous_line_part = 0; \
      } else if (i == line_parts_count - 1) { \
        line = line "{@}" line_parts[i + 1]; \
        replaced_previous_line_part = 0; \
'

GATBPS_CONFIG_LATER_SCRIPT = $(GATBPS_CONFIG_LATER_SCRIPT_TOP)$(GATBPS_CONFIG_LATER_SCRIPT_MID)$(GATBPS_CONFIG_LATER_SCRIPT_BOT)
GATBPS_V_CONFIG_LATER = $(GATBPS_V_CONFIG_LATER_@AM_V@)
GATBPS_V_CONFIG_LATER_ = $(GATBPS_V_CONFIG_LATER_@AM_DEFAULT_V@)
GATBPS_V_CONFIG_LATER_0 = @$(SHELL) \
  '-' \
  $(srcdir)'/build-aux/gatbps-echo.sh' \
  '--' \
  $(GATBPS_V_PAD_LEFT)'SUBST_IM'$(GATBPS_V_PAD_RIGHT_8) \
  $@ \
  0</dev/null \
|| 'exit' "$${?}";

GATBPS_V_CONFIG_LATER_1 = 
GATBPS_VPATH_SEARCH_BOT = \
  ; then \
    GATBPS_VPATH_SEARCH_d='.'; \
  else \
    GATBPS_VPATH_SEARCH_d=$(srcdir); \
    case "$${GATBPS_VPATH_SEARCH_d}" in \
      '/'*) \
      ;; \
      *) \
        GATBPS_VPATH_SEARCH_d='./'"$${GATBPS_VPATH_SEARCH_d}"; \
      ;; \
    esac; \
  fi

GATBPS_VPATH_SEARCH_RESULT = "$${GATBPS_VPATH_SEARCH_d}"
GATBPS_VPATH_SEARCH_TOP = \
  if 'test' '-r'

GATBPS_V_PAD_LEFT = '  '
GATBPS_V_PAD_RIGHT_1 = ' '$(GATBPS_V_PAD_RIGHT_2)
GATBPS_V_PAD_RIGHT_10 = ' '$(GATBPS_V_PAD_RIGHT_11)
GATBPS_V_PAD_RIGHT_11 = ' '$(GATBPS_V_PAD_RIGHT_12)
GATBPS_V_PAD_RIGHT_12 = ' '$(GATBPS_V_PAD_RIGHT_13)
GATBPS_V_PAD_RIGHT_13 = ' '$(GATBPS_V_PAD_RIGHT_14)
GATBPS_V_PAD_RIGHT_14 = ' '$(GATBPS_V_PAD_RIGHT_15)
GATBPS_V_PAD_RIGHT_15 = ' '$(GATBPS_V_PAD_RIGHT_16)
GATBPS_V_PAD_RIGHT_16 = 
GATBPS_V_PAD_RIGHT_2 = ' '$(GATBPS_V_PAD_RIGHT_3)
GATBPS_V_PAD_RIGHT_3 = ' '$(GATBPS_V_PAD_RIGHT_4)
GATBPS_V_PAD_RIGHT_4 = ' '$(GATBPS_V_PAD_RIGHT_5)
GATBPS_V_PAD_RIGHT_5 = ' '$(GATBPS_V_PAD_RIGHT_6)
GATBPS_V_PAD_RIGHT_6 = ' '$(GATBPS_V_PAD_RIGHT_7)
GATBPS_V_PAD_RIGHT_7 = ' '$(GATBPS_V_PAD_RIGHT_8)
GATBPS_V_PAD_RIGHT_8 = 
GATBPS_V_PAD_RIGHT_9 = ' '$(GATBPS_V_PAD_RIGHT_10)
GATBPS_V_CP = $(GATBPS_V_CP_@AM_V@)
GATBPS_V_CP_ = $(GATBPS_V_CP_@AM_DEFAULT_V@)
GATBPS_V_CP_0 = @$(SHELL) \
  '-' \
  $(srcdir)'/build-aux/gatbps-echo.sh' \
  '--' \
  $(GATBPS_V_PAD_LEFT)'CP'$(GATBPS_V_PAD_RIGHT_2) \
  $@ \
  0</dev/null \
|| 'exit' "$${?}";

GATBPS_V_CP_1 = 
GATBPS_V_DOCKER = $(GATBPS_V_DOCKER_@AM_V@)
GATBPS_V_DOCKER_ = $(GATBPS_V_DOCKER_@AM_DEFAULT_V@)
GATBPS_V_DOCKER_0 = @$(SHELL) \
  '-' \
  $(srcdir)'/build-aux/gatbps-echo.sh' \
  '--' \
  $(GATBPS_V_PAD_LEFT)'BUILD'$(GATBPS_V_PAD_RIGHT_5) \
  $@ \
  0</dev/null \
|| 'exit' "$${?}";

GATBPS_V_DOCKER_1 = 
GATBPS_V_GIT_ARCHIVE = $(GATBPS_V_GIT_ARCHIVE_@AM_V@)
GATBPS_V_GIT_ARCHIVE_ = $(GATBPS_V_GIT_ARCHIVE_@AM_DEFAULT_V@)
GATBPS_V_GIT_ARCHIVE_0 = @$(SHELL) \
  '-' \
  $(srcdir)'/build-aux/gatbps-echo.sh' \
  '--' \
  $(GATBPS_V_PAD_LEFT)'GIT ARCHIVE'$(GATBPS_V_PAD_RIGHT_11) \
  $@ \
  0</dev/null \
|| 'exit' "$${?}";

GATBPS_V_GIT_ARCHIVE_1 = 
GATBPS_V_GIT_BUNDLE = $(GATBPS_V_GIT_BUNDLE_@AM_V@)
GATBPS_V_GIT_BUNDLE_ = $(GATBPS_V_GIT_BUNDLE_@AM_DEFAULT_V@)
GATBPS_V_GIT_BUNDLE_0 = @$(SHELL) \
  '-' \
  $(srcdir)'/build-aux/gatbps-echo.sh' \
  '--' \
  $(GATBPS_V_PAD_LEFT)'GIT BUNDLE'$(GATBPS_V_PAD_RIGHT_10) \
  $@ \
  0</dev/null \
|| 'exit' "$${?}";

GATBPS_V_GIT_BUNDLE_1 = 
GATBPS_V_GIT_CLONE = $(GATBPS_V_GIT_CLONE_@AM_V@)
GATBPS_V_GIT_CLONE_ = $(GATBPS_V_GIT_CLONE_@AM_DEFAULT_V@)
GATBPS_V_GIT_CLONE_0 = @$(SHELL) \
  '-' \
  $(srcdir)'/build-aux/gatbps-echo.sh' \
  '--' \
  $(GATBPS_V_PAD_LEFT)'GIT CLONE'$(GATBPS_V_PAD_RIGHT_9) \
  $@ \
  0</dev/null \
|| 'exit' "$${?}";

GATBPS_V_GIT_CLONE_1 = 
GATBPS_V_WGET = $(GATBPS_V_WGET_@AM_V@)
GATBPS_V_WGET_ = $(GATBPS_V_WGET_@AM_DEFAULT_V@)
GATBPS_V_WGET_0 = @$(SHELL) \
  - \
  $(srcdir)/build-aux/gatbps-echo.sh \
  -- \
  $(GATBPS_V_PAD_LEFT)WGET$(GATBPS_V_PAD_RIGHT_4) \
  $@ \
  </dev/null \
|| exit $$?;

GATBPS_V_WGET_1 = 
doc_manual_index_html_children = doc/manual/images \
	doc/manual/acknowledgments.adoc doc/manual/attributes.adoc \
	doc/manual/configuring_the_database_connections.adoc \
	doc/manual/configuring_the_interserver_connections.adoc \
	doc/manual/configuring_the_lexicon.adoc \
	doc/manual/configuring_the_servers.adoc doc/manual/index.adoc \
	doc/manual/installing_pulsar_vlds.adoc \
	doc/manual/installing_the_portable_windows_edition.adoc \
	doc/manual/installing_the_prerequisites.adoc \
	doc/manual/introduction.adoc doc/manual/java_library.adoc \
	doc/manual/jl_aggregate.adoc \
	doc/manual/jl_aggregate_function.adoc \
	doc/manual/jl_channel_output_buffer_limit.adoc \
	doc/manual/jl_column.adoc doc/manual/jl_column_type.adoc \
	doc/manual/jl_condition.adoc \
	doc/manual/jl_condition_operator.adoc \
	doc/manual/jl_condition_token.adoc doc/manual/jl_config.adoc \
	doc/manual/jl_dbinfo.adoc doc/manual/jl_lexicon.adoc \
	doc/manual/jl_lexicon_common.adoc doc/manual/jl_party.adoc \
	doc/manual/jl_query.adoc doc/manual/jl_table.adoc \
	doc/manual/partials/acknowledgments.adoc \
	doc/manual/partials/introduction.adoc \
	doc/manual/underlying_name_fragment.adoc
doc_manual_index_html_children_nodist = doc/manual/config.adoc
doc_manual_index_html_leaves = $(doc_manual_config_adoc_leaves) \
	doc/manual/acknowledgments.adoc doc/manual/attributes.adoc \
	doc/manual/configuring_the_database_connections.adoc \
	doc/manual/configuring_the_interserver_connections.adoc \
	doc/manual/configuring_the_lexicon.adoc \
	doc/manual/configuring_the_servers.adoc doc/manual/index.adoc \
	doc/manual/installing_pulsar_vlds.adoc \
	doc/manual/installing_the_portable_windows_edition.adoc \
	doc/manual/installing_the_prerequisites.adoc \
	doc/manual/introduction.adoc doc/manual/java_library.adoc \
	doc/manual/jl_aggregate.adoc \
	doc/manual/jl_aggregate_function.adoc \
	doc/manual/jl_channel_output_buffer_limit.adoc \
	doc/manual/jl_column.adoc doc/manual/jl_column_type.adoc \
	doc/manual/jl_condition.adoc \
	doc/manual/jl_condition_operator.adoc \
	doc/manual/jl_condition_token.adoc doc/manual/jl_config.adoc \
	doc/manual/jl_dbinfo.adoc doc/manual/jl_lexicon.adoc \
	doc/manual/jl_lexicon_common.adoc doc/manual/jl_party.adoc \
	doc/manual/jl_query.adoc doc/manual/jl_table.adoc \
	doc/manual/partials/acknowledgments.adoc \
	doc/manual/partials/introduction.adoc \
	doc/manual/underlying_name_fragment.adoc
doc_manual_tar_leaves = $(doc_manual_index_html_leaves)

#-----------------------------------------------------------------------
manual_dst = doc/$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)-manual
manual_dst_leaves = $(doc_manual_tar_leaves)
pages_src_leaves = doc/pages/Gemfile doc/pages/README.adoc \
	doc/pages/_config.yml \
	doc/pages/_includes/artifact_links_fragment.md \
	doc/pages/_includes/common.liquid \
	doc/pages/_includes/config.liquid.in \
	doc/pages/_includes/documentation.md \
	doc/pages/_includes/main.md \
	doc/pages/_includes/section_files.liquid \
	doc/pages/_includes/source_code.md \
	doc/pages/_layouts/root.html doc/pages/index.md \
	$(doc_pages_manual_leaves) doc/pages/style.scss
pages_src_clean =
pages_src = doc/pages/Gemfile doc/pages/README.adoc \
	doc/pages/_config.yml \
	doc/pages/_includes/artifact_links_fragment.md \
	doc/pages/_includes/common.liquid \
	doc/pages/_includes/documentation.md \
	doc/pages/_includes/main.md \
	doc/pages/_includes/section_files.liquid \
	doc/pages/_includes/source_code.md \
	doc/pages/_layouts/root.html doc/pages/index.md \
	doc/pages/style.scss
pages_src_nodist = doc/pages/_includes/config.liquid doc/pages/manual \
	doc/pages/$(PACKAGE_TARNAME)-manual.tar.xz
doc_pages_manual_leaves = $(manual_dst).tar.xz
pages_jekyll_version = 4.2.0
doc_pages__site_leaves = $(pages_src_leaves)
pages_dst = doc/$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)-pages
pages_dst_leaves = $(doc_pages__site_leaves)
pages_preview_host = 0.0.0.0
pages_preview_port = 4000
pages_preview_name = $$d-pages-preview
pages_livereload = 1
pages_livereload_port = 35729
pages_touch_all = 
doc_readme_children = doc/readme/common.adoc doc/readme/flatten.gawk \
	doc/readme/readme.adoc
doc_readme_leaves = doc/readme/common.adoc \
	$(doc_readme_config_adoc_leaves) doc/readme/flatten.gawk \
	doc/readme/readme.adoc
doc_readme_children_nodist = doc/readme/config.adoc
pkgdatadir_htmldir = $(pkgdatadir)/html
pkgdatadir_html_cssdir = $(pkgdatadir)/html/css
pkgdatadir_html_fontsdir = $(pkgdatadir)/html/fonts
pkgdatadir_html_jsdir = $(pkgdatadir)/html/js
dist_pkgdatadir_html_DATA = src/html/index.html
dist_pkgdatadir_html_css_DATA = src/html/css/bootstrap.min.css \
	src/html/css/query-builder.default.min.css
dist_pkgdatadir_html_fonts_DATA =  \
	src/html/fonts/glyphicons-halflings-regular.woff \
	src/html/fonts/glyphicons-halflings-regular.woff2
dist_pkgdatadir_html_js_DATA = src/html/js/bootstrap.min.js \
	src/html/js/doT.min.js src/html/js/jquery-extendext.js \
	src/html/js/jquery.min.js src/html/js/query-builder.min.js
pulsar_vlds_PACKAGE_VERSION_windows_portable_java_zip_prereqs = pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java
artifact_pulsar_vlds___PACKAGE_VERSION__windows_portable_java_zip_src = pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip
pulsar_vlds_PACKAGE_VERSION_windows_portable_native_prereqs = \
  src/windows_portable_native/jni-config.json \
  src/windows_portable_native/predefined-classes-config.json \
  src/windows_portable_native/proxy-config.json \
  src/windows_portable_native/recipe.sh \
  src/windows_portable_native/reflect-config.json \
  src/windows_portable_native/resource-config.json \
  src/windows_portable_native/serialization-config.json \
  src/windows_portable_native/server.cmd \
  pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip \
$(empty)

pulsar_vlds_PACKAGE_VERSION_windows_portable_native_zip_prereqs = \
  pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-native \
$(EMPTY)

java_CLASSPATH = $(CLASSPATH_SEPARATOR)build-aux/downloads/bcpkix-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)$(javadir)/bcpkix-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/bcpkix-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)/usr/share/java/bcpkix-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)build-aux/downloads/bcprov-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)$(javadir)/bcprov-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/bcprov-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)/usr/share/java/bcprov-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)build-aux/downloads/bcutil-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)$(javadir)/bcutil-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/bcutil-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)/usr/share/java/bcutil-jdk15on-1.69.jar$(CLASSPATH_SEPARATOR)build-aux/downloads/json-20210307.jar$(CLASSPATH_SEPARATOR)$(javadir)/json-20210307.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/json-20210307.jar$(CLASSPATH_SEPARATOR)/usr/share/java/json-20210307.jar$(CLASSPATH_SEPARATOR)build-aux/downloads/mssql-jdbc-9.4.0.jre8.jar$(CLASSPATH_SEPARATOR)$(javadir)/mssql-jdbc-9.4.0.jre8.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/mssql-jdbc-9.4.0.jre8.jar$(CLASSPATH_SEPARATOR)/usr/share/java/mssql-jdbc-9.4.0.jre8.jar$(CLASSPATH_SEPARATOR)build-aux/downloads/mysql-connector-java-8.0.17.jar$(CLASSPATH_SEPARATOR)$(javadir)/mysql-connector-java-8.0.17.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/mysql-connector-java-8.0.17.jar$(CLASSPATH_SEPARATOR)/usr/share/java/mysql-connector-java-8.0.17.jar$(CLASSPATH_SEPARATOR)build-aux/downloads/netty-all-4.1.65.Final.jar$(CLASSPATH_SEPARATOR)$(javadir)/netty-all-4.1.65.Final.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/netty-all-4.1.65.Final.jar$(CLASSPATH_SEPARATOR)/usr/share/java/netty-all-4.1.65.Final.jar$(CLASSPATH_SEPARATOR)build-aux/downloads/postgresql-42.2.6.jar$(CLASSPATH_SEPARATOR)$(javadir)/postgresql-42.2.6.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/postgresql-42.2.6.jar$(CLASSPATH_SEPARATOR)/usr/share/java/postgresql-42.2.6.jar$(CLASSPATH_SEPARATOR)build-aux/downloads/sqlite-jdbc-3.36.0.1.jar$(CLASSPATH_SEPARATOR)$(javadir)/sqlite-jdbc-3.36.0.1.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/sqlite-jdbc-3.36.0.1.jar$(CLASSPATH_SEPARATOR)/usr/share/java/sqlite-jdbc-3.36.0.1.jar$(CLASSPATH_SEPARATOR)sst.jar$(CLASSPATH_SEPARATOR)$(javadir)/sst.jar$(CLASSPATH_SEPARATOR)/usr/local/share/java/sst.jar$(CLASSPATH_SEPARATOR)/usr/share/java/sst.jar
java_dep = 
java_dst = lib/pulsar-vlds.jar
java_nested = src/com/stealthsoftwareinc/pulsarvlds/*\$$*.class
java_noinst = 
java_package = com.stealthsoftwareinc.pulsarvlds
java_sourcepath = src
java_src = src/com/stealthsoftwareinc/pulsarvlds/ActiveQuery.class \
	src/com/stealthsoftwareinc/pulsarvlds/Aggregate.class \
	src/com/stealthsoftwareinc/pulsarvlds/AggregateFunction.class \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousColumnException.class \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousTableException.class \
	src/com/stealthsoftwareinc/pulsarvlds/ChannelOutputBufferLimit.class \
	src/com/stealthsoftwareinc/pulsarvlds/Column.class \
	src/com/stealthsoftwareinc/pulsarvlds/ColumnType.class \
	src/com/stealthsoftwareinc/pulsarvlds/Comparison.class \
	src/com/stealthsoftwareinc/pulsarvlds/ComparisonOperator.class \
	src/com/stealthsoftwareinc/pulsarvlds/Condition.class \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionOperator.class \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionToken.class \
	src/com/stealthsoftwareinc/pulsarvlds/Config.class \
	src/com/stealthsoftwareinc/pulsarvlds/ConfigH.class \
	src/com/stealthsoftwareinc/pulsarvlds/DbInfo.class \
	src/com/stealthsoftwareinc/pulsarvlds/DbStartQueryEvent.class \
	src/com/stealthsoftwareinc/pulsarvlds/DomainIterator.class \
	src/com/stealthsoftwareinc/pulsarvlds/FrontServerHttpResponse.class \
	src/com/stealthsoftwareinc/pulsarvlds/Globals.class \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelHandler.class \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelInitializer.class \
	src/com/stealthsoftwareinc/pulsarvlds/Lexicon.class \
	src/com/stealthsoftwareinc/pulsarvlds/LexiconCommon.class \
	src/com/stealthsoftwareinc/pulsarvlds/Party.class \
	src/com/stealthsoftwareinc/pulsarvlds/PhStartQueryEvent.class \
	src/com/stealthsoftwareinc/pulsarvlds/Query.class \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelFactory.class \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelHandler.class \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelInitializer.class \
	src/com/stealthsoftwareinc/pulsarvlds/Server.class \
	src/com/stealthsoftwareinc/pulsarvlds/SharedWebSocketData.class \
	src/com/stealthsoftwareinc/pulsarvlds/StateStream.class \
	src/com/stealthsoftwareinc/pulsarvlds/Table.class \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownColumnException.class \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownTableException.class \
	src/com/stealthsoftwareinc/pulsarvlds/WebSocketHandler.class
javadoc_src = src/com/stealthsoftwareinc/pulsarvlds/ActiveQuery.java \
	src/com/stealthsoftwareinc/pulsarvlds/Aggregate.java \
	src/com/stealthsoftwareinc/pulsarvlds/AggregateFunction.java \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousColumnException.java \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousTableException.java \
	src/com/stealthsoftwareinc/pulsarvlds/ChannelOutputBufferLimit.java \
	src/com/stealthsoftwareinc/pulsarvlds/Column.java \
	src/com/stealthsoftwareinc/pulsarvlds/ColumnType.java \
	src/com/stealthsoftwareinc/pulsarvlds/Comparison.java \
	src/com/stealthsoftwareinc/pulsarvlds/ComparisonOperator.java \
	src/com/stealthsoftwareinc/pulsarvlds/Condition.java \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionOperator.java \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionToken.java \
	src/com/stealthsoftwareinc/pulsarvlds/Config.java \
	src/com/stealthsoftwareinc/pulsarvlds/ConfigH.java \
	src/com/stealthsoftwareinc/pulsarvlds/DbInfo.java \
	src/com/stealthsoftwareinc/pulsarvlds/DbStartQueryEvent.java \
	src/com/stealthsoftwareinc/pulsarvlds/DomainIterator.java \
	src/com/stealthsoftwareinc/pulsarvlds/FrontServerHttpResponse.java \
	src/com/stealthsoftwareinc/pulsarvlds/Globals.java \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelHandler.java \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelInitializer.java \
	src/com/stealthsoftwareinc/pulsarvlds/Lexicon.java \
	src/com/stealthsoftwareinc/pulsarvlds/LexiconCommon.java \
	src/com/stealthsoftwareinc/pulsarvlds/Party.java \
	src/com/stealthsoftwareinc/pulsarvlds/PhStartQueryEvent.java \
	src/com/stealthsoftwareinc/pulsarvlds/Query.java \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelFactory.java \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelHandler.java \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelInitializer.java \
	src/com/stealthsoftwareinc/pulsarvlds/Server.java \
	src/com/stealthsoftwareinc/pulsarvlds/SharedWebSocketData.java \
	src/com/stealthsoftwareinc/pulsarvlds/StateStream.java \
	src/com/stealthsoftwareinc/pulsarvlds/Table.java \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownColumnException.java \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownTableException.java \
	src/com/stealthsoftwareinc/pulsarvlds/WebSocketHandler.java
lib_pulsar_vlds_jar_src_children =  \
	src/com/stealthsoftwareinc/pulsarvlds/ActiveQuery.java \
	src/com/stealthsoftwareinc/pulsarvlds/Aggregate.java \
	src/com/stealthsoftwareinc/pulsarvlds/AggregateFunction.java \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousColumnException.java \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousTableException.java \
	src/com/stealthsoftwareinc/pulsarvlds/ChannelOutputBufferLimit.java \
	src/com/stealthsoftwareinc/pulsarvlds/Column.java \
	src/com/stealthsoftwareinc/pulsarvlds/ColumnType.java \
	src/com/stealthsoftwareinc/pulsarvlds/Comparison.java \
	src/com/stealthsoftwareinc/pulsarvlds/ComparisonOperator.java \
	src/com/stealthsoftwareinc/pulsarvlds/Condition.java \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionOperator.java \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionToken.java \
	src/com/stealthsoftwareinc/pulsarvlds/Config.java \
	src/com/stealthsoftwareinc/pulsarvlds/DbInfo.java \
	src/com/stealthsoftwareinc/pulsarvlds/DbStartQueryEvent.java \
	src/com/stealthsoftwareinc/pulsarvlds/DomainIterator.java \
	src/com/stealthsoftwareinc/pulsarvlds/FrontServerHttpResponse.java \
	src/com/stealthsoftwareinc/pulsarvlds/Globals.java \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelHandler.java \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelInitializer.java \
	src/com/stealthsoftwareinc/pulsarvlds/Lexicon.java \
	src/com/stealthsoftwareinc/pulsarvlds/LexiconCommon.java \
	src/com/stealthsoftwareinc/pulsarvlds/Party.java \
	src/com/stealthsoftwareinc/pulsarvlds/PhStartQueryEvent.java \
	src/com/stealthsoftwareinc/pulsarvlds/Query.java \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelFactory.java \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelHandler.java \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelInitializer.java \
	src/com/stealthsoftwareinc/pulsarvlds/Server.java \
	src/com/stealthsoftwareinc/pulsarvlds/SharedWebSocketData.java \
	src/com/stealthsoftwareinc/pulsarvlds/StateStream.java \
	src/com/stealthsoftwareinc/pulsarvlds/Table.java \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownColumnException.java \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownTableException.java \
	src/com/stealthsoftwareinc/pulsarvlds/WebSocketHandler.java
lib_pulsar_vlds_jar_src_leaves =  \
	src/com/stealthsoftwareinc/pulsarvlds/ActiveQuery.java \
	src/com/stealthsoftwareinc/pulsarvlds/Aggregate.java \
	src/com/stealthsoftwareinc/pulsarvlds/AggregateFunction.java \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousColumnException.java \
	src/com/stealthsoftwareinc/pulsarvlds/AmbiguousTableException.java \
	src/com/stealthsoftwareinc/pulsarvlds/ChannelOutputBufferLimit.java \
	src/com/stealthsoftwareinc/pulsarvlds/Column.java \
	src/com/stealthsoftwareinc/pulsarvlds/ColumnType.java \
	src/com/stealthsoftwareinc/pulsarvlds/Comparison.java \
	src/com/stealthsoftwareinc/pulsarvlds/ComparisonOperator.java \
	src/com/stealthsoftwareinc/pulsarvlds/Condition.java \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionOperator.java \
	src/com/stealthsoftwareinc/pulsarvlds/ConditionToken.java \
	src/com/stealthsoftwareinc/pulsarvlds/Config.java \
	$(src_com_stealthsoftwareinc_pulsarvlds_ConfigH_java_leaves) \
	src/com/stealthsoftwareinc/pulsarvlds/DbInfo.java \
	src/com/stealthsoftwareinc/pulsarvlds/DbStartQueryEvent.java \
	src/com/stealthsoftwareinc/pulsarvlds/DomainIterator.java \
	src/com/stealthsoftwareinc/pulsarvlds/FrontServerHttpResponse.java \
	src/com/stealthsoftwareinc/pulsarvlds/Globals.java \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelHandler.java \
	src/com/stealthsoftwareinc/pulsarvlds/HttpChannelInitializer.java \
	src/com/stealthsoftwareinc/pulsarvlds/Lexicon.java \
	src/com/stealthsoftwareinc/pulsarvlds/LexiconCommon.java \
	src/com/stealthsoftwareinc/pulsarvlds/Party.java \
	src/com/stealthsoftwareinc/pulsarvlds/PhStartQueryEvent.java \
	src/com/stealthsoftwareinc/pulsarvlds/Query.java \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelFactory.java \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelHandler.java \
	src/com/stealthsoftwareinc/pulsarvlds/RawChannelInitializer.java \
	src/com/stealthsoftwareinc/pulsarvlds/Server.java \
	src/com/stealthsoftwareinc/pulsarvlds/SharedWebSocketData.java \
	src/com/stealthsoftwareinc/pulsarvlds/StateStream.java \
	src/com/stealthsoftwareinc/pulsarvlds/Table.java \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownColumnException.java \
	src/com/stealthsoftwareinc/pulsarvlds/UnknownTableException.java \
	src/com/stealthsoftwareinc/pulsarvlds/WebSocketHandler.java
lib_pulsar_vlds_jar_src_children_nodist =  \
	src/com/stealthsoftwareinc/pulsarvlds/ConfigH.java
noinst_SCRIPTS = bin/pulsar-vlds-server
doc_pulsar_vlds_TEXINFOS = 
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .1 .2 .3 .4 .5 .6 .7 .8 .9 .adoc .class .java .m4 .m4out .html .log .pdf .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/build-aux/gatbps.am $(srcdir)/src/docker/pulsar-vlds/am $(srcdir)/build-aux/GATBPS_CONFIG_FILE_RULES.am $(srcdir)/build-aux/GATBPS_CONFIG_LATER_RULES.am $(srcdir)/build-aux/GATBPS_CP_RULES.am $(srcdir)/build-aux/GATBPS_GIT_ARCHIVE_RULES.am $(srcdir)/build-aux/GATBPS_GIT_BUNDLE_RULES.am $(srcdir)/build-aux/GATBPS_GIT_CLONE_RULES.am $(srcdir)/build-aux/GATBPS_VPATH_SEARCH.am $(srcdir)/build-aux/GATBPS_V_PAD.am $(srcdir)/build-aux/GATBPS_WGET_RULES.am $(srcdir)/build-aux/cp.am $(srcdir)/build-aux/docker.am $(srcdir)/build-aux/dvi-dist.am $(srcdir)/build-aux/git.am $(srcdir)/build-aux/html-dist.am $(srcdir)/build-aux/java-dist.am $(srcdir)/build-aux/javadoc-dist.am $(srcdir)/build-aux/javadoc.am $(srcdir)/build-aux/ps-dist.am $(srcdir)/build-aux/sst.am $(srcdir)/build-aux/wget.am $(srcdir)/build-aux/autogen.am $(srcdir)/doc/pages/manual.am $(srcdir)/doc/pulsar-vlds.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/build-aux/gatbps.am $(srcdir)/src/docker/pulsar-vlds/am $(srcdir)/build-aux/GATBPS_CONFIG_FILE_RULES.am $(srcdir)/build-aux/GATBPS_CONFIG_LATER_RULES.am $(srcdir)/build-aux/GATBPS_CP_RULES.am $(srcdir)/build-aux/GATBPS_GIT_ARCHIVE_RULES.am $(srcdir)/build-aux/GATBPS_GIT_BUNDLE_RULES.am $(srcdir)/build-aux/GATBPS_GIT_CLONE_RULES.am $(srcdir)/build-aux/GATBPS_VPATH_SEARCH.am $(srcdir)/build-aux/GATBPS_V_PAD.am $(srcdir)/build-aux/GATBPS_WGET_RULES.am $(srcdir)/build-aux/cp.am $(srcdir)/build-aux/docker.am $(srcdir)/build-aux/dvi-dist.am $(srcdir)/build-aux/git.am $(srcdir)/build-aux/html-dist.am $(srcdir)/build-aux/java-dist.am $(srcdir)/build-aux/javadoc-dist.am $(srcdir)/build-aux/javadoc.am $(srcdir)/build-aux/ps-dist.am $(srcdir)/build-aux/sst.am $(srcdir)/build-aux/wget.am $(srcdir)/build-aux/autogen.am $(srcdir)/doc/pages/manual.am $(srcdir)/doc/pulsar-vlds.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
doc/manual/config.adoc.im.out: $(top_builddir)/config.status $(top_srcdir)/doc/manual/config.adoc.im.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
doc/pages/_includes/config.liquid.out: $(top_builddir)/config.status $(top_srcdir)/doc/pages/_includes/config.liquid.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
doc/readme/config.adoc.out: $(top_builddir)/config.status $(top_srcdir)/doc/readme/config.adoc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
lib/pulsar-vlds.jar.classpath.im.out: $(top_builddir)/config.status $(top_srcdir)/lib/pulsar-vlds.jar.classpath.im.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
lib/pulsar-vlds.jar.build_tree_classpath.im.out: $(top_builddir)/config.status $(top_srcdir)/lib/pulsar-vlds.jar.build_tree_classpath.im.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
src/com/stealthsoftwareinc/pulsarvlds/ConfigH.java.im.out: $(top_builddir)/config.status $(top_srcdir)/src/com/stealthsoftwareinc/pulsarvlds/ConfigH.java.im.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
bin/pulsar-vlds-server.wrappee/pulsar-vlds-server.im.out: $(top_builddir)/config.status $(top_srcdir)/bin/pulsar-vlds-server.wrappee/pulsar-vlds-server.im.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(libexecdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(libexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libexecdir)" && rm -f $$files

clean-libexecPROGRAMS:
	@list='$(libexec_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-pkglibexecPROGRAMS: $(pkglibexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(pkglibexec_PROGRAMS)'; test -n "$(pkglibexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(pkglibexecdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(pkglibexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-pkglibexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglibexec_PROGRAMS)'; test -n "$(pkglibexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkglibexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkglibexecdir)" && rm -f $$files

clean-pkglibexecPROGRAMS:
	@list='$(pkglibexec_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-libexecSCRIPTS: $(libexec_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(libexec_SCRIPTS)'; test -n "$(libexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libexecdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(libexecdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(libexecdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-libexecSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(libexec_SCRIPTS)'; test -n "$(libexecdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(libexecdir)'; $(am__uninstall_files_from_dir)
install-pkglibexecSCRIPTS: $(pkglibexec_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(pkglibexec_SCRIPTS)'; test -n "$(pkglibexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibexecdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(pkglibexecdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(pkglibexecdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-pkglibexecSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglibexec_SCRIPTS)'; test -n "$(pkglibexecdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(pkglibexecdir)'; $(am__uninstall_files_from_dir)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-dist_javaDATA: $(dist_java_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_java_DATA)'; test -n "$(javadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(javadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(javadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(javadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(javadir)" || exit $$?; \
	done

uninstall-dist_javaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_java_DATA)'; test -n "$(javadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(javadir)'; $(am__uninstall_files_from_dir)
install-dist_pkgdataDATA: $(dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)
install-dist_pkgdata_cmd_includeDATA: $(dist_pkgdata_cmd_include_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdata_cmd_include_DATA)'; test -n "$(pkgdata_cmd_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdata_cmd_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdata_cmd_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdata_cmd_includedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdata_cmd_includedir)" || exit $$?; \
	done

uninstall-dist_pkgdata_cmd_includeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_cmd_include_DATA)'; test -n "$(pkgdata_cmd_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdata_cmd_includedir)'; $(am__uninstall_files_from_dir)
install-dist_pkgdatadir_htmlDATA: $(dist_pkgdatadir_html_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdatadir_html_DATA)'; test -n "$(pkgdatadir_htmldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir_htmldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir_htmldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir_htmldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir_htmldir)" || exit $$?; \
	done

uninstall-dist_pkgdatadir_htmlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdatadir_html_DATA)'; test -n "$(pkgdatadir_htmldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir_htmldir)'; $(am__uninstall_files_from_dir)
install-dist_pkgdatadir_html_cssDATA: $(dist_pkgdatadir_html_css_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdatadir_html_css_DATA)'; test -n "$(pkgdatadir_html_cssdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir_html_cssdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir_html_cssdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir_html_cssdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir_html_cssdir)" || exit $$?; \
	done

uninstall-dist_pkgdatadir_html_cssDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdatadir_html_css_DATA)'; test -n "$(pkgdatadir_html_cssdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir_html_cssdir)'; $(am__uninstall_files_from_dir)
install-dist_pkgdatadir_html_fontsDATA: $(dist_pkgdatadir_html_fonts_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdatadir_html_fonts_DATA)'; test -n "$(pkgdatadir_html_fontsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir_html_fontsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir_html_fontsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir_html_fontsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir_html_fontsdir)" || exit $$?; \
	done

uninstall-dist_pkgdatadir_html_fontsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdatadir_html_fonts_DATA)'; test -n "$(pkgdatadir_html_fontsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir_html_fontsdir)'; $(am__uninstall_files_from_dir)
install-dist_pkgdatadir_html_jsDATA: $(dist_pkgdatadir_html_js_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdatadir_html_js_DATA)'; test -n "$(pkgdatadir_html_jsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir_html_jsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir_html_jsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir_html_jsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir_html_jsdir)" || exit $$?; \
	done

uninstall-dist_pkgdatadir_html_jsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdatadir_html_js_DATA)'; test -n "$(pkgdatadir_html_jsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir_html_jsdir)'; $(am__uninstall_files_from_dir)
install-dist_pkgsharedstateDATA: $(dist_pkgsharedstate_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgsharedstate_DATA)'; test -n "$(pkgsharedstatedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgsharedstatedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgsharedstatedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgsharedstatedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgsharedstatedir)" || exit $$?; \
	done

uninstall-dist_pkgsharedstateDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgsharedstate_DATA)'; test -n "$(pkgsharedstatedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgsharedstatedir)'; $(am__uninstall_files_from_dir)
install-pkgdataDATA: $(pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-nodist_pkgincludeHEADERS: $(nodist_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-nodist_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-zstd: distdir
	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	*.tar.zst*) \
	  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && $(MAKE) $(AM_MAKEFLAGS) distcheck-hook \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) $(AM_DISTCHECK_DVI_TARGET) \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(LIBRARIES) $(LTLIBRARIES) $(SCRIPTS) \
		$(DATA) $(HEADERS) config.h all-local
install-binPROGRAMS: install-libLTLIBRARIES

install-checkPROGRAMS: install-libLTLIBRARIES

install-libexecPROGRAMS: install-libLTLIBRARIES

install-pkglibexecPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am: installdirs-local
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" "$(DESTDIR)$(pkglibexecdir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" "$(DESTDIR)$(pkglibexecdir)" "$(DESTDIR)$(javadir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(pkgdata_cmd_includedir)" "$(DESTDIR)$(pkgdatadir_htmldir)" "$(DESTDIR)$(pkgdatadir_html_cssdir)" "$(DESTDIR)$(pkgdatadir_html_fontsdir)" "$(DESTDIR)$(pkgdatadir_html_jsdir)" "$(DESTDIR)$(pkgsharedstatedir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-recursive
install-data: install-data-recursive

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libexecPROGRAMS clean-libtool \
	clean-local clean-noinstLIBRARIES clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS clean-pkglibexecPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-hdr \
	distclean-libtool distclean-local distclean-tags

dvi: dvi-recursive

dvi-am: dvi-local

html: html-recursive

html-am: html-local

info: info-recursive

info-am: info-local

install-data-am: install-data-local install-dist_javaDATA \
	install-dist_pkgdataDATA install-dist_pkgdata_cmd_includeDATA \
	install-dist_pkgdatadir_htmlDATA \
	install-dist_pkgdatadir_html_cssDATA \
	install-dist_pkgdatadir_html_fontsDATA \
	install-dist_pkgdatadir_html_jsDATA \
	install-dist_pkgsharedstateDATA install-includeHEADERS \
	install-nodist_includeHEADERS install-nodist_pkgincludeHEADERS \
	install-pkgdataDATA install-pkgincludeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am: install-dvi-local

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-exec-local install-libLTLIBRARIES \
	install-libexecPROGRAMS install-libexecSCRIPTS \
	install-pkglibexecPROGRAMS install-pkglibexecSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am: install-html-local

install-info: install-info-recursive

install-info-am: install-info-local

install-man:

install-pdf: install-pdf-recursive

install-pdf-am: install-pdf-local

install-ps: install-ps-recursive

install-ps-am: install-ps-local

installcheck-am: installcheck-local

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool \
	mostlyclean-local

pdf: pdf-recursive

pdf-am: pdf-local

ps: ps-recursive

ps-am: ps-local

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_javaDATA uninstall-dist_pkgdataDATA \
	uninstall-dist_pkgdata_cmd_includeDATA \
	uninstall-dist_pkgdatadir_htmlDATA \
	uninstall-dist_pkgdatadir_html_cssDATA \
	uninstall-dist_pkgdatadir_html_fontsDATA \
	uninstall-dist_pkgdatadir_html_jsDATA \
	uninstall-dist_pkgsharedstateDATA uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-libexecPROGRAMS \
	uninstall-libexecSCRIPTS uninstall-local \
	uninstall-nodist_includeHEADERS \
	uninstall-nodist_pkgincludeHEADERS uninstall-pkgdataDATA \
	uninstall-pkgincludeHEADERS uninstall-pkglibexecPROGRAMS \
	uninstall-pkglibexecSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-data-am install-exec install-exec-am install-strip \
	uninstall-am

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am all-local \
	am--refresh check check-TESTS check-am check-local clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-cscope \
	clean-generic clean-libLTLIBRARIES clean-libexecPROGRAMS \
	clean-libtool clean-local clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	clean-pkglibexecPROGRAMS cscope cscopelist-am ctags ctags-am \
	dist dist-all dist-bzip2 dist-gzip dist-hook dist-lzip \
	dist-shar dist-tarZ dist-xz dist-zip dist-zstd distcheck \
	distclean distclean-generic distclean-hdr distclean-libtool \
	distclean-local distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am dvi-local html html-am \
	html-local info info-am info-local install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-data-hook install-data-local \
	install-dist_javaDATA install-dist_pkgdataDATA \
	install-dist_pkgdata_cmd_includeDATA \
	install-dist_pkgdatadir_htmlDATA \
	install-dist_pkgdatadir_html_cssDATA \
	install-dist_pkgdatadir_html_fontsDATA \
	install-dist_pkgdatadir_html_jsDATA \
	install-dist_pkgsharedstateDATA install-dvi install-dvi-am \
	install-dvi-local install-exec install-exec-am \
	install-exec-hook install-exec-local install-html \
	install-html-am install-html-local install-includeHEADERS \
	install-info install-info-am install-info-local \
	install-libLTLIBRARIES install-libexecPROGRAMS \
	install-libexecSCRIPTS install-man \
	install-nodist_includeHEADERS install-nodist_pkgincludeHEADERS \
	install-pdf install-pdf-am install-pdf-local \
	install-pkgdataDATA install-pkgincludeHEADERS \
	install-pkglibexecPROGRAMS install-pkglibexecSCRIPTS \
	install-ps install-ps-am install-ps-local install-strip \
	installcheck installcheck-am installcheck-local installdirs \
	installdirs-am installdirs-local maintainer-clean \
	maintainer-clean-generic maintainer-clean-local mostlyclean \
	mostlyclean-generic mostlyclean-libtool mostlyclean-local pdf \
	pdf-am pdf-local ps ps-am ps-local recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-dist_javaDATA \
	uninstall-dist_pkgdataDATA \
	uninstall-dist_pkgdata_cmd_includeDATA \
	uninstall-dist_pkgdatadir_htmlDATA \
	uninstall-dist_pkgdatadir_html_cssDATA \
	uninstall-dist_pkgdatadir_html_fontsDATA \
	uninstall-dist_pkgdatadir_html_jsDATA \
	uninstall-dist_pkgsharedstateDATA uninstall-hook \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-libexecPROGRAMS uninstall-libexecSCRIPTS \
	uninstall-local uninstall-nodist_includeHEADERS \
	uninstall-nodist_pkgincludeHEADERS uninstall-pkgdataDATA \
	uninstall-pkgincludeHEADERS uninstall-pkglibexecPROGRAMS \
	uninstall-pkglibexecSCRIPTS

.PRECIOUS: Makefile


.PHONY: FORCE
FORCE:
GATBPS_MOSTLYCLEANFILES/dummy $(GATBPS_MOSTLYCLEANFILES): FORCE
	@case '$@' in *[0-9A-Za-z]/clean) :; ;; *) m='Makefile: GATBPS_MOSTLYCLEANFILES ($@): Error:'; m=$$m" Target name must end with [0-9A-Za-z]/clean."; printf '%s\n' "$$m" >&2; exit 1; esac;
	rm -f -r $(@D) $(@D)$(TSUF)*
mostlyclean-local: $(GATBPS_MOSTLYCLEANFILES)
GATBPS_CLEANFILES/dummy $(GATBPS_CLEANFILES): FORCE
	@case '$@' in *[0-9A-Za-z]/clean) :; ;; *) m='Makefile: GATBPS_CLEANFILES ($@): Error:'; m=$$m" Target name must end with [0-9A-Za-z]/clean."; printf '%s\n' "$$m" >&2; exit 1; esac;
	rm -f -r $(@D) $(@D)$(TSUF)*
clean-local: $(GATBPS_CLEANFILES)
GATBPS_DISTCLEANFILES/dummy $(GATBPS_DISTCLEANFILES): FORCE
	@case '$@' in *[0-9A-Za-z]/clean) :; ;; *) m='Makefile: GATBPS_DISTCLEANFILES ($@): Error:'; m=$$m" Target name must end with [0-9A-Za-z]/clean."; printf '%s\n' "$$m" >&2; exit 1; esac;
	rm -f -r $(@D) $(@D)$(TSUF)*
distclean-local: $(GATBPS_DISTCLEANFILES)
GATBPS_MAINTAINERCLEANFILES/dummy $(GATBPS_MAINTAINERCLEANFILES): FORCE
	@case '$@' in *[0-9A-Za-z]/clean) :; ;; *) m='Makefile: GATBPS_MAINTAINERCLEANFILES ($@): Error:'; m=$$m" Target name must end with [0-9A-Za-z]/clean."; printf '%s\n' "$$m" >&2; exit 1; esac;
	rm -f -r $(@D) $(@D)$(TSUF)*
maintainer-clean-local: $(GATBPS_MAINTAINERCLEANFILES)

all-local:
check-local:
clean-local:
dist-hook:
distcheck-hook:
distclean-local:
dvi-local:
html-local:
info-local:
install-data-hook:
install-data-local:
install-dvi-local:
install-exec-hook:
install-exec-local:
install-html-local:
install-info-local:
install-pdf-local:
install-ps-local:
installcheck-local:
installdirs-local:
maintainer-clean-local:
mostlyclean-local:
pdf-local:
ps-local:
uninstall-hook:
uninstall-local:

install-prehook: FORCE

install-am: FORCE install-prehook all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-data-am install-exec-am

uninstall-prehook: FORCE

uninstall: FORCE uninstall-prehook
	@$(MAKE) $(AM_MAKEFLAGS) uninstall-recursive

install-prehook: uninstall

GATBPS_UNINSTALL_MKDIRS/dummy $(GATBPS_UNINSTALL_MKDIRS): FORCE
	@case '$@' in *[0-9A-Za-z]/mkdir[0-9][0-9]) :; ;; *) m="Makefile: GATBPS_UNINSTALL_MKDIRS ($@): Error:"; m="$${m?} Target name must end with"; m="$${m?} [0-9A-Za-z]/mkdir[0-9][0-9]."; printf '%s\n' "$${m?}" >&2; exit 1; esac;
	$(MKDIR_P) $(DESTDIR)$(@D)

uninstall-prehook: FORCE $(GATBPS_UNINSTALL_MKDIRS)

GATBPS_UNINSTALL_RMFRS/dummy $(GATBPS_UNINSTALL_RMFRS): FORCE
	@case '$@' in *[0-9A-Za-z]/rmfr[0-9][0-9]) :; ;; *) m="Makefile: GATBPS_UNINSTALL_RMFRS ($@): Error:"; m="$${m?} Target name must end with"; m="$${m?} [0-9A-Za-z]/rmfr[0-9][0-9]."; printf '%s\n' "$${m?}" >&2; exit 1; esac;
	rm -f -r $(DESTDIR)$(@D)

uninstall-hook: FORCE $(GATBPS_UNINSTALL_RMFRS)

GATBPS_DISTFILES_CHMOD: FORCE
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( distdir='$(distdir)'; case $$distdir in [!./]*) distdir=./$$distdir; esac; if $(AM_V_P); then sq=; for cqDe_w in chmod -R u+w "$$distdir" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; chmod -R u+w "$$distdir" || exit $$?; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: FORCE

GATBPS_DISTFILES_0: FORCE
GATBPS_DISTFILES_0: $(GATBPS_DISTFILES_0)
GATBPS_DISTFILES_0: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_0); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_0 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_0 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_0

GATBPS_DISTFILES_1: FORCE
GATBPS_DISTFILES_1: $(GATBPS_DISTFILES_1)
GATBPS_DISTFILES_1: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_1); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_1 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_1 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_1

GATBPS_DISTFILES_2: FORCE
GATBPS_DISTFILES_2: $(GATBPS_DISTFILES_2)
GATBPS_DISTFILES_2: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_2); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_2 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_2 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_2

GATBPS_DISTFILES_3: FORCE
GATBPS_DISTFILES_3: $(GATBPS_DISTFILES_3)
GATBPS_DISTFILES_3: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_3); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_3 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_3 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_3

GATBPS_DISTFILES_4: FORCE
GATBPS_DISTFILES_4: $(GATBPS_DISTFILES_4)
GATBPS_DISTFILES_4: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_4); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_4 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_4 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_4

GATBPS_DISTFILES_5: FORCE
GATBPS_DISTFILES_5: $(GATBPS_DISTFILES_5)
GATBPS_DISTFILES_5: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_5); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_5 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_5 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_5

GATBPS_DISTFILES_6: FORCE
GATBPS_DISTFILES_6: $(GATBPS_DISTFILES_6)
GATBPS_DISTFILES_6: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_6); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_6 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_6 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_6

GATBPS_DISTFILES_7: FORCE
GATBPS_DISTFILES_7: $(GATBPS_DISTFILES_7)
GATBPS_DISTFILES_7: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_7); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_7 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_7 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_7

GATBPS_DISTFILES_8: FORCE
GATBPS_DISTFILES_8: $(GATBPS_DISTFILES_8)
GATBPS_DISTFILES_8: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_8); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_8 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_8 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_8

GATBPS_DISTFILES_9: FORCE
GATBPS_DISTFILES_9: $(GATBPS_DISTFILES_9)
GATBPS_DISTFILES_9: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_9); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_9 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_9 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_9

GATBPS_DISTFILES_10: FORCE
GATBPS_DISTFILES_10: $(GATBPS_DISTFILES_10)
GATBPS_DISTFILES_10: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_10); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_10 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_10 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_10

GATBPS_DISTFILES_11: FORCE
GATBPS_DISTFILES_11: $(GATBPS_DISTFILES_11)
GATBPS_DISTFILES_11: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_11); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_11 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_11 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_11

GATBPS_DISTFILES_12: FORCE
GATBPS_DISTFILES_12: $(GATBPS_DISTFILES_12)
GATBPS_DISTFILES_12: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_12); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_12 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_12 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_12

GATBPS_DISTFILES_13: FORCE
GATBPS_DISTFILES_13: $(GATBPS_DISTFILES_13)
GATBPS_DISTFILES_13: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_13); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_13 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_13 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_13

GATBPS_DISTFILES_14: FORCE
GATBPS_DISTFILES_14: $(GATBPS_DISTFILES_14)
GATBPS_DISTFILES_14: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_14); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_14 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_14 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_14

GATBPS_DISTFILES_15: FORCE
GATBPS_DISTFILES_15: $(GATBPS_DISTFILES_15)
GATBPS_DISTFILES_15: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_15); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_15 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_15 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_15

GATBPS_DISTFILES_16: FORCE
GATBPS_DISTFILES_16: $(GATBPS_DISTFILES_16)
GATBPS_DISTFILES_16: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_16); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_16 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_16 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_16

GATBPS_DISTFILES_17: FORCE
GATBPS_DISTFILES_17: $(GATBPS_DISTFILES_17)
GATBPS_DISTFILES_17: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_17); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_17 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_17 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_17

GATBPS_DISTFILES_18: FORCE
GATBPS_DISTFILES_18: $(GATBPS_DISTFILES_18)
GATBPS_DISTFILES_18: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_18); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_18 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_18 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_18

GATBPS_DISTFILES_19: FORCE
GATBPS_DISTFILES_19: $(GATBPS_DISTFILES_19)
GATBPS_DISTFILES_19: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_19); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_19 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_19 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_19

GATBPS_DISTFILES_20: FORCE
GATBPS_DISTFILES_20: $(GATBPS_DISTFILES_20)
GATBPS_DISTFILES_20: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_20); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_20 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_20 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_20

GATBPS_DISTFILES_21: FORCE
GATBPS_DISTFILES_21: $(GATBPS_DISTFILES_21)
GATBPS_DISTFILES_21: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_21); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_21 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_21 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_21

GATBPS_DISTFILES_22: FORCE
GATBPS_DISTFILES_22: $(GATBPS_DISTFILES_22)
GATBPS_DISTFILES_22: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_22); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_22 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_22 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_22

GATBPS_DISTFILES_23: FORCE
GATBPS_DISTFILES_23: $(GATBPS_DISTFILES_23)
GATBPS_DISTFILES_23: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_23); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_23 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_23 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_23

GATBPS_DISTFILES_24: FORCE
GATBPS_DISTFILES_24: $(GATBPS_DISTFILES_24)
GATBPS_DISTFILES_24: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_24); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_24 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_24 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_24

GATBPS_DISTFILES_25: FORCE
GATBPS_DISTFILES_25: $(GATBPS_DISTFILES_25)
GATBPS_DISTFILES_25: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_25); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_25 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_25 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_25

GATBPS_DISTFILES_26: FORCE
GATBPS_DISTFILES_26: $(GATBPS_DISTFILES_26)
GATBPS_DISTFILES_26: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_26); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_26 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_26 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_26

GATBPS_DISTFILES_27: FORCE
GATBPS_DISTFILES_27: $(GATBPS_DISTFILES_27)
GATBPS_DISTFILES_27: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_27); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_27 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_27 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_27

GATBPS_DISTFILES_28: FORCE
GATBPS_DISTFILES_28: $(GATBPS_DISTFILES_28)
GATBPS_DISTFILES_28: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_28); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_28 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_28 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_28

GATBPS_DISTFILES_29: FORCE
GATBPS_DISTFILES_29: $(GATBPS_DISTFILES_29)
GATBPS_DISTFILES_29: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_29); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_29 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_29 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_29

GATBPS_DISTFILES_30: FORCE
GATBPS_DISTFILES_30: $(GATBPS_DISTFILES_30)
GATBPS_DISTFILES_30: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_30); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_30 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_30 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_30

GATBPS_DISTFILES_31: FORCE
GATBPS_DISTFILES_31: $(GATBPS_DISTFILES_31)
GATBPS_DISTFILES_31: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_31); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_31 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_31 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_31

GATBPS_DISTFILES_32: FORCE
GATBPS_DISTFILES_32: $(GATBPS_DISTFILES_32)
GATBPS_DISTFILES_32: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_32); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_32 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_32 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_32

GATBPS_DISTFILES_33: FORCE
GATBPS_DISTFILES_33: $(GATBPS_DISTFILES_33)
GATBPS_DISTFILES_33: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_33); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_33 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_33 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_33

GATBPS_DISTFILES_34: FORCE
GATBPS_DISTFILES_34: $(GATBPS_DISTFILES_34)
GATBPS_DISTFILES_34: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_34); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_34 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_34 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_34

GATBPS_DISTFILES_35: FORCE
GATBPS_DISTFILES_35: $(GATBPS_DISTFILES_35)
GATBPS_DISTFILES_35: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_35); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_35 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_35 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_35

GATBPS_DISTFILES_36: FORCE
GATBPS_DISTFILES_36: $(GATBPS_DISTFILES_36)
GATBPS_DISTFILES_36: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_36); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_36 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_36 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_36

GATBPS_DISTFILES_37: FORCE
GATBPS_DISTFILES_37: $(GATBPS_DISTFILES_37)
GATBPS_DISTFILES_37: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_37); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_37 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_37 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_37

GATBPS_DISTFILES_38: FORCE
GATBPS_DISTFILES_38: $(GATBPS_DISTFILES_38)
GATBPS_DISTFILES_38: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_38); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_38 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_38 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_38

GATBPS_DISTFILES_39: FORCE
GATBPS_DISTFILES_39: $(GATBPS_DISTFILES_39)
GATBPS_DISTFILES_39: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_39); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_39 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_39 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_39

GATBPS_DISTFILES_40: FORCE
GATBPS_DISTFILES_40: $(GATBPS_DISTFILES_40)
GATBPS_DISTFILES_40: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_40); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_40 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_40 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_40

GATBPS_DISTFILES_41: FORCE
GATBPS_DISTFILES_41: $(GATBPS_DISTFILES_41)
GATBPS_DISTFILES_41: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_41); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_41 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_41 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_41

GATBPS_DISTFILES_42: FORCE
GATBPS_DISTFILES_42: $(GATBPS_DISTFILES_42)
GATBPS_DISTFILES_42: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_42); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_42 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_42 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_42

GATBPS_DISTFILES_43: FORCE
GATBPS_DISTFILES_43: $(GATBPS_DISTFILES_43)
GATBPS_DISTFILES_43: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_43); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_43 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_43 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_43

GATBPS_DISTFILES_44: FORCE
GATBPS_DISTFILES_44: $(GATBPS_DISTFILES_44)
GATBPS_DISTFILES_44: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_44); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_44 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_44 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_44

GATBPS_DISTFILES_45: FORCE
GATBPS_DISTFILES_45: $(GATBPS_DISTFILES_45)
GATBPS_DISTFILES_45: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_45); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_45 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_45 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_45

GATBPS_DISTFILES_46: FORCE
GATBPS_DISTFILES_46: $(GATBPS_DISTFILES_46)
GATBPS_DISTFILES_46: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_46); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_46 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_46 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_46

GATBPS_DISTFILES_47: FORCE
GATBPS_DISTFILES_47: $(GATBPS_DISTFILES_47)
GATBPS_DISTFILES_47: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_47); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_47 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_47 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_47

GATBPS_DISTFILES_48: FORCE
GATBPS_DISTFILES_48: $(GATBPS_DISTFILES_48)
GATBPS_DISTFILES_48: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_48); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_48 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_48 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_48

GATBPS_DISTFILES_49: FORCE
GATBPS_DISTFILES_49: $(GATBPS_DISTFILES_49)
GATBPS_DISTFILES_49: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_49); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_49 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_49 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_49

GATBPS_DISTFILES_50: FORCE
GATBPS_DISTFILES_50: $(GATBPS_DISTFILES_50)
GATBPS_DISTFILES_50: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_50); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_50 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_50 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_50

GATBPS_DISTFILES_51: FORCE
GATBPS_DISTFILES_51: $(GATBPS_DISTFILES_51)
GATBPS_DISTFILES_51: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_51); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_51 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_51 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_51

GATBPS_DISTFILES_52: FORCE
GATBPS_DISTFILES_52: $(GATBPS_DISTFILES_52)
GATBPS_DISTFILES_52: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_52); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_52 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_52 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_52

GATBPS_DISTFILES_53: FORCE
GATBPS_DISTFILES_53: $(GATBPS_DISTFILES_53)
GATBPS_DISTFILES_53: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_53); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_53 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_53 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_53

GATBPS_DISTFILES_54: FORCE
GATBPS_DISTFILES_54: $(GATBPS_DISTFILES_54)
GATBPS_DISTFILES_54: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_54); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_54 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_54 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_54

GATBPS_DISTFILES_55: FORCE
GATBPS_DISTFILES_55: $(GATBPS_DISTFILES_55)
GATBPS_DISTFILES_55: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_55); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_55 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_55 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_55

GATBPS_DISTFILES_56: FORCE
GATBPS_DISTFILES_56: $(GATBPS_DISTFILES_56)
GATBPS_DISTFILES_56: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_56); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_56 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_56 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_56

GATBPS_DISTFILES_57: FORCE
GATBPS_DISTFILES_57: $(GATBPS_DISTFILES_57)
GATBPS_DISTFILES_57: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_57); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_57 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_57 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_57

GATBPS_DISTFILES_58: FORCE
GATBPS_DISTFILES_58: $(GATBPS_DISTFILES_58)
GATBPS_DISTFILES_58: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_58); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_58 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_58 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_58

GATBPS_DISTFILES_59: FORCE
GATBPS_DISTFILES_59: $(GATBPS_DISTFILES_59)
GATBPS_DISTFILES_59: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_59); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_59 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_59 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_59

GATBPS_DISTFILES_60: FORCE
GATBPS_DISTFILES_60: $(GATBPS_DISTFILES_60)
GATBPS_DISTFILES_60: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_60); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_60 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_60 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_60

GATBPS_DISTFILES_61: FORCE
GATBPS_DISTFILES_61: $(GATBPS_DISTFILES_61)
GATBPS_DISTFILES_61: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_61); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_61 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_61 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_61

GATBPS_DISTFILES_62: FORCE
GATBPS_DISTFILES_62: $(GATBPS_DISTFILES_62)
GATBPS_DISTFILES_62: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_62); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_62 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_62 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_62

GATBPS_DISTFILES_63: FORCE
GATBPS_DISTFILES_63: $(GATBPS_DISTFILES_63)
GATBPS_DISTFILES_63: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_63); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_63 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_63 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_63

GATBPS_DISTFILES_64: FORCE
GATBPS_DISTFILES_64: $(GATBPS_DISTFILES_64)
GATBPS_DISTFILES_64: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_64); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_64 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_64 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_64

GATBPS_DISTFILES_65: FORCE
GATBPS_DISTFILES_65: $(GATBPS_DISTFILES_65)
GATBPS_DISTFILES_65: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_65); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_65 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_65 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_65

GATBPS_DISTFILES_66: FORCE
GATBPS_DISTFILES_66: $(GATBPS_DISTFILES_66)
GATBPS_DISTFILES_66: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_66); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_66 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_66 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_66

GATBPS_DISTFILES_67: FORCE
GATBPS_DISTFILES_67: $(GATBPS_DISTFILES_67)
GATBPS_DISTFILES_67: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_67); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_67 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_67 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_67

GATBPS_DISTFILES_68: FORCE
GATBPS_DISTFILES_68: $(GATBPS_DISTFILES_68)
GATBPS_DISTFILES_68: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_68); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_68 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_68 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_68

GATBPS_DISTFILES_69: FORCE
GATBPS_DISTFILES_69: $(GATBPS_DISTFILES_69)
GATBPS_DISTFILES_69: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_69); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_69 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_69 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_69

GATBPS_DISTFILES_70: FORCE
GATBPS_DISTFILES_70: $(GATBPS_DISTFILES_70)
GATBPS_DISTFILES_70: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_70); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_70 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_70 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_70

GATBPS_DISTFILES_71: FORCE
GATBPS_DISTFILES_71: $(GATBPS_DISTFILES_71)
GATBPS_DISTFILES_71: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_71); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_71 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_71 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_71

GATBPS_DISTFILES_72: FORCE
GATBPS_DISTFILES_72: $(GATBPS_DISTFILES_72)
GATBPS_DISTFILES_72: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_72); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_72 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_72 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_72

GATBPS_DISTFILES_73: FORCE
GATBPS_DISTFILES_73: $(GATBPS_DISTFILES_73)
GATBPS_DISTFILES_73: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_73); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_73 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_73 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_73

GATBPS_DISTFILES_74: FORCE
GATBPS_DISTFILES_74: $(GATBPS_DISTFILES_74)
GATBPS_DISTFILES_74: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_74); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_74 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_74 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_74

GATBPS_DISTFILES_75: FORCE
GATBPS_DISTFILES_75: $(GATBPS_DISTFILES_75)
GATBPS_DISTFILES_75: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_75); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_75 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_75 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_75

GATBPS_DISTFILES_76: FORCE
GATBPS_DISTFILES_76: $(GATBPS_DISTFILES_76)
GATBPS_DISTFILES_76: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_76); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_76 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_76 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_76

GATBPS_DISTFILES_77: FORCE
GATBPS_DISTFILES_77: $(GATBPS_DISTFILES_77)
GATBPS_DISTFILES_77: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_77); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_77 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_77 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_77

GATBPS_DISTFILES_78: FORCE
GATBPS_DISTFILES_78: $(GATBPS_DISTFILES_78)
GATBPS_DISTFILES_78: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_78); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_78 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_78 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_78

GATBPS_DISTFILES_79: FORCE
GATBPS_DISTFILES_79: $(GATBPS_DISTFILES_79)
GATBPS_DISTFILES_79: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_79); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_79 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_79 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_79

GATBPS_DISTFILES_80: FORCE
GATBPS_DISTFILES_80: $(GATBPS_DISTFILES_80)
GATBPS_DISTFILES_80: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_80); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_80 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_80 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_80

GATBPS_DISTFILES_81: FORCE
GATBPS_DISTFILES_81: $(GATBPS_DISTFILES_81)
GATBPS_DISTFILES_81: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_81); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_81 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_81 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_81

GATBPS_DISTFILES_82: FORCE
GATBPS_DISTFILES_82: $(GATBPS_DISTFILES_82)
GATBPS_DISTFILES_82: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_82); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_82 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_82 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_82

GATBPS_DISTFILES_83: FORCE
GATBPS_DISTFILES_83: $(GATBPS_DISTFILES_83)
GATBPS_DISTFILES_83: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_83); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_83 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_83 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_83

GATBPS_DISTFILES_84: FORCE
GATBPS_DISTFILES_84: $(GATBPS_DISTFILES_84)
GATBPS_DISTFILES_84: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_84); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_84 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_84 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_84

GATBPS_DISTFILES_85: FORCE
GATBPS_DISTFILES_85: $(GATBPS_DISTFILES_85)
GATBPS_DISTFILES_85: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_85); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_85 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_85 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_85

GATBPS_DISTFILES_86: FORCE
GATBPS_DISTFILES_86: $(GATBPS_DISTFILES_86)
GATBPS_DISTFILES_86: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_86); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_86 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_86 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_86

GATBPS_DISTFILES_87: FORCE
GATBPS_DISTFILES_87: $(GATBPS_DISTFILES_87)
GATBPS_DISTFILES_87: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_87); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_87 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_87 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_87

GATBPS_DISTFILES_88: FORCE
GATBPS_DISTFILES_88: $(GATBPS_DISTFILES_88)
GATBPS_DISTFILES_88: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_88); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_88 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_88 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_88

GATBPS_DISTFILES_89: FORCE
GATBPS_DISTFILES_89: $(GATBPS_DISTFILES_89)
GATBPS_DISTFILES_89: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_89); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_89 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_89 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_89

GATBPS_DISTFILES_90: FORCE
GATBPS_DISTFILES_90: $(GATBPS_DISTFILES_90)
GATBPS_DISTFILES_90: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_90); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_90 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_90 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_90

GATBPS_DISTFILES_91: FORCE
GATBPS_DISTFILES_91: $(GATBPS_DISTFILES_91)
GATBPS_DISTFILES_91: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_91); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_91 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_91 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_91

GATBPS_DISTFILES_92: FORCE
GATBPS_DISTFILES_92: $(GATBPS_DISTFILES_92)
GATBPS_DISTFILES_92: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_92); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_92 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_92 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_92

GATBPS_DISTFILES_93: FORCE
GATBPS_DISTFILES_93: $(GATBPS_DISTFILES_93)
GATBPS_DISTFILES_93: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_93); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_93 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_93 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_93

GATBPS_DISTFILES_94: FORCE
GATBPS_DISTFILES_94: $(GATBPS_DISTFILES_94)
GATBPS_DISTFILES_94: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_94); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_94 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_94 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_94

GATBPS_DISTFILES_95: FORCE
GATBPS_DISTFILES_95: $(GATBPS_DISTFILES_95)
GATBPS_DISTFILES_95: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_95); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_95 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_95 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_95

GATBPS_DISTFILES_96: FORCE
GATBPS_DISTFILES_96: $(GATBPS_DISTFILES_96)
GATBPS_DISTFILES_96: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_96); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_96 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_96 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_96

GATBPS_DISTFILES_97: FORCE
GATBPS_DISTFILES_97: $(GATBPS_DISTFILES_97)
GATBPS_DISTFILES_97: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_97); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_97 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_97 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_97

GATBPS_DISTFILES_98: FORCE
GATBPS_DISTFILES_98: $(GATBPS_DISTFILES_98)
GATBPS_DISTFILES_98: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_98); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_98 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_98 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_98

GATBPS_DISTFILES_99: FORCE
GATBPS_DISTFILES_99: $(GATBPS_DISTFILES_99)
GATBPS_DISTFILES_99: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_99); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_99 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_99 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_99

dist-hook: GATBPS_DISTFILES

list-distfiles-DISTFILES: FORCE
	@ for x in $(DISTFILES) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-DISTFILES

list-distfiles-GATBPS_DISTFILES_0: FORCE
	@ for x in $(GATBPS_DISTFILES_0) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_0

list-distfiles-GATBPS_DISTFILES_1: FORCE
	@ for x in $(GATBPS_DISTFILES_1) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_1

list-distfiles-GATBPS_DISTFILES_2: FORCE
	@ for x in $(GATBPS_DISTFILES_2) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_2

list-distfiles-GATBPS_DISTFILES_3: FORCE
	@ for x in $(GATBPS_DISTFILES_3) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_3

list-distfiles-GATBPS_DISTFILES_4: FORCE
	@ for x in $(GATBPS_DISTFILES_4) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_4

list-distfiles-GATBPS_DISTFILES_5: FORCE
	@ for x in $(GATBPS_DISTFILES_5) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_5

list-distfiles-GATBPS_DISTFILES_6: FORCE
	@ for x in $(GATBPS_DISTFILES_6) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_6

list-distfiles-GATBPS_DISTFILES_7: FORCE
	@ for x in $(GATBPS_DISTFILES_7) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_7

list-distfiles-GATBPS_DISTFILES_8: FORCE
	@ for x in $(GATBPS_DISTFILES_8) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_8

list-distfiles-GATBPS_DISTFILES_9: FORCE
	@ for x in $(GATBPS_DISTFILES_9) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_9

list-distfiles-GATBPS_DISTFILES_10: FORCE
	@ for x in $(GATBPS_DISTFILES_10) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_10

list-distfiles-GATBPS_DISTFILES_11: FORCE
	@ for x in $(GATBPS_DISTFILES_11) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_11

list-distfiles-GATBPS_DISTFILES_12: FORCE
	@ for x in $(GATBPS_DISTFILES_12) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_12

list-distfiles-GATBPS_DISTFILES_13: FORCE
	@ for x in $(GATBPS_DISTFILES_13) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_13

list-distfiles-GATBPS_DISTFILES_14: FORCE
	@ for x in $(GATBPS_DISTFILES_14) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_14

list-distfiles-GATBPS_DISTFILES_15: FORCE
	@ for x in $(GATBPS_DISTFILES_15) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_15

list-distfiles-GATBPS_DISTFILES_16: FORCE
	@ for x in $(GATBPS_DISTFILES_16) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_16

list-distfiles-GATBPS_DISTFILES_17: FORCE
	@ for x in $(GATBPS_DISTFILES_17) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_17

list-distfiles-GATBPS_DISTFILES_18: FORCE
	@ for x in $(GATBPS_DISTFILES_18) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_18

list-distfiles-GATBPS_DISTFILES_19: FORCE
	@ for x in $(GATBPS_DISTFILES_19) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_19

list-distfiles-GATBPS_DISTFILES_20: FORCE
	@ for x in $(GATBPS_DISTFILES_20) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_20

list-distfiles-GATBPS_DISTFILES_21: FORCE
	@ for x in $(GATBPS_DISTFILES_21) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_21

list-distfiles-GATBPS_DISTFILES_22: FORCE
	@ for x in $(GATBPS_DISTFILES_22) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_22

list-distfiles-GATBPS_DISTFILES_23: FORCE
	@ for x in $(GATBPS_DISTFILES_23) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_23

list-distfiles-GATBPS_DISTFILES_24: FORCE
	@ for x in $(GATBPS_DISTFILES_24) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_24

list-distfiles-GATBPS_DISTFILES_25: FORCE
	@ for x in $(GATBPS_DISTFILES_25) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_25

list-distfiles-GATBPS_DISTFILES_26: FORCE
	@ for x in $(GATBPS_DISTFILES_26) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_26

list-distfiles-GATBPS_DISTFILES_27: FORCE
	@ for x in $(GATBPS_DISTFILES_27) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_27

list-distfiles-GATBPS_DISTFILES_28: FORCE
	@ for x in $(GATBPS_DISTFILES_28) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_28

list-distfiles-GATBPS_DISTFILES_29: FORCE
	@ for x in $(GATBPS_DISTFILES_29) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_29

list-distfiles-GATBPS_DISTFILES_30: FORCE
	@ for x in $(GATBPS_DISTFILES_30) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_30

list-distfiles-GATBPS_DISTFILES_31: FORCE
	@ for x in $(GATBPS_DISTFILES_31) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_31

list-distfiles-GATBPS_DISTFILES_32: FORCE
	@ for x in $(GATBPS_DISTFILES_32) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_32

list-distfiles-GATBPS_DISTFILES_33: FORCE
	@ for x in $(GATBPS_DISTFILES_33) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_33

list-distfiles-GATBPS_DISTFILES_34: FORCE
	@ for x in $(GATBPS_DISTFILES_34) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_34

list-distfiles-GATBPS_DISTFILES_35: FORCE
	@ for x in $(GATBPS_DISTFILES_35) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_35

list-distfiles-GATBPS_DISTFILES_36: FORCE
	@ for x in $(GATBPS_DISTFILES_36) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_36

list-distfiles-GATBPS_DISTFILES_37: FORCE
	@ for x in $(GATBPS_DISTFILES_37) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_37

list-distfiles-GATBPS_DISTFILES_38: FORCE
	@ for x in $(GATBPS_DISTFILES_38) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_38

list-distfiles-GATBPS_DISTFILES_39: FORCE
	@ for x in $(GATBPS_DISTFILES_39) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_39

list-distfiles-GATBPS_DISTFILES_40: FORCE
	@ for x in $(GATBPS_DISTFILES_40) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_40

list-distfiles-GATBPS_DISTFILES_41: FORCE
	@ for x in $(GATBPS_DISTFILES_41) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_41

list-distfiles-GATBPS_DISTFILES_42: FORCE
	@ for x in $(GATBPS_DISTFILES_42) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_42

list-distfiles-GATBPS_DISTFILES_43: FORCE
	@ for x in $(GATBPS_DISTFILES_43) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_43

list-distfiles-GATBPS_DISTFILES_44: FORCE
	@ for x in $(GATBPS_DISTFILES_44) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_44

list-distfiles-GATBPS_DISTFILES_45: FORCE
	@ for x in $(GATBPS_DISTFILES_45) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_45

list-distfiles-GATBPS_DISTFILES_46: FORCE
	@ for x in $(GATBPS_DISTFILES_46) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_46

list-distfiles-GATBPS_DISTFILES_47: FORCE
	@ for x in $(GATBPS_DISTFILES_47) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_47

list-distfiles-GATBPS_DISTFILES_48: FORCE
	@ for x in $(GATBPS_DISTFILES_48) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_48

list-distfiles-GATBPS_DISTFILES_49: FORCE
	@ for x in $(GATBPS_DISTFILES_49) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_49

list-distfiles-GATBPS_DISTFILES_50: FORCE
	@ for x in $(GATBPS_DISTFILES_50) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_50

list-distfiles-GATBPS_DISTFILES_51: FORCE
	@ for x in $(GATBPS_DISTFILES_51) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_51

list-distfiles-GATBPS_DISTFILES_52: FORCE
	@ for x in $(GATBPS_DISTFILES_52) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_52

list-distfiles-GATBPS_DISTFILES_53: FORCE
	@ for x in $(GATBPS_DISTFILES_53) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_53

list-distfiles-GATBPS_DISTFILES_54: FORCE
	@ for x in $(GATBPS_DISTFILES_54) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_54

list-distfiles-GATBPS_DISTFILES_55: FORCE
	@ for x in $(GATBPS_DISTFILES_55) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_55

list-distfiles-GATBPS_DISTFILES_56: FORCE
	@ for x in $(GATBPS_DISTFILES_56) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_56

list-distfiles-GATBPS_DISTFILES_57: FORCE
	@ for x in $(GATBPS_DISTFILES_57) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_57

list-distfiles-GATBPS_DISTFILES_58: FORCE
	@ for x in $(GATBPS_DISTFILES_58) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_58

list-distfiles-GATBPS_DISTFILES_59: FORCE
	@ for x in $(GATBPS_DISTFILES_59) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_59

list-distfiles-GATBPS_DISTFILES_60: FORCE
	@ for x in $(GATBPS_DISTFILES_60) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_60

list-distfiles-GATBPS_DISTFILES_61: FORCE
	@ for x in $(GATBPS_DISTFILES_61) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_61

list-distfiles-GATBPS_DISTFILES_62: FORCE
	@ for x in $(GATBPS_DISTFILES_62) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_62

list-distfiles-GATBPS_DISTFILES_63: FORCE
	@ for x in $(GATBPS_DISTFILES_63) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_63

list-distfiles-GATBPS_DISTFILES_64: FORCE
	@ for x in $(GATBPS_DISTFILES_64) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_64

list-distfiles-GATBPS_DISTFILES_65: FORCE
	@ for x in $(GATBPS_DISTFILES_65) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_65

list-distfiles-GATBPS_DISTFILES_66: FORCE
	@ for x in $(GATBPS_DISTFILES_66) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_66

list-distfiles-GATBPS_DISTFILES_67: FORCE
	@ for x in $(GATBPS_DISTFILES_67) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_67

list-distfiles-GATBPS_DISTFILES_68: FORCE
	@ for x in $(GATBPS_DISTFILES_68) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_68

list-distfiles-GATBPS_DISTFILES_69: FORCE
	@ for x in $(GATBPS_DISTFILES_69) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_69

list-distfiles-GATBPS_DISTFILES_70: FORCE
	@ for x in $(GATBPS_DISTFILES_70) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_70

list-distfiles-GATBPS_DISTFILES_71: FORCE
	@ for x in $(GATBPS_DISTFILES_71) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_71

list-distfiles-GATBPS_DISTFILES_72: FORCE
	@ for x in $(GATBPS_DISTFILES_72) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_72

list-distfiles-GATBPS_DISTFILES_73: FORCE
	@ for x in $(GATBPS_DISTFILES_73) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_73

list-distfiles-GATBPS_DISTFILES_74: FORCE
	@ for x in $(GATBPS_DISTFILES_74) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_74

list-distfiles-GATBPS_DISTFILES_75: FORCE
	@ for x in $(GATBPS_DISTFILES_75) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_75

list-distfiles-GATBPS_DISTFILES_76: FORCE
	@ for x in $(GATBPS_DISTFILES_76) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_76

list-distfiles-GATBPS_DISTFILES_77: FORCE
	@ for x in $(GATBPS_DISTFILES_77) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_77

list-distfiles-GATBPS_DISTFILES_78: FORCE
	@ for x in $(GATBPS_DISTFILES_78) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_78

list-distfiles-GATBPS_DISTFILES_79: FORCE
	@ for x in $(GATBPS_DISTFILES_79) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_79

list-distfiles-GATBPS_DISTFILES_80: FORCE
	@ for x in $(GATBPS_DISTFILES_80) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_80

list-distfiles-GATBPS_DISTFILES_81: FORCE
	@ for x in $(GATBPS_DISTFILES_81) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_81

list-distfiles-GATBPS_DISTFILES_82: FORCE
	@ for x in $(GATBPS_DISTFILES_82) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_82

list-distfiles-GATBPS_DISTFILES_83: FORCE
	@ for x in $(GATBPS_DISTFILES_83) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_83

list-distfiles-GATBPS_DISTFILES_84: FORCE
	@ for x in $(GATBPS_DISTFILES_84) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_84

list-distfiles-GATBPS_DISTFILES_85: FORCE
	@ for x in $(GATBPS_DISTFILES_85) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_85

list-distfiles-GATBPS_DISTFILES_86: FORCE
	@ for x in $(GATBPS_DISTFILES_86) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_86

list-distfiles-GATBPS_DISTFILES_87: FORCE
	@ for x in $(GATBPS_DISTFILES_87) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_87

list-distfiles-GATBPS_DISTFILES_88: FORCE
	@ for x in $(GATBPS_DISTFILES_88) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_88

list-distfiles-GATBPS_DISTFILES_89: FORCE
	@ for x in $(GATBPS_DISTFILES_89) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_89

list-distfiles-GATBPS_DISTFILES_90: FORCE
	@ for x in $(GATBPS_DISTFILES_90) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_90

list-distfiles-GATBPS_DISTFILES_91: FORCE
	@ for x in $(GATBPS_DISTFILES_91) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_91

list-distfiles-GATBPS_DISTFILES_92: FORCE
	@ for x in $(GATBPS_DISTFILES_92) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_92

list-distfiles-GATBPS_DISTFILES_93: FORCE
	@ for x in $(GATBPS_DISTFILES_93) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_93

list-distfiles-GATBPS_DISTFILES_94: FORCE
	@ for x in $(GATBPS_DISTFILES_94) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_94

list-distfiles-GATBPS_DISTFILES_95: FORCE
	@ for x in $(GATBPS_DISTFILES_95) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_95

list-distfiles-GATBPS_DISTFILES_96: FORCE
	@ for x in $(GATBPS_DISTFILES_96) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_96

list-distfiles-GATBPS_DISTFILES_97: FORCE
	@ for x in $(GATBPS_DISTFILES_97) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_97

list-distfiles-GATBPS_DISTFILES_98: FORCE
	@ for x in $(GATBPS_DISTFILES_98) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_98

list-distfiles-GATBPS_DISTFILES_99: FORCE
	@ for x in $(GATBPS_DISTFILES_99) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_99

list-distfiles: FORCE
	@ for x in $(DIST_SUBDIRS) $${empty+}; do v=LIST_DISTFILES_PREFIX='$(LIST_DISTFILES_PREFIX)'$$x/; ( cd "./$$x" || exit $$?; $(MAKE) $(AM_MAKEFLAGS) -s "$$v" $@ || exit $$?; ) || exit $$?; done;

#-----------------------------------------------------------------------

$(distdir).shar.gz: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-shar
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.Z: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-tarZ
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.bz2: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-bzip2
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.gz: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-gzip
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.lz: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-lzip
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.xz: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-xz
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).zip: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-zip
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.html:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b html -o $@$(TSUF).html -r asciidoctor-diagram $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).html $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.1:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).1 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).1 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.2:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).2 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).2 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.3:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).3 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).3 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.4:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).4 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).4 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.5:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).5 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).5 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.6:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).6 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).6 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.7:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).7 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).7 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.8:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).8 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).8 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.9:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).9 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).9 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.pdf:
	$(GATBPS_V_ASCIIDOCTOR_PDF)$(ASCIIDOCTOR_PDF) -o $@$(TSUF) $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_PDF_FLAGS) $(ASCIIDOCTOR_PDF_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF) $@

GATBPS_GEN_VERSION_CACHE_FILES/dummy $(GATBPS_GEN_VERSION_CACHE_FILES):
	$(AM_V_GEN)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_at)x='$@'; r='^\(.*\)\..*$$'; x=`expr "$$x" : "$$r"` || exit $$?; sh - '$(srcdir)'/"$$x" >$@$(TSUF) || exit $$?;
	$(AM_V_at)mv -f $@$(TSUF) $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(java_dst)$(GATBPS_OUTER_JAR_SUFFIX) java.dummy_1.main: java.FORCE
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at){ \
  ( \
    x=$(java_sourcepath); \
    x=$${x}$(CLASSPATH_SEPARATOR); \
    x=$${x}$(srcdir)/$(java_sourcepath); \
    case ""$(CLASSPATH) in \
      ?*) \
        x="$${x}"$(CLASSPATH_SEPARATOR)$(CLASSPATH); \
      ;; \
    esac; \
    case ''$(java_CLASSPATH) in \
      ?*) \
        x="$${x}"$(CLASSPATH_SEPARATOR)$(java_CLASSPATH); \
      ;; \
    esac; \
    $(SHELL) \
      '-' \
      $(srcdir)/build-aux/gatbps-echo.sh -q \
      '--' \
      "$${x}" \
      1>'java-main.tmp' \
    || 'exit' "$${?}"; \
    classpath=` \
      'cat' 'java-main.tmp' \
    ` || 'exit' "$${?}"; \
    x='x'; \
    for if_not_blank in \
      $(java_JAVACFLAGS) \
      $${prevent_an_empty_word_list} \
    ; do \
      $(SHELL) \
        '-' \
        $(srcdir)/build-aux/gatbps-echo.sh -q \
        '--' \
        $(java_JAVACFLAGS) \
        1>'java-main.tmp' \
      || 'exit' "$${?}"; \
      x=''; \
      'break'; \
    done; \
    case "$${x}" in \
      ?*) \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          $(GATBPS_JAVACFLAGS) \
          1>'java-main.tmp' \
        || 'exit' "$${?}"; \
      ;; \
    esac; \
    javacflags=` \
      'cat' 'java-main.tmp' \
    ` || 'exit' "$${?}"; \
    $(MAKE) \
      $(AM_MAKEFLAGS) \
      GATBPS_INNER_CLASSPATH="$${classpath}" \
      GATBPS_INNER_JAR_SUFFIX= \
      GATBPS_INNER_JAVACFLAGS="$${javacflags}" \
      GATBPS_INNER_PACKAGE=$(java_package) \
      GATBPS_INNER_SOURCEPATH=$(java_sourcepath) \
      GATBPS_OUTER_JAR_SUFFIX=/outer \
      './'$(java_dst) \
    || 'exit' "$${?}"; \
    'exit' '0'; \
  :;); \
  x="$${?}"; \
  'rm' \
    '-f' \
    'java-main.tmp' \
  ; \
  'exit' "$${x}"; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

./$(java_dst)$(GATBPS_INNER_JAR_SUFFIX): $(java_dep)
./$(java_dst)$(GATBPS_INNER_JAR_SUFFIX): $(java_extra)
./$(java_dst)$(GATBPS_INNER_JAR_SUFFIX): $(javadoc_src)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_JAR)$(GATBPS_V_NOP)
	$(AM_V_at){ \
  ( \
\
    srcdir='$(srcdir)'; \
    case $$srcdir in \
      [!/]*) \
        srcdir=./$$srcdir; \
      ;; \
    esac; \
    readonly srcdir; \
\
    case '$(PARALLEL_JAVAC)' in \
      ?*) parallel=: ;; \
      "") parallel=false ;; \
    esac; \
    readonly parallel; \
\
    class_files='$(java_src)'; \
    readonly class_files; \
\
    if $$parallel; then \
      :; \
    else \
      for a in $$class_files; do \
        a=./$$a; \
        if test -f "$$a"; then \
          b=$${a%.class}.java; \
          if test -f "$$b"; then \
            c=`find "$$b" -newer "$$a"` || exit $$?; \
          elif test -f "$$srcdir/$$b"; then \
            c=`find "$$srcdir/$$b" -newer "$$a"` || exit $$?; \
          else \
            c=x; \
          fi; \
          case $$c in ?*) rm -f "$$a.d" || exit $$? ;; esac; \
        fi; \
      done; \
    fi; \
\
    'rm' \
      '-f' \
      '-r' \
      './'$(java_dst)'.tmp' \
    || 'exit' "$${?}"; \
    $(MKDIR_P) \
      './'$(java_dst)'.tmp/x' \
    || 'exit' "$${?}"; \
    c='cf'; \
 \
    : \
    : Compile the .class files in conservatively sized groups. This \
    : prevents us from exceeding any command line length limits and \
    : still lets make -j do some parallelization. \
    ; \
 \
    case '$(PARALLEL_JAVAC)' in \
      ?*) \
        max=50; \
      ;; \
      '') \
        max=1; \
      ;; \
    esac; \
    xs=; \
    n=0; \
    for x in $$class_files; do \
      xs="$$xs $$x"; \
      n=`expr $$n + 1` || exit $$?; \
      case $$n in \
        $$max) \
          $(MAKE) $(AM_MAKEFLAGS) $$xs || exit $$?; \
          xs=; \
          n=0; \
        ;; \
      esac; \
    done; \
    case $$n in \
      0) \
      ;; \
      *) \
        $(MAKE) $(AM_MAKEFLAGS) $$xs || exit $$?; \
      ;; \
    esac; \
 \
    for x in \
      $(java_extra) \
      $(java_nested) \
      $(java_src) \
    ; do \
      case "$${x}" in \
        *'*'*) \
          continue; \
        ;; \
      esac; \
      if 'test' '-f' "$${x}"; then \
        d='.'; \
      else \
        d=$(srcdir); \
        case "$${d}" in \
          '/'*) \
          ;; \
          *) \
            d='./'"$${d}"; \
          ;; \
        esac; \
      fi; \
      $(JAR) \
        "$${c}" \
        './'$(java_dst)'.tmp/x.jar' \
        '-C' \
        "$${d}" \
        './'"$${x}" \
      || 'exit' "$${?}"; \
      c='uf'; \
    done; \
    ( \
      'cd' \
        './'$(java_dst)'.tmp/x' \
      || 'exit' "$${?}"; \
      $(JAR) \
        'xf' \
        '../x.jar' \
      || 'exit' "$${?}"; \
      'exit' '0'; \
    :;) || 'exit' "$${?}"; \
    x='x'; \
    for if_not_blank in \
      $(java_JARFLAGS) \
      $${prevent_an_empty_word_list} \
    ; do \
      $(JAR) \
        'cf' \
        './'$(java_dst) \
        '-C' \
        './'$(java_dst)'.tmp/x/'$(GATBPS_INNER_SOURCEPATH) \
        $(java_JARFLAGS) \
        $(JARFLAGS) \
        '.' \
      || 'exit' "$${?}"; \
      x=''; \
      'break'; \
    done; \
    case "$${x}" in \
      ?*) \
        $(JAR) \
          'cf' \
          './'$(java_dst) \
          '-C' \
          './'$(java_dst)'.tmp/x/'$(GATBPS_INNER_SOURCEPATH) \
          $(GATBPS_JARFLAGS) \
          $(JARFLAGS) \
          '.' \
        || 'exit' "$${?}"; \
      ;; \
    esac; \
    'exit' '0'; \
  :;); \
  x="$${?}"; \
  'rm' \
    '-f' \
    '-r' \
    './'$(java_dst)'.tmp' \
  ; \
  'exit' "$${x}"; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.PHONY: clean-java
.PHONY: clean-java-main
.PHONY: install-java
.PHONY: install-java-main
.PHONY: java
.PHONY: java-main
.PHONY: java.FORCE
.PHONY: uninstall-java
.PHONY: uninstall-java-main

.java.class:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_at)( case $(GATBPS_INNER_CLASSPATH) in '') printf '%s\n' 'Makefile: .java.class ($@): error: this rule cannot be called directly' >&2; exit 1; ;; esac; )
	$(GATBPS_V_JAVAC)$(GATBPS_V_NOP)
	$(GATBPS_at)test -f $@ || rm -f -r $@
	$(GATBPS_at)test -f $@.d || rm -f -r $@.d
	$(GATBPS_at)rm -f -r $@$(TSUF)*
	$(GATBPS_at)$(MKDIR_P) $(@D)
	$(GATBPS_at)( srcdir='$(srcdir)'; readonly srcdir; run_javac=:; flags='-Xprefer:source -implicit:none'; case '$(PARALLEL_JAVAC)' in '') if test -r $@ && test ! -r $@.d; then x=`find $@ -newer $<` || exit $$?; case $$x in ?*) run_javac=false; esac; fi; flags=; esac; readonly run_javac; readonly flags; if $$run_javac; then cp=$(GATBPS_INNER_CLASSPATH); sp=$(GATBPS_INNER_SOURCEPATH); sp=$$sp$(CLASSPATH_SEPARATOR); sp=$$sp$$srcdir/$(GATBPS_INNER_SOURCEPATH); case $(CLASSPATH_SEPARATOR) in ';') for v in cp sp; do eval xs=\$$$$v; ys=; IFS=';'; for x in $$xs; do case $$x in '') continue; ;; [!./]*) x=./$$x; esac; case $$x in *'*') IFS=*; for x in $$x; do :; done; a=*; ;; *) a=; esac; x=`cygpath -w -l "$$x"`$$a || exit $$?; case $$ys in ?*) ys=$$ys$(CLASSPATH_SEPARATOR); esac; ys=$$ys$$x; done; unset IFS; eval $$v=\$$ys; done; esac; readonly cp; readonly sp; if $(AM_V_P); then sq=; for cqDe_w in $(JAVAC) -cp "$$cp" -d $(GATBPS_INNER_SOURCEPATH) -sourcepath "$$sp" $$flags $(GATBPS_INNER_JAVACFLAGS) $(JAVACFLAGS) $< ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; $(JAVAC) -cp "$$cp" -d $(GATBPS_INNER_SOURCEPATH) -sourcepath "$$sp" $$flags $(GATBPS_INNER_JAVACFLAGS) $(JAVACFLAGS) $< || exit $$?; fi; case '$(HAVE_JDEPS)' in 1) if $(AM_V_P); then sq1=; for cqDe_w in $(JDEPS) -cp $@$(TSUF).nonexistent -v $@ ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq1 in ?*) sq1=$$sq1' '; esac; sq1=$$sq1$$cqDe_w; done; sq2=; for cqDe_w in $@$(TSUF)2 ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq2 in ?*) sq2=$$sq2' '; esac; sq2=$$sq2$$cqDe_w; done; printf '%s\n' "$$sq1 >$$sq2" || exit $$?; fi; $(JDEPS) -cp $@$(TSUF).nonexistent -v $@ >$@$(TSUF)2 || exit $$?; $(AWK) ' BEGIN { r = "$(GATBPS_INNER_PACKAGE)"; gsub(/\./, "\\.", r); r = r "\\..*"; } { if ($$1 ~ r && $$3 ~ r) { x = $$3; sub(/\$$.*/, "", x); gsub(/\./, "/", x); x = "$(GATBPS_INNER_SOURCEPATH)/" x ".java"; if (!seen[x]) { print "$@: " x; seen[x] = 1; } } } ' <$@$(TSUF)2 >$@$(TSUF)3 || exit $$?; rm -f $@$(TSUF)2; ;; 0) >$@$(TSUF)3 || exit $$?; ;; *) printf '%s\n' 'Makefile: .java.class ($@): error: invalid HAVE_JDEPS value: $(HAVE_JDEPS)' >&2; exit 1; ;; esac; touch $@ || exit $$?; mv -f $@$(TSUF)3 $@.d || exit $$?; ) || { s=$$?; rm -f -r $@ $@.d; exit $$s; }
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

clean-java: clean-java-main
clean-java: java.FORCE

clean-java-main: java.FORCE
	-{ \
  for x in \
    $(java_dst) \
    $(java_nested) \
    $(java_src) \
  ; do \
    'rm' \
      '-f' \
      './'"$${x}" \
    ; \
  done; \
  'exit' '0'; \
:;}

clean-local: clean-java

install-java: install-java-main
install-java: java.FORCE

install-java-main: java-main
install-java-main: java.FORCE
	$(GATBPS_at)$(NORMAL_INSTALL)
	$(AM_V_at){ \
  x='x'; \
  for y in $(java_noinst); do \
    x=''; \
    'break'; \
  done; \
  case "$${x}" in \
    ?*) \
      d=$(DESTDIR)$(javadir); \
      case "$${d}" in \
        '/'*) \
        ;; \
        *) \
          d='./'"$${d}"; \
        ;; \
      esac; \
      if $(AM_V_P); then \
        ':'; \
      else \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          $(MKDIR_P) \
          "$${d}" \
        ; \
      fi; \
      $(MKDIR_P) \
        "$${d}" \
      || 'exit' "$${?}"; \
      if 'test' '-f' $(java_dst); then \
        x='.'; \
      else \
        x=$(srcdir); \
        case "$${x}" in \
          '/'*) \
          ;; \
          *) \
            x='./'"$${x}"; \
          ;; \
        esac; \
      fi; \
      x="$${x}"'/'$(java_dst); \
      if $(AM_V_P); then \
        ':'; \
      else \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          $(INSTALL_DATA) \
          "$${x}" \
          "$${d}" \
        ; \
      fi; \
      $(INSTALL_DATA) \
        "$${x}" \
        "$${d}" \
      || 'exit' "$${?}"; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

java: java-main
java: java.FORCE

java-main: $(java_dst)
java-main: java.FORCE

java.FORCE:

uninstall-java: java.FORCE
uninstall-java: uninstall-java-main

uninstall-java-main: java.FORCE
	$(GATBPS_at)$(NORMAL_UNINSTALL)
	$(AM_V_at){ \
  x='x'; \
  for y in $(java_noinst); do \
    x=''; \
    'break'; \
  done; \
  case "$${x}" in \
    ?*) \
      ( \
        x=$(java_dst); \
        x=$${x##*/}; \
        x=$(DESTDIR)$(javadir)'/'"$${x}"; \
        case "$${x}" in \
          '/'*) \
          ;; \
          *) \
            x='./'"$${x}"; \
          ;; \
        esac; \
        if $(AM_V_P); then \
          ':'; \
        else \
          $(SHELL) \
            '-' \
            $(srcdir)/build-aux/gatbps-echo.sh -q \
            '--' \
            'rm' \
            '-f' \
            "$${x}" \
          ; \
        fi; \
        'rm' \
          '-f' \
          "$${x}" \
        ; \
        'exit' '0'; \
      :;); \
      x="$${?}"; \
      'rm' \
        '-f' \
        'uninstall-java-main.tmp' \
      ; \
      'exit' "$${x}"; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

.m4.m4out:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_M4)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)rm -f -r $@.d
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_at)printf '%s: %s\n' $@ $< >$@$(TSUF)1
	$(AM_V_at)$(M4) $(GATBPS_M4FLAGS) $(M4FLAGS) -D make_rules -D make_target=$@ $< >>$@$(TSUF)1
	$(AM_V_at)$(M4) $(GATBPS_M4FLAGS) $(M4FLAGS) -D make_target=$@ $< >$@$(TSUF)2
	$(AM_V_at)mv -f $@$(TSUF)1 $@.d
	$(AM_V_at)mv -f $@$(TSUF)2 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

@GATBPS_DOCKER_BUILD_RULES@
@GATBPS_JAVA_CLASS_RULES@
@GATBPS_JAVA_RULES@
@GATBPS_M4_RULES@
@GATBPS_TAR_RULES@
@GATBPS_XZ_RULES@
artifacts/$(distdir).tar.gz/src: FORCE
	@echo artifacts_dist_archive_src

all-local: java

install-data-local: install-java

uninstall-local: uninstall-java

@GATBPS_CONFIG_FILE_RULES@

distclean-local:
maintainer-clean-local:

@GATBPS_CONFIG_LATER_RULES@

clean-local:
distclean-local:
maintainer-clean-local:
mostlyclean-local:

@GATBPS_CP_RULES@

clean-local:
distclean-local:
maintainer-clean-local:
mostlyclean-local:

@GATBPS_GIT_ARCHIVE_RULES@

clean-local:
distclean-local:
maintainer-clean-local:
mostlyclean-local:

@GATBPS_GIT_BUNDLE_RULES@

clean-local:
distclean-local:
maintainer-clean-local:
mostlyclean-local:

@GATBPS_GIT_CLONE_RULES@

clean-local:
distclean-local:
maintainer-clean-local:
mostlyclean-local:

@GATBPS_WGET_RULES@

clean-local:
distclean-local:
maintainer-clean-local:
mostlyclean-local:

$(dvi_dist_dst): $(dvi_dist_dep)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at){ \
  x=''; \
  for y in $(dvi_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(dvi_dist_dst)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(dvi_dist_dst)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(dvi_dist_dep) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(dvi_dist_dep)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(MAKE) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(MAKE)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(dvi_dist_src); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(dvi_dist_src)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(dvi_dist_src)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(MKDIR_P) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(MKDIR_P)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(srcdir); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(srcdir)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(srcdir)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at)$(MAKE) \
  $(AM_MAKEFLAGS) \
  $(dvi_dist_src) \
;
	$(GATBPS_V_CP)$(GATBPS_V_NOP)
	$(AM_V_at)$(MKDIR_P) \
  './'$(@D) \
;
	$(AM_V_at){ \
  if 'test' '-f' $(dvi_dist_src); then \
    d='.'; \
  else \
    d=$(srcdir); \
    if 'test' '-f' "$${d}"'/'$(dvi_dist_src); then \
      ':'; \
    else \
      $(SHELL) \
        '-' \
        $(srcdir)'/build-aux/gatbps-echo.sh' \
        'error: missing prerequisite:' \
        '"'$(dvi_dist_src)'"' \
        1>&2 \
      ; \
      exit 1; \
    fi; \
    case "$${d}" in \
      '/'*) \
      ;; \
      *) \
        d='./'"$${d}"; \
      ;; \
    esac; \
  fi; \
  'cp' \
    "$${d}"'/'$(dvi_dist_src) \
    './'$(dvi_dist_dst) \
  || 'exit' "$${?}"; \
  'exit' '0'; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.PHONY: clean-dvi-dist
.PHONY: clean-dvi-dist-main
.PHONY: dvi-dist
.PHONY: dvi-dist-main

clean-dvi-dist: clean-dvi-dist-main

clean-dvi-dist-main:
	-{ \
  x=''; \
  for y in $(dvi_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'exit' '0'; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'rm' \
        '-f' \
        './'$(dvi_dist_dst) \
      ; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

dvi-dist: dvi-dist-main

dvi-dist-main: $(dvi_dist_dst)

maintainer-clean-local: clean-dvi-dist

$(html_dist_dst): $(html_dist_dep)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at){ \
  x=''; \
  for y in $(html_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(html_dist_dst)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(html_dist_dst)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(html_dist_dep) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(html_dist_dep)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(MAKE) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(MAKE)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(html_dist_src); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(html_dist_src)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(html_dist_src)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(MKDIR_P) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(MKDIR_P)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(srcdir); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(srcdir)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(srcdir)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at)$(MAKE) \
  $(AM_MAKEFLAGS) \
  $(html_dist_src) \
;
	$(GATBPS_V_CP)$(GATBPS_V_NOP)
	$(AM_V_at)'rm' \
  '-f' \
  '-r' \
  './'$(html_dist_dst) \
;
	$(AM_V_at)$(MKDIR_P) \
  './'$(@D) \
;
	$(AM_V_at){ \
  if \
    'test' '-f' $(html_dist_src) || \
    'test' '-d' $(html_dist_src) \
  ; then \
    d='.'; \
  else \
    d=$(srcdir); \
    if \
      'test' '-f' "$${d}"'/'$(html_dist_src) || \
      'test' '-d' "$${d}"'/'$(html_dist_src) \
    ; then \
      ':'; \
    else \
      $(SHELL) \
        '-' \
        $(srcdir)'/build-aux/gatbps-echo.sh' \
        'error: missing prerequisite:' \
        '"'$(html_dist_src)'"' \
        1>&2 \
      ; \
      exit 1; \
    fi; \
    case "$${d}" in \
      '/'*) \
      ;; \
      *) \
        d='./'"$${d}"; \
      ;; \
    esac; \
  fi; \
  'cp' \
    '-R' \
    "$${d}"'/'$(html_dist_src) \
    './'$(html_dist_dst) \
  || 'exit' "$${?}"; \
  'exit' '0'; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.PHONY: clean-html-dist
.PHONY: clean-html-dist-main
.PHONY: html-dist
.PHONY: html-dist-main

clean-html-dist: clean-html-dist-main

clean-html-dist-main:
	-{ \
  x=''; \
  for y in $(html_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'exit' '0'; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'rm' \
        '-f' \
        '-r' \
        './'$(html_dist_dst) \
      ; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

html-dist: html-dist-main

html-dist-main: $(html_dist_dst)

maintainer-clean-local: clean-html-dist

$(java_dist_dst): $(java_dep)
$(java_dist_dst): $(java_extra)
$(java_dist_dst): $(javadoc_src)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at){ \
  x=''; \
  for y in $(java_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(java_dist_dst)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(java_dist_dst)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(java_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(java_dst)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(java_dst)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(MKDIR_P) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(MKDIR_P)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(srcdir); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(srcdir)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(srcdir)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(GATBPS_V_CP)$(GATBPS_V_NOP)
	$(AM_V_at)$(MKDIR_P) \
  './'$(@D) \
;
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) $(java_dst)
	$(AM_V_at){ \
  if 'test' '-f' $(java_dst); then \
    d='.'; \
  else \
    d=$(srcdir); \
    if 'test' '-f' "$${d}"'/'$(java_dst); then \
      ':'; \
    else \
      $(SHELL) \
        '-' \
        $(srcdir)'/build-aux/gatbps-echo.sh' \
        'error: missing prerequisite:' \
        '"'$(java_dst)'"' \
        1>&2 \
      ; \
      exit 1; \
    fi; \
    case "$${d}" in \
      '/'*) \
      ;; \
      *) \
        d='./'"$${d}"; \
      ;; \
    esac; \
  fi; \
  'cp' \
    "$${d}"'/'$(java_dst) \
    './'$(java_dist_dst) \
  || 'exit' "$${?}"; \
  'exit' '0'; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.PHONY: clean-java-dist
.PHONY: clean-java-dist-main
.PHONY: java-dist
.PHONY: java-dist-main

clean-java-dist: clean-java-dist-main

clean-java-dist-main:
	-{ \
  x=''; \
  for y in $(java_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'exit' '0'; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'rm' \
        '-f' \
        './'$(java_dist_dst) \
      ; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

java-dist: java-dist-main

java-dist-main: $(java_dist_dst)

maintainer-clean-local: clean-java-dist

$(javadoc_dist_dst): $(javadoc_dist_dep)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at){ \
  x=''; \
  for y in $(javadoc_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(javadoc_dist_dst)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(javadoc_dist_dst)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(javadoc_dist_dep) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(javadoc_dist_dep)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(MAKE) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(MAKE)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(javadoc_dist_src); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(javadoc_dist_src)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(javadoc_dist_src)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(MKDIR_P) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(MKDIR_P)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(srcdir); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(srcdir)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(srcdir)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at)$(MAKE) \
  $(AM_MAKEFLAGS) \
  $(javadoc_dist_src) \
;
	$(GATBPS_V_CP)$(GATBPS_V_NOP)
	$(AM_V_at)'rm' \
  '-f' \
  '-r' \
  './'$(javadoc_dist_dst) \
;
	$(AM_V_at)$(MKDIR_P) \
  './'$(@D) \
;
	$(AM_V_at){ \
  if 'test' '-d' $(javadoc_dist_src); then \
    d='.'; \
  else \
    d=$(srcdir); \
    if 'test' '-d' "$${d}"'/'$(javadoc_dist_src); then \
      ':'; \
    else \
      $(SHELL) \
        '-' \
        $(srcdir)'/build-aux/gatbps-echo.sh' \
        'error: missing prerequisite:' \
        '"'$(javadoc_dist_src)'"' \
        1>&2 \
      ; \
      exit 1; \
    fi; \
    case "$${d}" in \
      '/'*) \
      ;; \
      *) \
        d='./'"$${d}"; \
      ;; \
    esac; \
  fi; \
  'cp' \
    '-R' \
    "$${d}"'/'$(javadoc_dist_src) \
    './'$(javadoc_dist_dst) \
  || 'exit' "$${?}"; \
  'exit' '0'; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.PHONY: clean-javadoc-dist
.PHONY: clean-javadoc-dist-main
.PHONY: javadoc-dist
.PHONY: javadoc-dist-main

clean-javadoc-dist: clean-javadoc-dist-main

clean-javadoc-dist-main:
	-{ \
  x=''; \
  for y in $(javadoc_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'exit' '0'; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'rm' \
        '-f' \
        '-r' \
        './'$(javadoc_dist_dst) \
      ; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

javadoc-dist: javadoc-dist-main

javadoc-dist-main: $(javadoc_dist_dst)

maintainer-clean-local: clean-javadoc-dist

$(javadoc_dst): $(javadoc_src)
$(javadoc_dst): $(javadoc_src_nodist)
	$(GATBPS_V_JAVADOC)':'
	$(AM_V_at){ \
  x=''; \
  for y in $(javadoc_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(javadoc_dst)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(javadoc_dst)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(javadoc_src) \
    $(javadoc_src_nodist) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(javadoc_src)' \
    'and $$(javadoc_src_nodist)' \
    'are both' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at)'rm' \
  '-f' \
  '-r' \
  './'$(javadoc_dst) \
;
	$(AM_V_at)$(MKDIR_P) \
  './'$(javadoc_dst) \
;
	$(AM_V_at){ \
  ( \
    x='x'; \
    for y in $(javadoc_JAVADOCFLAGS); do \
      $(SHELL) \
        '-' \
        $(srcdir)/build-aux/gatbps-echo.sh -q \
        '--' \
        $(JAVADOC) \
        '-d' \
        $(javadoc_dst) \
        $(javadoc_JAVADOCFLAGS) \
        $(JAVADOCFLAGS) \
        1>'javadoc-main.tmp1' \
      || 'exit' "$${?}"; \
      x=''; \
      'break'; \
    done; \
    case "$${x}" in \
      ?*) \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          $(JAVADOC) \
          '-d' \
          $(javadoc_dst) \
          $(GATBPS_JAVADOCFLAGS) \
          $(JAVADOCFLAGS) \
          1>'javadoc-main.tmp1' \
        || 'exit' "$${?}"; \
      ;; \
    esac; \
    $(SED) \
      '$$s/$$/ \\/' \
      0<'javadoc-main.tmp1' \
      1>'javadoc-main.tmp2' \
    || 'exit' "$${?}"; \
    for x in $(javadoc_src) $(javadoc_src_nodist); do \
      if 'test' '-f' "$${x}"; then \
        d='.'; \
      else \
        d=$(srcdir); \
      fi; \
      $(SHELL) \
        '-' \
        $(srcdir)/build-aux/gatbps-echo.sh -q \
        '--' \
        "$${d}"'/'"$${x}" \
        1>'javadoc-main.tmp1' \
      || 'exit' "$${?}"; \
      $(SED) \
        '$$s/$$/ \\/' \
        0<'javadoc-main.tmp1' \
        1>>'javadoc-main.tmp2' \
      || 'exit' "$${?}"; \
    done; \
    'echo' \
      ';' \
      1>>'javadoc-main.tmp2' \
    || 'exit' "$${?}"; \
    $(SHELL) \
      '-' \
      'javadoc-main.tmp2' \
    || 'exit' "$${?}"; \
    'exit' '0'; \
  :;); \
  x="$${?}"; \
  'rm' \
    '-f' \
    'javadoc-main.tmp1' \
    'javadoc-main.tmp2' \
  ; \
  'exit' "$${x}"; \
:;}

.PHONY: clean-javadoc
.PHONY: clean-javadoc-main
.PHONY: install-javadoc
.PHONY: install-javadoc-main
.PHONY: javadoc
.PHONY: javadoc-main
.PHONY: uninstall-javadoc
.PHONY: uninstall-javadoc-main

clean-javadoc: clean-javadoc-main

clean-javadoc-main:
	-{ \
  case ''$(javadoc_dst) in \
    ?*) \
      'rm' \
        '-f' \
        '-r' \
        './'$(javadoc_dst) \
      ; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

clean-local: clean-javadoc

install-javadoc: install-javadoc-main

install-javadoc-main: javadoc-main
	@$(NORMAL_INSTALL)
	$(AM_V_at){ \
  x=''; \
  for y in $(javadoc_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(javadoc_dst)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(javadoc_dst)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(javadocdir); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(javadocdir)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(javadocdir)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x='x'; \
  for y in $(javadoc_noinst); do \
    x=''; \
    'break'; \
  done; \
  case "$${x}" in \
    ?*) \
      d=$(DESTDIR)$(javadocdir); \
      case "$${d}" in \
        '/'*) \
        ;; \
        *) \
          d='./'"$${d}"; \
        ;; \
      esac; \
      if $(AM_V_P); then \
        ':'; \
      else \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          $(MKDIR_P) \
          "$${d}" \
        ; \
      fi; \
      $(MKDIR_P) \
        "$${d}" \
      || 'exit' "$${?}"; \
      if 'test' '-d' $(javadoc_dst); then \
        x='.'; \
      else \
        x=$(srcdir); \
        case "$${x}" in \
          '/'*) \
          ;; \
          *) \
            x='./'"$${x}"; \
          ;; \
        esac; \
      fi; \
      x="$${x}"'/'$(javadoc_dst); \
      if $(AM_V_P); then \
        ':'; \
      else \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          'rm' \
          '-f' \
          '-r' \
          "$${x}" \
        ; \
      fi; \
      'rm' \
        '-f' \
        '-r' \
        "$${x}" \
      || 'exit' "$${?}"; \
      if $(AM_V_P); then \
        ':'; \
      else \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          'cp' \
          '-R' \
          "$${x}" \
          "$${d}" \
        ; \
      fi; \
      'cp' \
        '-R' \
        "$${x}" \
        "$${d}" \
      || 'exit' "$${?}"; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

javadoc: javadoc-main

javadoc-main: $(javadoc_dst)

uninstall-javadoc: uninstall-javadoc-main

uninstall-javadoc-main:
	@$(NORMAL_UNINSTALL)
	$(AM_V_at){ \
  x=''; \
  for y in $(javadoc_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(javadoc_dst)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(javadoc_dst)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(javadocdir); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(javadocdir)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(javadocdir)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x='x'; \
  for y in $(javadoc_noinst); do \
    x=''; \
    'break'; \
  done; \
  case "$${x}" in \
    ?*) \
      ( \
        x=$(javadoc_dst); \
        x=$${x##*/}; \
        x=$(DESTDIR)$(javadocdir)'/'"$${x}"; \
        case "$${x}" in \
          '/'*) \
          ;; \
          *) \
            x='./'"$${x}"; \
          ;; \
        esac; \
        if $(AM_V_P); then \
          ':'; \
        else \
          $(SHELL) \
            '-' \
            $(srcdir)/build-aux/gatbps-echo.sh -q \
            '--' \
            'rm' \
            '-f' \
            '-r' \
            "$${x}" \
          ; \
        fi; \
        'rm' \
          '-f' \
          "$${x}" \
        ; \
        'exit' '0'; \
      :;); \
      x="$${?}"; \
      'rm' \
        '-f' \
        'uninstall-javadoc-main.tmp' \
      ; \
      'exit' "$${x}"; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

$(ps_dist_dst): $(ps_dist_dep)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at){ \
  x=''; \
  for y in $(ps_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(ps_dist_dst)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(ps_dist_dst)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(ps_dist_dep) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(ps_dist_dep)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(MAKE) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(MAKE)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(ps_dist_src); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(ps_dist_src)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(ps_dist_src)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  for x in \
    $(MKDIR_P) \
  ; do \
    'exit' '0'; \
  done; \
  'echo' \
    'error:' \
    '$$(MKDIR_P)' \
    'is' \
    'not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at){ \
  x=''; \
  for y in $(srcdir); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'echo' \
          'error:' \
          '$$(srcdir)' \
          'contains multiple words' \
          1>&2 \
        ; \
        exit 1; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'exit' '0'; \
    ;; \
  esac; \
  'echo' \
    'error:' \
    '$$(srcdir)' \
    'is not set' \
    1>&2 \
  ; \
  exit 1; \
:;}
	$(AM_V_at)$(MAKE) \
  $(AM_MAKEFLAGS) \
  $(ps_dist_src) \
;
	$(GATBPS_V_CP)$(GATBPS_V_NOP)
	$(AM_V_at)$(MKDIR_P) \
  './'$(@D) \
;
	$(AM_V_at){ \
  if 'test' '-f' $(ps_dist_src); then \
    d='.'; \
  else \
    d=$(srcdir); \
    if 'test' '-f' "$${d}"'/'$(ps_dist_src); then \
      ':'; \
    else \
      $(SHELL) \
        '-' \
        $(srcdir)'/build-aux/gatbps-echo.sh' \
        'error: missing prerequisite:' \
        '"'$(ps_dist_src)'"' \
        1>&2 \
      ; \
      exit 1; \
    fi; \
    case "$${d}" in \
      '/'*) \
      ;; \
      *) \
        d='./'"$${d}"; \
      ;; \
    esac; \
  fi; \
  'cp' \
    "$${d}"'/'$(ps_dist_src) \
    './'$(ps_dist_dst) \
  || 'exit' "$${?}"; \
  'exit' '0'; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.PHONY: clean-ps-dist
.PHONY: clean-ps-dist-main
.PHONY: ps-dist
.PHONY: ps-dist-main

clean-ps-dist: clean-ps-dist-main

clean-ps-dist-main:
	-{ \
  x=''; \
  for y in $(ps_dist_dst); do \
    x="$${x}"'x'; \
    case "$${x}" in \
      ??*) \
        'exit' '0'; \
      ;; \
    esac; \
  done; \
  case "$${x}" in \
    ?*) \
      'rm' \
        '-f' \
        './'$(ps_dist_dst) \
      ; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

maintainer-clean-local: clean-ps-dist

ps-dist: ps-dist-main

ps-dist-main: $(ps_dist_dst)




#-----------------------------------------------------------------------
# doc/manual/index.html
#-----------------------------------------------------------------------

doc/manual/images:
	$(AM_V_at)$(MKDIR_P) $@
doc/manual/index.html$(doc_manual_index_html_disable_wrapper_recipe): \
  build-aux/sst_ajh_asciidoctor_document_html_recipe.sh \
  $(doc_manual_index_html_children) \
  $(doc_manual_index_html_children_nodist) \
$(empty)
	$(AM_V_at)rm -f -r \
	  $@ \
	  $@$(TSUF)* \
	  doc/manual/images/diag-* \
	;
	$(AM_V_at)( \
	  x=ASCIIDOCTOR_FLAGS; set x $(ASCIIDOCTOR_FLAGS); $(GATBPS_EXPORT); \
	  x=MAKE; set x $(MAKE); $(GATBPS_EXPORT); \
	  x=SED; set x $(SED); $(GATBPS_EXPORT); \
	  x=TSUF; set x $(TSUF); $(GATBPS_EXPORT); \
	  x=dst; set x $@; $(GATBPS_EXPORT); \
	  x=imagesdir; set x images; $(GATBPS_EXPORT); \
	  x=prefix; set x doc/manual/; $(GATBPS_EXPORT); \
	  x=slug; set x doc_manual_index_html; $(GATBPS_EXPORT); \
	  x=srcdir; set x $(srcdir); $(GATBPS_EXPORT); \
	  sh $(srcdir)/build-aux/sst_ajh_asciidoctor_document_html_recipe.sh || exit $$?; \
	)

doc/manual/index.html/clean: FORCE
	-rm -f -r \
	  $(@D) \
	  $(@D)$(TSUF)* \
	  doc/manual/images/diag-* \
	;

mostlyclean-local: doc/manual/index.html/clean

doc/manual.tar: doc/manual/index.html
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MKDIR_P) $@$(TSUF)1/manual
	$(AM_V_at)cp doc/manual/index.html $@$(TSUF)1/manual
	$(GATBPS_at)( \
	\
	  xs=; \
	\
	  for y in \
	    doc/manual/index.html.children \
	    doc/manual/index.html.children_nodist \
	  ; do \
	    ys=`cat $$y` || exit $$?; \
	    for x in $$ys; do \
	      case $$x in *.adoc) \
	        : \
	      ;; *) \
	        case $$xs in *" $$x "*) \
	          : \
	        ;; *) \
	          xs="$$xs $$x "; \
	        esac; \
	      esac; \
	    done; \
	  done; \
	\
	  for x in \
	    css \
	    gif \
	    jpg \
	    js \
	    png \
	    svg \
	    woff \
	    woff2 \
	  ; do \
	    xs="$$xs "` \
	      find -L doc/manual -name "*.$$x" -type f \
	    `" " || exit $$?; \
	  done; \
	\
	  for x in $$xs; do \
	    y='doc/manual/\(.*\)'; \
	    y=`expr $$x : $$y` || exit $$?; \
	    case $$y in \
	      */*) \
	        d=`dirname $$y` || exit $$?; \
	        if test -d $@$(TSUF)1/manual/$$d; then \
	          :; \
	        else \
	          $(AM_V_P) && echo $(MKDIR_P) \
	            $@$(TSUF)1/manual/$$d \
	          ; \
	          $(MKDIR_P) \
	            $@$(TSUF)1/manual/$$d \
	          || exit $$?; \
	        fi; \
	      ;; \
	    esac; \
	    y=$@$(TSUF)1/manual/$$y; \
	    if test -d $$x && test -r $$y; then \
	      echo uh oh 1 >&2; \
	      exit 1; \
	    fi; \
	    if test -f $$x && test -d $$y; then \
	      echo uh oh 2 >&2; \
	      exit 1; \
	    fi; \
	    if test -f $$y; then \
	      :; \
	    else \
	      $(AM_V_P) && echo cp -R -L $$x $$y; \
	      cp -R -L $$x $$y || exit $$?; \
	    fi; \
	  done; \
	)
	$(AM_V_at)(cd $@$(TSUF)1 && $(TAR) c manual) >$@$(TSUF)2
	$(AM_V_at)mv -f $@$(TSUF)2 $@

doc/manual.tar/clean: FORCE
doc/manual.tar/clean: doc/manual/index.html/clean
	-rm -f -r $(@D) $(@D)$(TSUF)*

mostlyclean-local: doc/manual.tar/clean

$(manual_dst): doc/manual.tar
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MKDIR_P) $@$(TSUF)
	$(AM_V_at)(cd $@$(TSUF) && $(TAR) x) <doc/manual.tar
	$(AM_V_at)touch $@$(TSUF)/*
	$(AM_V_at)mv -f $@$(TSUF)/* $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)
$(manual_dst)/clean: doc/manual.tar/clean

manual: FORCE
manual: $(manual_dst)

clean-manual: FORCE
clean-manual: $(manual_dst)/clean

doc/pages/manual: $(manual_dst).tar.xz
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(XZ) -d <$(manual_dst).tar.xz >$@$(TSUF)1
	$(AM_V_at)$(MKDIR_P) $@$(TSUF)2
	$(AM_V_at)(cd $@$(TSUF)2 && $(TAR) x) <$@$(TSUF)1
	$(AM_V_at)cp -R $@$(TSUF)2/* $@$(TSUF)3
	$(AM_V_at)touch $@$(TSUF)3
	$(AM_V_at)mv -f $@$(TSUF)3 $@
	$(AM_V_at)rm -f -r $@$(TSUF)*
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

doc/pages/_site: $(pages_src)
doc/pages/_site: $(pages_src_nodist)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@
	$(AM_V_at){ \
	  test -t 0 && t=-t || t=; \
	  readonly t; \
	  pwd=`pwd` || exit $$?; \
	  readonly pwd; \
	  case $${CI_DISPOSABLE_ENVIRONMENT+x} in x) \
	    chmod -R a+rw doc/pages || exit $$?; \
	  esac; \
	  $(DOCKER) run --rm -i $$t \
	    -v "$$pwd"/doc/pages:/srv/jekyll \
	    jekyll/jekyll:$(pages_jekyll_version) \
	    jekyll build \
	  || exit $$?; \
	}
	$(AM_V_at)touch $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.PHONY: doc/pages/_site/clean
doc/pages/_site/clean: FORCE
doc/pages/_site/clean: $(pages_src_clean)
	-rm -f -r $(@D)
	-{ \
	  test -t 0 && t=-t || t=; \
	  readonly t; \
	  pwd=`pwd` || exit $$?; \
	  readonly pwd; \
	  case $${CI_DISPOSABLE_ENVIRONMENT+x} in x) \
	    chmod -R a+rw doc/pages || exit $$?; \
	  esac; \
	  $(DOCKER) run --rm -i $$t \
	    -v "$$pwd"/doc/pages:/srv/jekyll \
	    jekyll/jekyll:$(pages_jekyll_version) \
	    jekyll clean \
	  || exit $$?; \
	}

mostlyclean-local: doc/pages/_site/clean

$(pages_dst): doc/pages/_site
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MKDIR_P) $@$(TSUF)
	$(AM_V_at)rmdir $@$(TSUF)
	$(AM_V_at)cp -R doc/pages/_site $@$(TSUF)
	$(AM_V_at)touch $@$(TSUF)
	$(AM_V_at)mv -f $@$(TSUF) $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

docs: $(pages_dst_leaves)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MAKE) $(pages_dst).tar.xz
	$(AM_V_at)$(XZ) -d <$(pages_dst).tar.xz >$@$(TSUF)1
	$(AM_V_at)$(MKDIR_P) $@$(TSUF)2
	$(AM_V_at)(cd $@$(TSUF)2 && $(TAR) x) <$@$(TSUF)1
	$(AM_V_at)cp -R $@$(TSUF)2/* $@$(TSUF)3
	$(AM_V_at)touch $@$(TSUF)3
	$(AM_V_at)mv -f $@$(TSUF)3 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

pages-preview: FORCE
pages-preview: $(pages_src)
pages-preview: $(pages_src_nodist)
	{ \
	  test -t 0 && t=-t || t=; \
	  readonly t; \
	  pwd=`pwd` || exit $$?; \
	  readonly pwd; \
	  d=`basename "$$pwd"` || exit $$?; \
	  readonly d; \
	  case $${CI_DISPOSABLE_ENVIRONMENT+x} in x) \
	    chmod -R a+rw doc/pages || exit $$?; \
	  esac; \
	\
	  case "$(pages_livereload)" in 1) \
	    f1="-p $(pages_preview_host):$(pages_livereload_port):35729"; \
	    f2="--livereload --livereload_port $(pages_livereload_port)"; \
	  ;; *) \
	    f1=; \
	    f2=; \
	  esac; \
	  readonly f1; \
	  readonly f2; \
	\
	  $(DOCKER) run --rm -i $$t \
	    -v "$$pwd"/doc/pages:/srv/jekyll \
	    -p $(pages_preview_host):$(pages_preview_port):4000 \
	    $$f1 \
	    --name "$(pages_preview_name)" \
	    jekyll/jekyll:$(pages_jekyll_version) \
	    jekyll serve $$f2 \
	  || exit $$?; \
	}

pages-update: FORCE
pages-update: $(pages_src_nodist)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at){ \
	  case "$(pages_touch_all)" in 1) \
	    for x in $(pages_src_nodist) ""; do \
	      case $$x in ?*) \
	        touch $$x || exit $$?; \
	      esac; \
	    done; \
	  esac; \
	}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.PHONY: pages
pages: FORCE
pages: doc/pages/_site

.PHONY: clean-pages
clean-pages: FORCE
clean-pages: doc/pages/_site/clean

doc/readme/diagrams:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(GATBPS_at)rm -f -r $@$(TSUF)* $@
	$(GATBPS_at)$(MKDIR_P) $@$(TSUF)1
	$(GATBPS_at)rm -f README.html
	$(GATBPS_at)$(MAKE) $(AM_MAKEFLAGS) \
	  ASCIIDOCTOR_FLAGS='-a readme_diagrams=' \
	  README.html \
	;
	$(GATBPS_at)rm -f README.html
	$(GATBPS_at)touch $@$(TSUF)1/.gitkeep
	$(GATBPS_at)touch $@$(TSUF)1
	$(GATBPS_at)mv -f $@$(TSUF)1 $@
	$(GATBPS_at)-rm -f -r $@$(TSUF)*
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

src/windows_portable_java/sample/db1.sqlite3: unittest/test1/Test1DB1.sql.10
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_at)sqlite3 $@$(TSUF) <unittest/test1/Test1DB1.sql.10
	$(AM_V_at)mv -f $@$(TSUF) $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

src/windows_portable_java/sample/db2.sqlite3: unittest/test1/Test1DB2.sql.10
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_at)sqlite3 $@$(TSUF) <unittest/test1/Test1DB2.sql.10
	$(AM_V_at)mv -f $@$(TSUF) $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

src/windows_portable_java/mssql-jdbc_auth-9.4.0.x64.dll: build-aux/downloads/mssql-jdbc_auth-9.4.0.zip
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_UNZIP)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_at)$(UNZIP)     	  -p     	  build-aux/downloads/mssql-jdbc_auth-9.4.0.zip     	  mssql-jdbc_auth/mssql-jdbc_auth/x64/mssql-jdbc_auth-9.4.0.x64.dll     	  >$@$(TSUF)     	;
	$(AM_V_at)mv -f $@$(TSUF) $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/Dockerfile
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/db1.cfg
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/db1.cmd
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/db2.cfg
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/db2.cmd
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/lexicon.cfg
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/manual.html
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/mssql-jdbc_auth-9.4.0.x64.dll
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/ph.cfg
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/ph.cmd
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/pulsar-vlds.tar.gz
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/sample/db1.sqlite3
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/sample/db2.sqlite3
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: src/windows_portable_java/sst.tar.gz
pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java: doc/$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)-manual.tar.xz
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_at)( : \
	  && x=pulsar-vlds.tmp$$$$ \
	  && $(DOCKER) build $(DOCKER_BUILD_FLAGS) \
	       --tag $$x \
	       src/windows_portable_java/. \
	  && $(DOCKER) rm -f $$x \
	  && $(DOCKER) create --name $$x $$x \
	  && $(DOCKER) cp $$x:/x/out $@$(TSUF) \
	  && $(DOCKER) rm -f $$x \
	)
	$(AM_V_at)(cd $@$(TSUF) && tar xJ) <doc/$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)-manual.tar.xz
	$(AM_V_at)mkdir \
	  $@$(TSUF)/home \
	  $@$(TSUF)/sample \
	  $@$(TSUF)/tmp \
	;
	$(AM_V_at)$(MKDIR_P) \
	  $@$(TSUF)/usr/local/lib \
	;
	$(AM_V_at)cp \
	  src/windows_portable_java/db1.cfg \
	  src/windows_portable_java/db1.cmd \
	  src/windows_portable_java/db2.cfg \
	  src/windows_portable_java/db2.cmd \
	  src/windows_portable_java/lexicon.cfg \
	  src/windows_portable_java/manual.html \
	  src/windows_portable_java/ph.cfg \
	  src/windows_portable_java/ph.cmd \
	  $@$(TSUF) \
	;
	$(AM_V_at)cp \
	  src/windows_portable_java/sample/db1.sqlite3 \
	  src/windows_portable_java/sample/db2.sqlite3 \
	  $@$(TSUF)/sample \
	;
	$(AM_V_at)cp \
	  src/windows_portable_java/mssql-jdbc_auth-9.4.0.x64.dll \
	  $@$(TSUF)/usr/local/lib \
	;
	$(AM_V_at)touch $@$(TSUF)
	$(AM_V_at)mv -f $@$(TSUF) $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip: $(pulsar_vlds_PACKAGE_VERSION_windows_portable_java_zip_prereqs)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ZIP)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@$(TSUF)* $@
	$(AM_V_at)(cd $(?D) && $(ZIP) -r - $(?F)) >$@$(TSUF)
	$(AM_V_at)mv -f $@$(TSUF) $@
	$(AM_V_at)rm -f -r $@$(TSUF)*
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

windows-portable-java: FORCE
windows-portable-java: pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip
artifacts/pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip/src: FORCE
	@echo artifact_pulsar_vlds___PACKAGE_VERSION__windows_portable_java_zip_src

artifacts/pulsar-vlds-VERSION-windows-portable-java.zip: FORCE
artifacts/pulsar-vlds-VERSION-windows-portable-java.zip: artifacts/pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip

windows-portable-java: FORCE pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip

pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-native: $(pulsar_vlds_PACKAGE_VERSION_windows_portable_native_prereqs)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_GEN)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@$(TSUF)* $@
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(GATBPS_at)( \
	  x=AM_V_P; set x $(AM_V_P); $(GATBPS_EXPORT); \
	  x=NATIVE_IMAGE; set x $(NATIVE_IMAGE); $(GATBPS_EXPORT); \
	  x=SED; set x $(SED); $(GATBPS_EXPORT); \
	  x=TSUF; set x $(TSUF); $(GATBPS_EXPORT); \
	  x=UNZIP; set x $(UNZIP); $(GATBPS_EXPORT); \
	  x=VCVARS; set x $(VCVARS); $(GATBPS_EXPORT); \
	  x=d; set x src/windows_portable_native/; $(GATBPS_EXPORT); \
	  x=dst; set x pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-native; $(GATBPS_EXPORT); \
	  x=src; set x pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip; $(GATBPS_EXPORT); \
	  sh $(srcdir)/src/windows_portable_native/recipe.sh || exit $$?; \
	)
	$(AM_V_at)rm -f -r $@$(TSUF)*
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-native.zip: $(pulsar_vlds_PACKAGE_VERSION_windows_portable_native_zip_prereqs)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ZIP)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@$(TSUF)* $@
	$(AM_V_at)(cd $(?D) && $(ZIP) -r - $(?F)) >$@$(TSUF)
	$(AM_V_at)mv -f $@$(TSUF) $@
	$(AM_V_at)rm -f -r $@$(TSUF)*
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

windows-portable-native: FORCE pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-native.zip
install-java-main-jardeps-targets: build-aux/downloads/bcpkix-jdk15on-1.69.jar
install-java-main-jardeps: \
  install-java-main-jardeps-build-aux/downloads/bcpkix-jdk15on-1.69.jar
install-java-main-jardeps-build-aux/downloads/bcpkix-jdk15on-1.69.jar: FORCE build-aux/downloads/bcpkix-jdk15on-1.69.jar
	@$(NORMAL_INSTALL)
	$(MKDIR_P) '$(DESTDIR)$(javadir)'
	$(INSTALL_DATA) build-aux/downloads/bcpkix-jdk15on-1.69.jar '$(DESTDIR)$(javadir)'
install-java-main-jardeps-targets: build-aux/downloads/bcprov-jdk15on-1.69.jar
install-java-main-jardeps: \
  install-java-main-jardeps-build-aux/downloads/bcprov-jdk15on-1.69.jar
install-java-main-jardeps-build-aux/downloads/bcprov-jdk15on-1.69.jar: FORCE build-aux/downloads/bcprov-jdk15on-1.69.jar
	@$(NORMAL_INSTALL)
	$(MKDIR_P) '$(DESTDIR)$(javadir)'
	$(INSTALL_DATA) build-aux/downloads/bcprov-jdk15on-1.69.jar '$(DESTDIR)$(javadir)'
install-java-main-jardeps-targets: build-aux/downloads/bcutil-jdk15on-1.69.jar
install-java-main-jardeps: \
  install-java-main-jardeps-build-aux/downloads/bcutil-jdk15on-1.69.jar
install-java-main-jardeps-build-aux/downloads/bcutil-jdk15on-1.69.jar: FORCE build-aux/downloads/bcutil-jdk15on-1.69.jar
	@$(NORMAL_INSTALL)
	$(MKDIR_P) '$(DESTDIR)$(javadir)'
	$(INSTALL_DATA) build-aux/downloads/bcutil-jdk15on-1.69.jar '$(DESTDIR)$(javadir)'
install-java-main-jardeps-targets: build-aux/downloads/json-20210307.jar
install-java-main-jardeps: \
  install-java-main-jardeps-build-aux/downloads/json-20210307.jar
install-java-main-jardeps-build-aux/downloads/json-20210307.jar: FORCE build-aux/downloads/json-20210307.jar
	@$(NORMAL_INSTALL)
	$(MKDIR_P) '$(DESTDIR)$(javadir)'
	$(INSTALL_DATA) build-aux/downloads/json-20210307.jar '$(DESTDIR)$(javadir)'
install-java-main-jardeps-targets: build-aux/downloads/mssql-jdbc-9.4.0.jre8.jar
install-java-main-jardeps: \
  install-java-main-jardeps-build-aux/downloads/mssql-jdbc-9.4.0.jre8.jar
install-java-main-jardeps-build-aux/downloads/mssql-jdbc-9.4.0.jre8.jar: FORCE build-aux/downloads/mssql-jdbc-9.4.0.jre8.jar
	@$(NORMAL_INSTALL)
	$(MKDIR_P) '$(DESTDIR)$(javadir)'
	$(INSTALL_DATA) build-aux/downloads/mssql-jdbc-9.4.0.jre8.jar '$(DESTDIR)$(javadir)'
install-java-main-jardeps-targets: build-aux/downloads/mysql-connector-java-8.0.17.jar
install-java-main-jardeps: \
  install-java-main-jardeps-build-aux/downloads/mysql-connector-java-8.0.17.jar
install-java-main-jardeps-build-aux/downloads/mysql-connector-java-8.0.17.jar: FORCE build-aux/downloads/mysql-connector-java-8.0.17.jar
	@$(NORMAL_INSTALL)
	$(MKDIR_P) '$(DESTDIR)$(javadir)'
	$(INSTALL_DATA) build-aux/downloads/mysql-connector-java-8.0.17.jar '$(DESTDIR)$(javadir)'
install-java-main-jardeps-targets: build-aux/downloads/netty-all-4.1.65.Final.jar
install-java-main-jardeps: \
  install-java-main-jardeps-build-aux/downloads/netty-all-4.1.65.Final.jar
install-java-main-jardeps-build-aux/downloads/netty-all-4.1.65.Final.jar: FORCE build-aux/downloads/netty-all-4.1.65.Final.jar
	@$(NORMAL_INSTALL)
	$(MKDIR_P) '$(DESTDIR)$(javadir)'
	$(INSTALL_DATA) build-aux/downloads/netty-all-4.1.65.Final.jar '$(DESTDIR)$(javadir)'
install-java-main-jardeps-targets: build-aux/downloads/postgresql-42.2.6.jar
install-java-main-jardeps: \
  install-java-main-jardeps-build-aux/downloads/postgresql-42.2.6.jar
install-java-main-jardeps-build-aux/downloads/postgresql-42.2.6.jar: FORCE build-aux/downloads/postgresql-42.2.6.jar
	@$(NORMAL_INSTALL)
	$(MKDIR_P) '$(DESTDIR)$(javadir)'
	$(INSTALL_DATA) build-aux/downloads/postgresql-42.2.6.jar '$(DESTDIR)$(javadir)'
install-java-main-jardeps-targets: build-aux/downloads/sqlite-jdbc-3.36.0.1.jar
install-java-main-jardeps: \
  install-java-main-jardeps-build-aux/downloads/sqlite-jdbc-3.36.0.1.jar
install-java-main-jardeps-build-aux/downloads/sqlite-jdbc-3.36.0.1.jar: FORCE build-aux/downloads/sqlite-jdbc-3.36.0.1.jar
	@$(NORMAL_INSTALL)
	$(MKDIR_P) '$(DESTDIR)$(javadir)'
	$(INSTALL_DATA) build-aux/downloads/sqlite-jdbc-3.36.0.1.jar '$(DESTDIR)$(javadir)'
lib/pulsar-vlds.jar: 
java-main: lib/pulsar-vlds.jar.classpath
java-main: lib/pulsar-vlds.jar.build_tree_classpath

install-java-main-jardeps-targets: FORCE
install-java-main-jardeps: FORCE
install-java-jardeps-targets: FORCE
install-java-jardeps: FORCE

.PHONY: install-java-main-jardeps-targets
.PHONY: install-java-main-jardeps
.PHONY: install-java-jardeps-targets
.PHONY: install-java-jardeps

install-java-jardeps-targets: install-java-main-jardeps-targets

install-java-jardeps: install-java-main-jardeps

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
