#
# Copyright (C) 2018-2023 Stealth Software Technologies, Inc.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice (including
# the next paragraph) shall be included in all copies or
# substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT
#

f() {

  declare d
  declare dst
  declare dst_slug
  declare i
  declare -a jni_names
  declare -a reflection_names
  declare src
  declare x

  sst_expect_source_path "$BASH_SOURCE"
  d=$(sst_expect_prefix $BASH_SOURCE)
  readonly d

  dst='pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-native'
  readonly dst

  dst_slug=$(sst_underscore_slug ${dst//[\$\(\)]/})
  readonly dst_slug

  src='pulsar-vlds-$(PACKAGE_VERSION)-windows-portable-java.zip'
  readonly src

  for x in \
    ${d}jni-config.json.raw \
    ${d}predefined-classes-config.json.raw \
    ${d}proxy-config.json.raw \
    ${d}reflect-config.json.raw \
    ${d}resource-config.json.raw \
    ${d}serialization-config.json.raw \
  ; do
    sst_ihs <<<'
      //
      // Copyright (C) 2018-2023 Stealth Software Technologies, Inc.
      //
      // Permission is hereby granted, free of charge, to any person
      // obtaining a copy of this software and associated documentation
      // files (the "Software"), to deal in the Software without
      // restriction, including without limitation the rights to use,
      // copy, modify, merge, publish, distribute, sublicense, and/or
      // sell copies of the Software, and to permit persons to whom the
      // Software is furnished to do so, subject to the following
      // conditions:
      //
      // The above copyright notice and this permission notice (including
      // the next paragraph) shall be included in all copies or
      // substantial portions of the Software.
      //
      // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
      // EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
      // OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
      // NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
      // HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
      // WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
      // FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
      // OTHER DEALINGS IN THE SOFTWARE.
      //
      // SPDX-License-Identifier: MIT
      //

    ' | cat - $x >${x%.raw}
  done

  sst_am_distribute \
    ${d}jni-config.json \
    ${d}predefined-classes-config.json \
    ${d}proxy-config.json \
    ${d}recipe.sh \
    ${d}reflect-config.json \
    ${d}resource-config.json \
    ${d}serialization-config.json \
    ${d}server.cmd \
  ;

  sst_ihs <<<'

    '$dst_slug'_prereqs = \
      '$d'jni-config.json \
      '$d'predefined-classes-config.json \
      '$d'proxy-config.json \
      '$d'recipe.sh \
      '$d'reflect-config.json \
      '$d'resource-config.json \
      '$d'serialization-config.json \
      '$d'server.cmd \
      '$src' \
    $(empty)

    '$dst': $('$dst_slug'_prereqs)
    	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
    	$(AM_V_GEN)$(GATBPS_V_NOP)
    	$(AM_V_at)rm -f -r $@$(TSUF)* $@
    	$(AM_V_at)$(MKDIR_P) $(@D)
    	$(GATBPS_at)( \
    	  x=AM_V_P; set x $(AM_V_P); $(GATBPS_EXPORT); \
    	  x=NATIVE_IMAGE; set x $(NATIVE_IMAGE); $(GATBPS_EXPORT); \
    	  x=SED; set x $(SED); $(GATBPS_EXPORT); \
    	  x=TSUF; set x $(TSUF); $(GATBPS_EXPORT); \
    	  x=UNZIP; set x $(UNZIP); $(GATBPS_EXPORT); \
    	  x=VCVARS; set x $(VCVARS); $(GATBPS_EXPORT); \
    	  x=d; set x '$d'; $(GATBPS_EXPORT); \
    	  x=dst; set x '$dst'; $(GATBPS_EXPORT); \
    	  x=src; set x '$src'; $(GATBPS_EXPORT); \
    	  sh $(srcdir)/'$d'recipe.sh || exit $$?; \
    	)
    	$(AM_V_at)rm -f -r $@$(TSUF)*
    	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

    GATBPS_MOSTLYCLEANFILES += '$dst'/clean

    '$dst_slug'_zip_prereqs = \
      '$dst' \
    $(EMPTY)

    '$dst'.zip: $('$dst_slug'_zip_prereqs)
    	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
    	$(GATBPS_V_ZIP)$(GATBPS_V_NOP)
    	$(AM_V_at)rm -f -r $@$(TSUF)* $@
    	$(AM_V_at)(cd $(?D) && $(ZIP) -r - $(?F)) >$@$(TSUF)
    	$(AM_V_at)mv -f $@$(TSUF) $@
    	$(AM_V_at)rm -f -r $@$(TSUF)*
    	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

    GATBPS_MOSTLYCLEANFILES += '$dst'.zip/clean

    windows-portable-native: FORCE '$dst'.zip

  ' | sst_am_append

}; f
