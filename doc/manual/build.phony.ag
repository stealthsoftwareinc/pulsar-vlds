#
# Copyright (C) 2018-2023 Stealth Software Technologies, Inc.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice (including
# the next paragraph) shall be included in all copies or
# substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT
#

f() {

  declare    x

  sst_expect_source_path "$BASH_SOURCE"
  d=$(sst_get_prefix $BASH_SOURCE)

  if [[ "$d" != manual/ && "$d" != */manual/ ]]; then
    sst_barf $(
      )'file must live in a directory named "manual": %s'$(
      ) \
      $BASH_SOURCE \
    ;
  fi

  dd=$(sst_get_prefix ${d%/})
  dd_slug=$(sst_underscore_slug "$dd")

  sst_ajh_asciidoctor_document ${d}*.html.ag.json

  sst_ihs <<<"

    GATBPS_TAR(
      [\$(manual_dst).tar],
      [\$(manual_dst)])

    GATBPS_XZ(
      [\$(manual_dst).tar.xz],
      [\$(manual_dst).tar],
      [maintainer-clean],
      [\$(manual_dst_leaves)])

    GATBPS_CP(
      [${dd}\$(PACKAGE_TARNAME)-manual.tar.xz],
      [\$(manual_dst).tar.xz],
      [file],
      [maintainer-clean])

  " | sst_ac_append

  sst_ihs <<<"

    manual_dst = ${dd}\$(PACKAGE_TARNAME)-\$(PACKAGE_VERSION)-manual

    \$(manual_dst): ${dd}manual.tar
    	\$(AM_V_at)\$(GATBPS_RECIPE_MARKER_TOP)
    	\$(AM_V_GEN)\$(GATBPS_V_NOP)
    	\$(AM_V_at)rm -f -r \$@ \$@\$(TSUF)*
    	\$(AM_V_at)\$(MKDIR_P) \$@\$(TSUF)
    	\$(AM_V_at)(cd \$@\$(TSUF) && \$(TAR) x) <${dd}manual.tar
    	\$(AM_V_at)touch \$@\$(TSUF)/*
    	\$(AM_V_at)mv -f \$@\$(TSUF)/* \$@
    	\$(AM_V_at)\$(GATBPS_RECIPE_MARKER_BOT)

    manual_dst_leaves = \$(${dd_slug}manual_tar_leaves)

    GATBPS_MOSTLYCLEANFILES += \$(manual_dst)/clean
    \$(manual_dst)/clean: ${dd}manual.tar/clean

    EXTRA_DIST += \$(manual_dst).tar.xz
    EXTRA_DIST += ${dd}\$(PACKAGE_TARNAME)-manual.tar.xz

    manual: FORCE
    manual: \$(manual_dst)

    clean-manual: FORCE
    clean-manual: \$(manual_dst)/clean

  " | sst_am_append

  #---------------------------------------------------------------------
  # Construct define_attributes.adoc
  #---------------------------------------------------------------------

  >${d}define_attributes.adoc

  sst_ihs <<<'
    :define_attributes:

  ' >>${d}define_attributes.adoc

  for x in ${d}**/*.adoc; do
    sst_expect_source_path "$x"
    y=$(sed -n '
      /^ifdef::define_attributes\[\]$/ {
        p
        q
      }
    ' $x)
    if [[ "$y" ]]; then
      sst_ihs <<<'
        include::'${x#$d}'[]
      ' >>${d}define_attributes.adoc
    fi
  done

  sst_ihs <<<'

    :!define_attributes:
  ' >>${d}define_attributes.adoc

  #---------------------------------------------------------------------

}

f
